[{
	"last_chapter_rule": "js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));chapter();",
	"title": "资源网采集.xyq",
	"author": "香雅情",
	"version": 3,
	"type": "all",
	"url": "hiker://files/rules/xyq/ZYWCJ.txt",
	"col_type": "movie_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywhm();",
	"searchFind": "js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywsea();",
	"search_url": "hiker://$$$?wd=**&pg=1&ac=list$$$fypage",
	"titleColor": "",
	"group": "①轻合集",
	"detail_col_type": "movie_1",
	"detail_find_rule": "js:\r\neval(fetch('hiker://files/rules/xyq/zywcj.js',{}));\nTWEJ();",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywerj();",
	"ua": "mobile",
	"preRule": "function uprulefile() {\n    try {\n        var ruletxt = fetch('https://codeberg.org/lzk23559/PublicRule/raw/branch/master/ZYWCJ.txt', {});\n        var rulejs = fetch('https://codeberg.org/lzk23559/PublicRule/raw/branch/master/zywcj.js', {});\n    } catch (e) {\n        rulejs = \"\";\n        ruletxt = \"\";\n    }\n    if (rulejs.search(/lazyRule/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/zywcj.js\", rulejs);\n        writeFile(\"hiker://files/rules/xyq/ZYWCJ.txt\", ruletxt);\n    } else {\n        setError('规则文件获取失败，可能网络有问题。')\n    };\n};\n\n//检测是否有规则与JS文件\nif (fileExist(\"hiker://files/rules/xyq/zywcj.js\") && fileExist(\"hiker://files/rules/xyq/ZYWCJ.txt\")) {\n    //执行预处理\n    var lac = fetch('hiker://files/rules/xyq/zywcj.js');\n    if (lac.search(/lazyRule/) != -1) {\n        eval(lac);\n        if (filter(base64Decode('VklQ'))) {\n            zywpre();\n        } else {\n            uprulefile();\n        };\n    } else {\n        //如果本地文件不对将尝试自修复\n        uprulefile();\n        eval(fetch('hiker://files/rules/xyq/zywcj.js'));\n        zywpre();\n    };\n} else {\n    uprulefile();\n    //执行预处理\n    eval(fetch('hiker://files/rules/xyq/zywcj.js'));\n    zywpre();\n};",
	"pages": "[]",
	"icon": "https://codeberg.org/lzk23559/PublicRule/raw/branch/master/zywcj.png"
}, {
	"last_chapter_rule": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikchapter();",
	"title": "香情影视",
	"author": "香雅情",
	"version": 7,
	"type": "all",
	"url": "hiker://files/rules/xyq/hikermovie.json",
	"col_type": "icon_4_card",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikhmrule();",
	"searchFind": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hiksearch();",
	"search_url": "hiker://empty$$$hiker://files/rules/xyq/hikermovie.json$$$**$$$fypage$$$",
	"titleColor": "#fff20c00",
	"group": "①轻合集",
	"detail_col_type": "movie_1",
	"detail_find_rule": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikhmerj();",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikseaerji();",
	"ua": "mobile",
	"preRule": "//设置更新间隔时间,单位为整数天。\nvar uptime = 2;\n\nfunction uprulefile() {\n    var rulejs = fetch('https://code.aliyun.com/lzk23559/CloudRule/raw/master/hikermovie.js', {});\n    if (rulejs.search(/lazyRule/) == -1) {\n        rulejs = fetch('https://codeberg.org/lzk23559/cloudrule/raw/branch/master/hikermovie.js', {});\n    }\n    if (rulejs.search(/lazyRule/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikermovie.js\", rulejs);\n    }\n    var rulejson = fetch('https://code.aliyun.com/lzk23559/CloudRule/raw/master/hikermovie.json', {});\n    if (rulejson.search(/\\\"vodhref\\\"/) == -1) {\n        rulejson = fetch('https://codeberg.org/lzk23559/cloudrule/raw/branch/master/hikermovie.json', {});\n    }\n    if (rulejson.search(/\\\"vodhref\\\"/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikermovie.json\", rulejson);\n    }\n    if (rulejs.search(/lazyRule/) != -1 && rulejson.search(/\\\"vodhref\\\"/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikerupdate.txt\", new Date() + '');\n        confirm({title:'提示', content:'自动更新完成'});\n    } else {\n        confirm({title:'提示', content:'自动更新失败'});\n    }\n}\n\n\n\n//检测是否有写入时间与规则的js插件文件\nif (fileExist(\"hiker://files/rules/xyq/hikerupdate.txt\") && fileExist(\"hiker://files/rules/xyq/hikermovie.js\") && fileExist(\"hiker://files/rules/xyq/hikermovie.json\")) {\n    //计算时间间隔\n    var start = new Date(fetch(\"hiker://files/rules/xyq/hikerupdate.txt\", {}));\n    var nowt = new Date();\n    var D_T = nowt.getTime() - start.getTime();\n    var D_D = D_T / (1000 * 3600 * 24);\n    var tdif = parseInt(D_D) + '';\n    //log(tdif);\n    //默认间隔超过设置天数就取一次云端文件\n    if (tdif >= uptime || tdif < 0) {\n        uprulefile();\n    }\n} else {\n    //如果少一个文件就自动取云端文件\n    uprulefile();\n}\n\n\n\n//执行需要预处理的站点\nvar lac = fetch('hiker://files/rules/xyq/hikermovie.js');\n//log(lac.length);\nif (lac.search(/lazyRule/) != -1) {\n    eval(lac);\n    hikerpre();\n} else {\n    //如果本地文件不对将尝试自修复\n    uprulefile();\n    setError('规则修复完成，如有问题请反馈。')\n}",
	"pages": "[]",
	"icon": "https://codeberg.org/lzk23559/PublicRule/raw/branch/master/xqys.png"
}, {
	"last_chapter_rule": "",
	"title": "轻直播.鬼才",
	"author": "小棉袄🌞",
	"version": 35,
	"type": "live",
	"url": "hiker://empty##https://gitee.com/lzhgc/diy/raw/1/%E8%8A%82%E7%9B%AE",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                //.replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "轻直播.Tee",
	"author": "小棉袄🌞",
	"version": 20211230,
	"type": "live",
	"url": "hiker://empty##https://shuyuan.miaogongzi.net/shuyuan/1640882974.txt",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                .replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "轻直播.七彩",
	"author": "小棉袄🌞&七彩人生&枫林雨殇",
	"version": 36,
	"type": "live",
	"url": "hiker://empty##http://82.156.222.77/iptv/tv.txt",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\nputMyVar('my',MY_URL.split(\"##\")[1])\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(getMyVar('my'), key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n\\n        try {\\n            let html = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (html.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            const d1 = []\\n            try {\\n                if (filter != null) {\\n                    var lists = html.replace(/[\\\\S]*\\\\$|\\\\$\\\\$\\\\$/g, \\\"\\\")\\n                    var list = lists.split('\\\\n')\\n                } else {\\n                    if (html.indexOf('@@@') > -1) {\\n                        var conts = html.split('@@@');\\n                    } else {\\n                        var conts = html.split('$$$');\\n                    }\\n                    var lists = [];\\n                    var tabs = [];\\n\\n                    for (let i in conts) {\\n                        lists.push(conts[i].split('$')[1].split('\\\\n'))\\n                        tabs.push(conts[i].split('$')[0])\\n                    }\\n\\n                    var fold = getVar(\\\"aa\\\", \\\"0\\\");\\n                    var tab = \\\"www\\\";\\n\\n                    for (let i = 0; i < 8; i++) {\\n                        _d.push({\\n                            col_type: \\\"blank_block\\\"\\n                        })\\n                    }\\n                    for (var i = 0; i < tabs.length; i++) {\\n                        _d.push({\\n                            title: getVar(tab, '0') == i ? '‘‘’’<strong><font color=\\\"#19B89D\\\">' + tabs[i] + '</front></strong>' : tabs[i],\\n                            url: i + `@lazyRule=.js:putVar('` + tab + \\\"', '\\\" + i + `');putVar('bb',input);putVar('aa','1');refreshPage();'toast://切换线路';'#noHistory#hiker://empty'`,\\n                            col_type: 'flex_button'\\n                        })\\n                    }\\n                    _d.push({\\n                        col_type: \\\"line_blank\\\"\\n                    })\\n\\n                    if (getVar('bb') >= tabs.length) {\\n                        var list = lists[0]\\n                    } else if (fold === \\\"0\\\") {\\n                        var list = lists[0]\\n                    } else {\\n                        var list = lists[getVar('bb')]\\n                    }\\n\\n                }\\n            } catch (e) {\\n                var list = html.replace(/#EXTINF:-1 ,/g, '')\\n                    .replace(/#EXTINF:-1,/g, '')\\n                    .replace(/\\\\n#genre#/g, ',#genre#')\\n                    .replace(/#EXTINF:-1/g, '')\\n                    .replace(/group-title=\\\"/g, '')\\n                    .replace(/\\\\nhttp/g, ',http')\\n                    //.replace(/=/g, '')\\n                    .replace(/，#/g, ',#')\\n                    .replace(/\\\",/g, '/')\\n                    .replace(/ /g, '')\\n                    .split('\\\\n');\\n            }\\n            for (var i = 0; i < list.length; i++) {\\n                var r = {};\\n                var j = list[i].split(',');\\n                if (list[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    col_type: 'icon_2_round',\\n                    img: \\\"https://lanmeiguojiang.com/tubiao/more/228.png\\\",\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n\\n            let _td = readFile(\\\"data.json\\\").replace(/{\\\"col_type.*line_blank\\\"},/g, \\\"\\\");\\n            log(_td)\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "轻直播.不知名",
	"author": "小棉袄🌞",
	"version": 37,
	"type": "live",
	"url": "hiker://empty##https://pastebin.com/raw/AHJEEkB4",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                //.replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                if (r.url.includes(\\\"/at/xml\\\") ||\\n                    r.url.endsWith(\\\"=#isVideo=true#\\\") ||\\n                    r.url.endsWith(\\\"xml#isVideo=true#\\\") ||\\n                    r.url.endsWith(\\\"api.php#isVideo=true#\\\")) {\\n                    continue;\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "轻直播.影视频道",
	"author": "小棉袄🌞入戏",
	"version": 32,
	"type": "live",
	"url": "hiker://empty##https://shuyuan.miaogongzi.net/shuyuan/1640533698.txt",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                .replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "轻直播.Tee测试",
	"author": "小棉袄🌞",
	"version": 20211230,
	"type": "live",
	"url": "hiker://empty##https://shuyuan.miaogongzi.net/shuyuan/1640882974.txt",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                .replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "轻直播.镇弟",
	"author": "镇弟",
	"version": 36,
	"type": "live",
	"url": "hiker://empty##https://cdn.jsdelivr.net/gh/qiusunshine/hiker-rules/rules/live/zhendi.txt",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                //.replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "蓝鸟直播源",
	"author": "随风",
	"version": 0,
	"type": "live",
	"url": "https://%6d%70%2e%77%65%69%78%69%6e%2e%71%71%2e%63%6f%6d/s/sGCLOMORmLyhJ2XrOxSgvg",
	"col_type": "text_2",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:var res = {};\nvar d = [];\nvar list = parseDomForArray(getResCode(), 'body&&.rich_media_content&&p');\nfor(var i in list){\ntry{\nd.push({\ntitle:parseDomForHtml(list[i],'Text').replace(/,http.*/g,'').replace(/.http.*/g,''),\nurl:parseDom(list[i],'Text').replace(/https.*,/g,'').replace(/https.*./g,''),\n});\n  }catch(e){}\n}\nres.data = d;\nsetHomeResult(res);",
	"searchFind": "",
	"search_url": "",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "轻直播.七彩2",
	"author": "小棉袄🌞",
	"version": 32,
	"type": "other",
	"url": "hiker://empty##http://82.156.222.77/iptv/tv2.txt",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                .replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": "https://lanmeiguojiang.com/tubiao/movie/98.svg"
}, {
	"last_chapter_rule": "",
	"title": "综合直播",
	"author": "小棉袄🌞入戏",
	"version": 32,
	"type": "other",
	"url": "hiker://empty##http://42.193.55.242/tv/xzb.php",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                .replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}, {
	"last_chapter_rule": "",
	"title": "轻直播.T",
	"author": "",
	"version": 0,
	"type": "live",
	"url": "hiker://empty##https://shuyuan.miaogongzi.net/shuyuan/1641780800.txt",
	"col_type": "text_3",
	"class_name": "",
	"class_url": "",
	"area_name": "",
	"area_url": "",
	"sort_name": "",
	"year_name": "",
	"sort_url": "",
	"year_url": "",
	"find_rule": "js:\nvar data = [];\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);",
	"searchFind": "js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1], key)\nsetResult(data);",
	"search_url": "hiker://empty##**",
	"group": "⑥直播",
	"detail_col_type": "movie_1",
	"detail_find_rule": "",
	"sdetail_col_type": "movie_1",
	"sdetail_find_rule": "",
	"ua": "mobile",
	"preRule": "",
	"pages": "[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n        try {\\n            let net = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (net.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            var txts = net.replace(/#EXTINF:-1 ,/g, '')\\n                .replace(/#EXTINF:-1,/g, '')\\n                .replace(/\\\\n#genre#/g, ',#genre#')\\n                .replace(/#EXTINF:-1/g, '')\\n                .replace(/group-title=\\\"/g, '')\\n                .replace(/\\\\nhttp/g, ',http')\\n                .replace(/=/g, '')\\n                .replace(/，#/g, ',#')\\n                .replace(/\\\",/g, '/')\\n                .replace(/ /g, '')\\n                .split('\\\\n');\\n            const d1 = []\\n            for (var i = 0; i < txts.length; i++) {\\n                var r = {};\\n                var j = txts[i].split(',');\\n                if (txts[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n            let _td = readFile(\\\"data.json\\\");\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]",
	"icon": ""
}]
