[
  {
    "last_chapter_rule": "",
    "title": "APPÂΩ±ËßÜ(P)",
    "author": "È¶ôÈõÖÊÉÖ",
    "url": "hiker://empty",
    "version": 6,
    "col_type": "movie_3",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst canUse = $.require(\"hiker://page/wait\");\nif (canUse) {\n    var items = [];\n    var self = JSON.parse(getRule()).title;\n    var setjson = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {}));\n    var ssmd = setjson.ssmode;\n    var ssxc = setjson.sscount;\n    var locver = MY_RULE.version;\n    //Êâì‰π±È°∫Â∫è\n    var random = true;\n\n    function randomSort3(arr) {\n        arr.sort(function(a, b) {\n            return Math.random() - 0.5;\n        });\n        return arr;\n    }\n\n    items.push({\n        title: 'üîçËÆæÁΩÆ' + '(' + (ssmd == 1 ? 'ËÅö' + ssxc : 'Âàó') + ')',\n        //title : 'üîçËÆæÁΩÆ'+'('+ssxc+')',\n        url: $('hiker://empty').rule((locver) => {\n        eval(JSON.parse(fetch('hiker://page/setting', {})).rule);\n        },locver),\n        col_type: 'flex_button'\n    });\n\n    items.push({\n        title: 'ËµÑÊ∫êÁΩëÈááÈõÜ',\n        url: 'hiker://home@ËµÑÊ∫êÁΩëÈááÈõÜ.xyq||https://haikuoshijie.cn/topic/6033',\n        col_type: 'flex_button'\n    });\n    items.push({\n        title: 'È¶ôÊÉÖÂΩ±ËßÜ',\n        url: 'hiker://home@È¶ôÊÉÖÂΩ±ËßÜ||https://mp.weixin.qq.com/s/XpUI3F1nBvlNgHXvY71t0g',\n        col_type: 'flex_button'\n    });\n    items.push({\n        title: \"ÊêúÁ¥¢\",\n        url: $.toString(() => {\n            var link = 'hiker://empty#noRecordHistory#$$$' + input + '$$$fypage$$$';\n            //log(link);\n            return $(link).rule(() => {\n                $.require('hiker://page/sear');\n            });\n        }),\n        extra: {\n            onChange: \"putVar('xyqappystext',input)\",\n            titleVisible: true\n        },\n        desc: \"ËØ∑ËæìÂÖ•ÊêúÁ¥¢ÂÖ≥ÈîÆËØç\",\n        col_type: \"input\"\n    });\n\n    var ssyq = ['ËµÑÊ∫êÁΩëÈááÈõÜÊêú@@ËµÑÊ∫êÁΩëÈááÈõÜ.xyq', 'È¶ôÊÉÖÂΩ±ËßÜÊêú@@È¶ôÊÉÖÂΩ±ËßÜ'];\n    if (self !== 'APPÂΩ±ËßÜ(P)') {\n        items.push({\n            title: self + 'Êêú',\n            url: $(\"#noLoading#\").lazyRule(rule => 'hiker://search?s=' + getVar('xyqappystext') + '&rule=' + rule, self),\n            col_type: 'flex_button'\n        });\n    } else {\n        for (var yq in ssyq) {\n            var kj = ssyq[yq].split('@@');\n            items.push({\n                title: kj[0],\n                url: $(\"#noLoading#\").lazyRule(rule => 'hiker://search?s=' + getVar('xyqappystext') + '&rule=' + rule, kj[1]),\n                col_type: \"flex_button\"\n            });\n        }\n    }\n    items.push({\n        title: 'Ëå∂ÊùØÁãêÊêú',\n        url: $('hiker://empty#x#fypage@-1@*24@#x#').rule(() => {\n            var res = {};\n            var d = [];\n            var spl = MY_URL.split('#x#');\n            //var lin = 'https://api2.jackeriss.com/api/v1/search/?text=' + spl[1] + '&type=0&from=' + spl[2] + '&size=20';\n            var lin = 'https://api.jackeriss.com/api/v1/search/?text=' + getVar('xyqappystext') + '&type=0&from=' + spl[1] + '&size=24';\n            var pn = spl[1] / 24 + 1;\n            var urlo = JSON.parse(request(lin, {}));\n            var urlt = JSON.parse(fetch(lin.replace('type=0', 'type=1'), {}));\n            //log(urlo);\n            if (urlo.resources.length < 1 && urlt.resources.length < 1) {\n                d.push({\n                    title: 'ÂΩìÂâçÂÖ≥ÈîÆÂ≠ó  ' + getVar('xyqappystext') + '  Êó†ÊêúÁ¥¢ÁªìÊûú',\n                    col_type: 'text_center_1'\n                });\n            }\n            if (urlo.resources.length > 0) {\n                d.push({\n                    title: '‚ô•ÂΩìÂâçÁ¨¨' + pn + 'È°µ',\n                    col_type: 'text_center_1'\n                });\n\n                for (var i = 0; i < urlo.resources.length; i++) {\n                    var title = urlo.resources[i].text.replace(/\\<.*?\\>/g, '');\n                    var url = urlo.resources[i].url;\n                    var desc = urlo.resources[i].website;\n                    d.push({\n                        title: title.replace(getVar('xyqappystext'), '‚Äú‚Äú' + getVar('xyqappystext') + '‚Äù‚Äù') + '  ' + desc + '  Âú®Á∫ø',\n                        url: url,\n                        //desc: 'Âú®Á∫øÊêúÁ¥¢ÁªìÊûú',\n                        col_type: 'text_1'\n                    });\n                }\n            }\n\n            if (urlt.resources.length > 0) {\n                for (var j = 0; j < urlt.resources.length; j++) {\n                    var title = urlt.resources[j].text.replace(/\\<.*?\\>/g, '');\n                    var url = urlt.resources[j].url;\n                    var desc = urlt.resources[j].website;\n                    d.push({\n                        title: title.replace(getVar('xyqappystext'), '‚Äú‚Äú' + getVar('xyqappystext') + '‚Äù‚Äù') + '  ' + desc + '  ‰∏ãËΩΩ',\n                        url: url,\n                        //desc: '‰∏ãËΩΩÊêúÁ¥¢ÁªìÊûú',\n                        col_type: 'text_1'\n                    });\n                }\n            }\n            res.data = d;\n            setResult(res);\n        }),\n        col_type: \"flex_button\"\n    });\n\n    var html = JSON.parse(JSON.parse(fetch('hiker://page/ResCode', {})).rule);\n    //var html = JSON.parse(fetchCache('https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/APPÂΩ±ËßÜÂàóË°®', 24));\n\n    var conts = html.data;\n    for (var i = 0; i < conts.length; i++) {\n        var list = conts[i].list;\n        var tytit = conts[i].title;\n        items.push({\n            title: tytit + ' ' + [list.length],\n            url: 'hiker://empty',\n            col_type: 'text_1'\n        });\n\n        if (random) {\n            let k = getVar(MY_RULE.title + \"-\" + tytit, \"\");\n            if (k == \"\") {\n                list = randomSort3(list)\n                putVar(MY_RULE.title + \"-\" + tytit, JSON.stringify(list))\n            } else {\n                list = JSON.parse(k)\n            }\n        }\n        for (var j = 0; j < list.length; j++) {\n            var title = list[j].title;\n            var turl = list[j].url;\n            var img = list[j].img;\n            if (/TVÂΩ±ËßÜ/.test(tytit)) {\n                var url = 'hiker://empty$$' + tytit + '$$' + turl + '$$?ac=list&class=&page=fypage&area=&type=&start=$$';\n            } else if (/APPÂΩ±ËßÜ/.test(tytit)) {\n                if (turl.indexOf('api.php/app/') != -1) {\n                    var url = 'hiker://empty$$' + tytit + '$$' + turl + '$$index_video?token=$$';\n                } else if (turl.indexOf('xgapp.php/v1/') != -1) {\n                    var url = 'hiker://empty$$' + tytit + '$$' + turl + '$$index_video?token=$$';\n                } else {\n                    var url = 'hiker://empty$$' + tytit + '$$' + turl + '$$/vodPhbAll$$';\n                }\n            }\n            items.push({\n                title: title,\n                url: url,\n                pic_url: img,\n                col_type: 'icon_round_small_4'\n            });\n        }\n    }\n    setResult({\n        data: items\n    });\n}",
    "search_url": "hiker://empty$$$**$$$fypage$$$",
    "group": "‚ë°ÂΩ±Êêú",
    "searchFind": "js:\nconst canUse = $.require(\"hiker://page/wait\");\nif (canUse) {\n    $.require('hiker://page/sear');\n}",
    "detail_col_type": "movie_1",
    "detail_find_rule": "js:\nvar res = {};\nvar items = [];\nvar typet = MY_URL.split('$$')[1];\nvar murl = MY_URL.split('$$')[2];\nvar turl = murl + MY_URL.split('$$')[3];\n\nif (/TVÂΩ±ËßÜ/.test(typet)) {\n    var pg = MY_URL.match(/page\\=([\\d]*)/)[1];\n    if (pg == 1) {\n        var typt = ('ÁîµÂΩ±&ËøûÁª≠Ââß&ÁªºËâ∫&Âä®Êº´').split('&');\n        var typl = ('movie&tvplay&tvshow&comic').split('&');\n\n        for (var i = 0; i < typt.length; i++) {\n            var tyurl = murl + '?ac=list&class=' + typl[i] + '&page=fypage&area=&type=&start=';\n            items.push({\n                title: typt[i],\n                url: $(tyurl).rule((murl) => {\n                    var res = {};\n                    var items = [];\n                    var murl = murl;\n                    var html = JSON.parse(getResCode());\n                    eval(JSON.parse(fetch('hiker://page/tvlistdata', {})).rule);\n                    res.data = items;\n                    setHomeResult(res);\n                }, murl),\n                col_type: 'flex_button'\n            })\n        }\n        items.push({\n            col_type: 'line'\n        });\n    }\n\n    try {\n        var html = JSON.parse(fetch(turl));\n        eval(JSON.parse(fetch('hiker://page/tvlistdata', {})).rule);\n    } catch (e) {}\n} else if (/APPÂΩ±ËßÜ/.test(typet)) {\n\n    try {\n        if (murl.search(/api.php\\/app/) != -1) {\n\n            var typcode = request(murl + \"nav?token=\", {\n                headers: {\n                    \"User-Agent\": \"Dart/2.13 (dart:io)\"\n                }\n            });\n            if (typcode.indexOf('Ê£ÄÊµã‰∏≠') != -1) {\n                typcode = fetch(murl + \"nav?token=\" + '&btwaf' + typcode.match(/btwaf(.*?)\\\"/)[1], {});\n            }\n            var typec = JSON.parse(typcode).list;\n\n        } else if (murl.search(/xgapp.php\\/v1/) != -1) {\n\n            var typcode = request(murl + \"nav?token=\", {\n                headers: {\n                    \"User-Agent\": \"Dart/2.13 (dart:io)\"\n                }\n            });\n            if (typcode.indexOf('Ê£ÄÊµã‰∏≠') != -1) {\n                typcode = fetch(murl + \"nav?token=\" + '&btwaf' + typcode.match(/btwaf(.*?)\\\"/)[1], {});\n            }\n            var typec = JSON.parse(typcode).data;\n\n        } else {\n            var typcode = request(murl + \"/types\", {\n                headers: {\n                    \"User-Agent\": \"Dart/2.13 (dart:io)\"\n                }\n            });\n            if (typcode.indexOf('Ê£ÄÊµã‰∏≠') != -1) {\n                typcode = fetch(murl + \"/types\" + '?btwaf' + typcode.match(/btwaf(.*?)\\\"/)[1], {});\n            }\n            var typec = JSON.parse(typcode).data.list;\n\n        }\n        var typet = \"\",\n            typel = \"\";\n        for (var j = 0; j < typec.length; j++) {\n            typet += typec[j].type_name;\n            typel += typec[j].type_id;\n            if (j < typec.length - 1) {\n                typet += \"&\";\n                typel += \"&\";\n            }\n        }\n        var typt = typet.split('&');\n        var typl = typel.split('&');\n\n        for (var i = 0; i < typt.length; i++) {\n            if (murl.indexOf('api.php/app/') != -1) {\n                if (/fantuan/.test(murl)) {\n                    var tyurl = 'https://fantuan.wkfile.com/api.php/app/video?pg=fypage&tid=' + typl[i] + '&class=&area=&lang=&year=&token=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\n                } else {\n                    var tyurl = murl + 'video?pg=fypage&tid=' + typl[i] + '&class=&area=&lang=&year=&token=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\n                }\n            } else if (murl.indexOf('xgapp.php/v1/') != -1) {\n                var tyurl = murl + 'video?pg=fypage&tid=' + typl[i] + '&class=&area=&lang=&year=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\n            } else {\n                if (/iopenyun/.test(murl)) {\n                    var tyurl = murl + '/list?type=' + typl[i] + '&class=&lang=&area=&year=&by=&page=fypage&limit=9;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}'\n                } else {\n                    var tyurl = murl + '?type=' + typl[i] + '&class=&lang=&area=&year=&by=&page=fypage&limit=9;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}'\n                }\n            }\n            items.push({\n                title: typt[i],\n                url: $(tyurl).rule((murl) => {\n                    var res = {};\n                    var items = [];\n                    var murl = murl;\n                    var rescode = getResCode();\n                    if (rescode.indexOf('Ê£ÄÊµã‰∏≠') != -1) {\n                        rescode = fetch(MY_URL + '&btwaf' + rescode.match(/btwaf(.*?)\\\"/)[1], {});\n                    }\n                    var html = JSON.parse(rescode);\n                    eval(JSON.parse(fetch('hiker://page/applistdata', {})).rule);\n\n                    res.data = items;\n                    setHomeResult(res);\n                }, murl),\n                col_type: 'flex_button'\n            })\n        }\n        items.push({\n            col_type: 'line'\n        });\n    } catch (e) {}\n\n\n    try {\n        var html = request(turl, {\n            headers: {\n                \"User-Agent\": \"Dart/2.13 (dart:io)\"\n            }\n        });\n        if (html.indexOf('Ê£ÄÊµã‰∏≠') != -1) {\n            html = fetch(turl + '&btwaf' + html.match(/btwaf(.*?)\\\"/)[1], {});\n        }\n        var html = JSON.parse(html);\n        //log(html);\n        //if (murl.indexOf('xgapp.php/v1/') != -1) {\n        eval(JSON.parse(fetch('hiker://page/appindexdata', {})).rule);\n        //} else {\n        //log(html);\n        //eval(JSON.parse(fetch('hiker://page/applistdata', {})).rule);\n        //}\n    } catch (e) {}\n\n}\n\nres.data = items;\nsetHomeResult(res);",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "if (!fileExist('hiker://files/rules/xyq/appmset.json')) {\n    let set = `{\"ssmode\":\"0\",\"sscount\":\"5\",\"enDn\":\"0\"}`;\n    writeFile(\"hiker://files/rules/xyq/appmset.json\", set);\n}\nvar ruleset = fetch('hiker://files/rules/xyq/appmset.json', {});\nif (!JSON.parse(ruleset).enDn) {\n    let set = ruleset.replace('\\\"\\}', '\\\"\\,\\\"enDn\\\"\\:\\\"0\\\"\\}');\n    writeFile(\"hiker://files/rules/xyq/appmset.json\", set);\n}",
    "pages": "[{\"col_type\":\"movie_3\",\"name\":\"JSONÊé•Âè£Êï∞ÊçÆ\",\"path\":\"ResCode\",\"rule\":\"{\\n    \\\"data\\\": [{\\n            \\\"title\\\": \\\"APPÂΩ±ËßÜ\\\",\\n            \\\"list\\\": [{\\n                    \\\"title\\\": \\\"007ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.007ts.cc/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Èõ∂Èõ∂‰∏ÉÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"555ÁîµÂΩ±\\\",\\n                    \\\"url\\\": \\\"http://w7tv.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/555ÁîµÂΩ±.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"5060ÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"https://app.linzhiyuan.xyz/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/5060ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"913eÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.913e.net/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/913EÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"F7ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://v.zq1080.cc/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/F7ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"oneÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.onedianshi.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ONEÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"vipÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://360yy.cn/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/VIPÂΩ±Èô¢xg.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áà±Â∞öÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.aisvod.tv/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áà±Â∞öÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áà±ÂΩ±Âêß\\\",\\n                    \\\"url\\\": \\\"http://www.ayinb.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áà±ÂΩ±Âêß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Êí≠ÊîæÂëÄ\\\",\\n                    \\\"url\\\": \\\"https://www.bofangya.com/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Êí≠ÊîæÂëÄ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁïÖËßÜÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://app.reboju.net/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁïÖËßÜÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ëø™Ëø™ÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://dd88.icu:6080/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ëø™Ëø™ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂòÄÂì©ÂòÄÂì©\\\",\\n                    \\\"url\\\": \\\"https://diliktv.xyz/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂòÄÂì©ÂòÄÂì©.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§ßÂ∏àÂÖÑ\\\",\\n                    \\\"url\\\": \\\"https://hou.lu/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§ßÂ∏àÂÖÑÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊÆµÂèãÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://lb.5277s.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊÆµÂèãÂΩ±ËßÜ¬©.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"È£ûËã±ËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"http://v.phoves.com.cn/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/È£ûËã±ËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁìúÁöÆTV\\\",\\n                    \\\"url\\\": \\\"http://www.dijiaxia.com/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁìúÁöÆTV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Êµ∑ËÉÜÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://xf123.cc/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Êµ∑ËÉÜÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁÅ´ÁÆ≠ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://huojian.wchulian.com.cn/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁÅ´ÁÆ≠ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Êµ∑ÁªµÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://app1.yuzhouys.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Êµ∑ÁªµÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Êµ∑Ê£†ËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"https://www.haitangsp.net/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Êµ∑Ê£†ËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰∫¨ÂπøËà™\\\",\\n                    \\\"url\\\": \\\"https://www.jingguanhang.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰∫¨ÂπøËà™ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰πùÂêàËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"https://ptygx.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰πùÂêàËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰πÖ‰πùÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://api.58qxk.cn/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰πÖ‰πùÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁÅµÁãêÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://x.dmntv.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁÅµÁãêÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áê≥ÁêÖÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.u23c.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áê≥ÁêÖÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊûÅ‰πêÈòÅ\\\",\\n                    \\\"url\\\": \\\"https://vip.wuqcms.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊûÅ‰πêÈòÅ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊäπËå∂Áå™\\\",\\n                    \\\"url\\\": \\\"https://www.mczdyw.com/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊäπËå∂Áå™ÁîµÂΩ±.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËêåËõãËõã\\\",\\n                    \\\"url\\\": \\\"http://app.mengdandan.com/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËêåËõãËõã.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ëø∑‰Ω†Â∫ì\\\",\\n                    \\\"url\\\": \\\"http://www.miniku.cc/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ëø∑‰Ω†Â∫ì.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁöÆÁöÆÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://pp.ig4.cn/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁöÆÁöÆÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ê∞¢ËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"http://h1080p.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ê∞¢ËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊÄùÂè§ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://app.siguyy.com/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊÄùÂè§ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Á•ûÈ©¨ÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"https://www.6080kan.cc/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Á•ûÈ©¨ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂèåÂçÅÁîµÂΩ±\\\",\\n                    \\\"url\\\": \\\"http://www.shoujikandianying.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂèåÂçÅÁîµÂΩ±.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Á≥ñÊûúÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.tgys.tv/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Á≥ñÊûúÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§©Á©∫ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.tkys.tv/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§©Á©∫ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ê±°Â¶ñÂä®Êº´\\\",\\n                    \\\"url\\\": \\\"https://www.wyydm.com/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ê±°Â¶ñÂä®Êº´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊòüÁ©∫ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://xkys.tv/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊòüÁ©∫ÂΩ±ËßÜxg.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â∞èÂº∫TV\\\",\\n                    \\\"url\\\": \\\"http://xqapp.hailanfj.com/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â∞èÂº∫TV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Èõ™‰∫∫ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://qqtvapp.com/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Èõ™‰∫∫ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â∞èÊòìÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://xy.irop.cn/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â∞èÊòìÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂΩ±ËßÜÂ∑•Âú∫\\\",\\n                    \\\"url\\\": \\\"https://www.ik4.cc/api.php/app/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂΩ±ËßÜÂ∑•Âú∫.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËøΩÂâßËææ‰∫∫\\\",\\n                    \\\"url\\\": \\\"http://vipmv.tv/xgapp.php/v1/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËøΩÂâßËææ‰∫∫.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                }\\n            ]\\n        },\\n        {\\n            \\\"title\\\": \\\"APPÂΩ±ËßÜ(v1)\\\",\\n            \\\"list\\\": [{\\n                    \\\"title\\\": \\\"720ÁúãÁâá\\\",\\n                    \\\"url\\\": \\\"https://tvd.720kp.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/720ÁúãÁâá.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"80ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.ccc8.net/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/80ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"80KÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://1080p.tv/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/80KÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"CJTÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"https://www.cjt521.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/CJTÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"HGÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://cs.hgyx.vip/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/HGÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"U5ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://appx.uy07.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/U5ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"VIPÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.sp.ooo/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/VIPÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"yoyo\\\",\\n                    \\\"url\\\": \\\"http://jx.wnvod.net/ruifenglb_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/yoyoÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áà±ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.hzlff.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áà±ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áà±ÁúãÁæéÂâß\\\",\\n                    \\\"url\\\": \\\"https://www.uumjw.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áà±ÁúãÁæéÂâß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËâæÁâπÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.aitee.cc/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËâæÁâπÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áà±Ë•øË•ø\\\",\\n                    \\\"url\\\": \\\"http://app.aixixi.vip/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áà±Ë•øË•øÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÈòøÂß®ËøΩÂâß\\\",\\n                    \\\"url\\\": \\\"http://www.77ysdy.com/ruifenglb_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÈòøÂß®ËøΩÂâß2.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁôΩËèúËøΩÂâß\\\",\\n                    \\\"url\\\": \\\"http://lbapp.huimaojia.com:30119/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁôΩËèúËøΩÂâß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊØîÈÇªÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://0hzy.cn:9990/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊØîÈÇªÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁôæËÆØËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"https://z.iopenyun.com:99/app_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁôæËÆØËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËèúÈ∏üÂä®Êº´\\\",\\n                    \\\"url\\\": \\\"http://taikong.huangguay.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËèúÈ∏üÂä®Êº´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁïÖ‰ºòËßÜÁïå\\\",\\n                    \\\"url\\\": \\\"http://app.518imo.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁïÖ‰ºòËßÜÁïå.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂàùÂøÉÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.18mv.club/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂàùÂøÉÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Èî§Â≠êËøΩÂâß\\\",\\n                    \\\"url\\\": \\\"http://www.jjsvip.cc/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Èî§Â≠êËøΩÂâß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§öÂ§öÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://sp.9aeng.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§öÂ§öÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§ßÊµ∑ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://119.29.63.137/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§ßÊµ∑ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰∏úÂçóÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"https://ys.dabih.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰∏úÂçóÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§ßÁÜäÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://dxys3355.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§ßÁÜäÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊÆµÂèãÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://js.66app.me/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊÆµÂèãÂΩ±ËßÜ2.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊÆµÂèãÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://shangjihuoke.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊÆµÂèãÂΩ±ËßÜ3.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰∫åÁãóÁîµÂΩ±\\\",\\n                    \\\"url\\\": \\\"http://app.hetaoys.vip/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰∫åÁãóÁîµÂΩ±.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"È£éËΩ¶ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.feifan123.xyz/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/È£éËΩ¶ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"È£ûÊç∑ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.fj6080.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/È£ûÊç∑ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁñØÁãÇÁúã\\\",\\n                    \\\"url\\\": \\\"http://app.fkkdy.vip/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁñØÁãÇÁúãÁîµÂΩ±.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÖ¨‰∏ªÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://mm.tcsdchina.com:6096/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÖ¨‰∏ªÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËæâÂì•ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://app.y.hgyule8.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËæâÂì•ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÈªÑÊ≤≥ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://i.ledu8.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÈªÑÊ≤≥ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÈªëÈ©¨Âä®Êº´\\\",\\n                    \\\"url\\\": \\\"http://lkan.vip/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÈªëÈ©¨Âä®Êº´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÈªëÈ©¨ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.lkan.vip/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÈªëÈ©¨ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁõíÂ≠êÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://i.nihaohezi.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁõíÂ≠êÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Á≠ãÊñó‰∫ë\\\",\\n                    \\\"url\\\": \\\"https://tv.jindcloud.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Á≠ãÊñó‰∫ëÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊûÅÁÆÄÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://tv.areone.top/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊûÅÁÆÄÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰πÖ‰πÖËøΩÂâß\\\",\\n                    \\\"url\\\": \\\"http://bc.bhtv.org.cn/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰πÖ‰πÖËøΩÂâß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂâßËø∑ËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"http://pan.hzafw.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂâßËø∑ËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ê©òÂ≠êÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://jz.juzidy.vip/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ê©òÂ≠êÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁúãÂâßÂêß\\\",\\n                    \\\"url\\\": \\\"http://app.ishen520.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁúãÂâßÂêß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂèØÁ±≥ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.kmysw.vip/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂèØÁ±≥ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÈòîË¥ºÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"https://www.itvaa.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÈòîË¥ºÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Âø´‰∫ëÂΩ±Èü≥\\\",\\n                    \\\"url\\\": \\\"https://k.ptygx.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Âø´‰∫ëÂΩ±Èü≥.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËìùÂÖâËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"http://vip.91iqiyi.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËìùÂÖâËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊûóË∞∑ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://ys.linguyy.xyz/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊûóË∞∑ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁªøÁÆ≠ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.69ty.cc/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁªøÁÆ≠ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰πêÁúãËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"http://www.lkan.vip/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰πêÁúãËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÜ∑ËßÜTV\\\",\\n                    \\\"url\\\": \\\"https://len.tv/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÜ∑ËßÜTV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Êú®ÁôΩÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://vapp.23at.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Êú®ÁôΩÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁæéÂâßËô´\\\",\\n                    \\\"url\\\": \\\"https://meijuchong.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁæéÂâßËô´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Âñµ‰πêÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://miaoleys.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Âñµ‰πêÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"È∫ªËÖæTV\\\",\\n                    \\\"url\\\": \\\"https://www.matengtv.top/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/È∫ªËÖæTV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂñµÂΩ±ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.mxmbk.xyz/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂñµÂΩ±ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Êú®Â≠êÁîµÂΩ±\\\",\\n                    \\\"url\\\": \\\"http://www.muzidy.top/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Êú®Â≠êÁîµÂΩ±.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"È∫ªÂ≠êËøΩÂâß\\\",\\n                    \\\"url\\\": \\\"http://b.2maz.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/È∫ªÂ≠êËøΩÂâß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â•àÈùûËø∑\\\",\\n                    \\\"url\\\": \\\"https://app.netflixmi.com/ruifenglb_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â•àÈùûËø∑ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂçóÂ∫úÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://nfapi.xkvideo.club/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂçóÂ∫úÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊöñÂÖâÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://app.bl210.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊöñÂÖâÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÜÖÊ∂µÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://v.nhdyys.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÜÖÊ∂µÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁöÆÁöÆÂä®Êº´\\\",\\n                    \\\"url\\\": \\\"http://dm.muying.me/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁöÆÁöÆÂä®Êº´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁöÆÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://app.piyingshi.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁöÆÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÖ®ËÉΩÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://qnys5566.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÖ®ËÉΩÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â•áË∂£ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://app.qiqu.me/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â•áË∂£ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"È™ëÂ£´ÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"https://app.qishi.xyz/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/È™ëÂ£´ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰∫∫‰∫∫Âä®Êº´\\\",\\n                    \\\"url\\\": \\\"http://man.jjsvip.cc/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰∫∫‰∫∫Âä®Êº´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Á•ûÈ©¨ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://xin.jjsvip.cc/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Á•ûÈ©¨ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊÄùÂ•áÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://app.siqitv.vip/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊÄùÂ•áÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËßÜÂê¨ÊòüÁêÉ\\\",\\n                    \\\"url\\\": \\\"http://zjyapijzys.shynwlkj.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËßÜÂê¨ÊòüÁêÉ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊâãÊåáÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://szys3355.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊâãÊåáÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂúüË±ÜTV\\\",\\n                    \\\"url\\\": \\\"http://xiuxian.qd234.cn/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂúüË±ÜTV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ê∑òÂâßÁ§æ\\\",\\n                    \\\"url\\\": \\\"https://app.shuhai99.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ê∑òÂâßÁ§æ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§©Á©∫ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://tv.51aizn.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§©Á©∫ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§©Â§©ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://app.at008.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§©Â§©ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§©Â§©ËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"http://app.qianju.cc/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§©Â§©ËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Âõ¢Â§ïÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://119.29.121.48/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Âõ¢Â§ïÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÖîÂ≠êÁ™ù\\\",\\n                    \\\"url\\\": \\\"http://cj.huimaojia.com:12345/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÖîÂ≠êÁ™ù.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊàëÁà±Ë∑üÂâß\\\",\\n                    \\\"url\\\": \\\"https://www.genmov.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊàëÁà±Ë∑üÂâß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂêæÁà±ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://app.5lp.net/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂêæÁà±ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËúóÁâõÁúãÈ∏≠\\\",\\n                    \\\"url\\\": \\\"http://movie.96keji.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËúóÁâõÁúãÈ∏≠.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËúóÁâõÂä®Êº´\\\",\\n                    \\\"url\\\": \\\"http://woniudm.woniu.cyou:20000/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËúóÁâõÂä®Êº´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â∞èÂüéÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://www.269w.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â∞èÂüéÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÖàÈîãËßÜÈ¢ë\\\",\\n                    \\\"url\\\": \\\"https://58xtv.net/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÖàÈîãËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â∞èÊûÅÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://api.xiaoysw.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â∞èÊûÅÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊòüÁ©∫ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://xiongkongwx.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊòüÁ©∫ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁÜäÁå´Âä®Êº´\\\",\\n                    \\\"url\\\": \\\"http://dongman.k8aa.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁÜäÁå´Âä®Êº´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áé∫Â®úÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://pp.wxina.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áé∫Â®úÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â∞èËúªËúì\\\",\\n                    \\\"url\\\": \\\"http://3ketv.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â∞èËúªËúìËßÜÈ¢ë.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Èõ™‰∫∫ËµÑÊ∫ê\\\",\\n                    \\\"url\\\": \\\"https://zy.qd234.cn/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Èõ™‰∫∫ËµÑÊ∫êÁ´ô.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊòüÂΩ±Áõ∏Èöè\\\",\\n                    \\\"url\\\": \\\"http://app.rootthree.top/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊòüÂΩ±Áõ∏Èöè.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â∞èÊòìÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://xy.irop.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â∞èÊòìÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊòüÊúàËøΩÂâß\\\",\\n                    \\\"url\\\": \\\"http://xingyuezhuiju.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊòüÊúàËøΩÂâß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁõäËææÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://luobu.yss6080.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁõäËææÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÖÉËä≥ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://yfys1122.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÖÉËä≥ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Èõ®ÊûúÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://ygapp.xcys63.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Èõ®ÊûúÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ê®±Ëä±Âä®Êº´\\\",\\n                    \\\"url\\\": \\\"https://www.dmwu.cc/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ê®±Ëä±Âä®Êº´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"È¢ñÂÆ∂ÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://zly.xjqxz.top/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/È¢ñÂÆ∂ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Êúà‰∫ÆÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.13tv.top/acj_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Êúà‰∫ÆÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂΩ±ËßÜÂ§ßÂÖ®\\\",\\n                    \\\"url\\\": \\\"https://xc.xixi2yy.xyz/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂΩ±ËßÜÂ§ßÂÖ®HD.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂΩ±ËßÜÁÉ≠Ââß\\\",\\n                    \\\"url\\\": \\\"http://lb.26ys.cn/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂΩ±ËßÜÁÉ≠Ââß.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊúàËâ≤ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://69ty.cc/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊúàËâ≤ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Êù®Ê°ÉÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://ytys1122.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Êù®Ê°ÉÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂΩ±ÈòÖÈòÅ\\\",\\n                    \\\"url\\\": \\\"http://221.236.18.12:665/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂΩ±ÈòÖÈòÅ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ê∏îÊ∏îÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://luobo.yugenye.site/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ê∏îÊ∏îÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰ºò‰ºòÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://xs.78tv.cc/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰ºò‰ºòÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰∏ÄÂè™È±º\\\",\\n                    \\\"url\\\": \\\"http://www.bd-4k.ml/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰∏ÄÂè™È±ºÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËøΩÁï™Áå´\\\",\\n                    \\\"url\\\": \\\"http://dm.496dy.cn:88/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËøΩÁï™Áå´.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÆÖÁî∑ÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://www.sexyy.top/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÆÖÁî∑ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰æ¶Êé¢ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://ys.huangguay.com/mogai_api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰æ¶Êé¢ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËøΩÂΩ±ÂÖî\\\",\\n                    \\\"url\\\": \\\"http://longw.xyz:91/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËøΩÂΩ±ÂÖî.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áå™Áå™ÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://app.2zdyy.com/api.php/v1.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áå™Áå™ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                }\\n            ]\\n        },\\n        {\\n            \\\"title\\\": \\\"APPÂΩ±ËßÜ(tv)\\\",\\n            \\\"list\\\": [{\\n                    \\\"title\\\": \\\"555TV\\\",\\n                    \\\"url\\\": \\\"http://tv.gxhshyy.com/api.php/gctvapi.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/555TV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"720ÁúãÁâá\\\",\\n                    \\\"url\\\": \\\"https://tvd.720kp.cn/api.php/tv.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/720ÁúãÁâáTV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊÆµÂèãÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"https://shangjihuoke.com/api.php/tv.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊÆµÂèãÂΩ±ËßÜTV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂèØÁ±≥ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.kmysw.vip/api.php/tv.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂèØÁ±≥ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â•àÈùûËø∑TV\\\",\\n                    \\\"url\\\": \\\"https://app.netflixmi.com/api.php/tv.vod\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â•àÈùûËø∑TV.png\\\",\\n                    \\\"murl\\\": \\\"q:APPÂΩ±ËßÜ\\\"\\n                }\\n            ]\\n        },\\n        {\\n            \\\"title\\\": \\\"TVÂΩ±ËßÜ\\\",\\n            \\\"list\\\": [{\\n                    \\\"title\\\": \\\"2Âè∑Â∏Å\\\",\\n                    \\\"url\\\": \\\"http://phoebe.cf/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/2Âè∑Â∏ÅÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"F7ÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://mtv.haokanju1.cc/api.php/Chengcheng/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/F7ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"HGÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://api.hgyx.vip/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/HGÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÇ≤ËßÜÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://j.zjj.life:88/mv/api.php/Chengcheng/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÇ≤ËßÜÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Áà±Ë•øË•øTV\\\",\\n                    \\\"url\\\": \\\"http://tv.aixixi.vip/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Áà±Ë•øË•øTV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â∞òÊ¢ìTV\\\",\\n                    \\\"url\\\": \\\"http://cztv.vip:83/api.php/chenziystv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â∞òÊ¢ìTV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Á®ªËçâ‰∫∫TV\\\",\\n                    \\\"url\\\": \\\"http://www.zhaikanys.xyz/api.php/iptv1/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Á®ªËçâ‰∫∫TV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂòÄÂì©ÂòÄÂì©\\\",\\n                    \\\"url\\\": \\\"https://api.diliktv.xyz/api.php/Chengcheng/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂòÄÂì©ÂòÄÂì©TV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Âä®ÂäõÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.love9989.com/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Âä®ÂäõÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â§ßÂ∏àÂÖÑ\\\",\\n                    \\\"url\\\": \\\"http://dsxtv.tv.ci/api.php/dsx/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â§ßÂ∏àÂÖÑÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"È£éËΩ¶ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://www.feifan123.xyz/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/È£éËΩ¶ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁñØÁãÇÁúãTV\\\",\\n                    \\\"url\\\": \\\"http://tv.fkkdy.vip/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁñØÁãÇÁúãTV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÁÅ´ÁÆ≠ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://293.0759.fit:8/c/api.php/WAiLaowang/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÁÅ´ÁÆ≠ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÈªëÈæôÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://vip.ji-ding-he.site/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÈªëÈæôÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Á∫¢ÁâõTV\\\",\\n                    \\\"url\\\": \\\"http://bbb.056158.com/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Á∫¢ÁâõTV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ê†∏Ê°ÉÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://tv.hetaoys.vip/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ê†∏Ê°ÉÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ËÅöÂ§öÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://jdys.weetai.cn/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ËÅöÂ§öÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰πÖ‰πÖÂΩ±Èô¢\\\",\\n                    \\\"url\\\": \\\"http://lm.0818tv.com/mv/api.php/jiujiuystv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰πÖ‰πÖÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰πêÈÖ∑TV\\\",\\n                    \\\"url\\\": \\\"http://lktv.top:55/api.php/chenziystv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰πêÈÖ∑TV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊµÅÊòüÈõ®\\\",\\n                    \\\"url\\\": \\\"http://syy.lxyyy.xyz/mv/api.php/Chengcheng/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊµÅÊòüÈõ®ÂΩ±Èô¢.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂáåÈõ™ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://lxue.top/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂáåÈõ™ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂÜ∑ÊúàTV\\\",\\n                    \\\"url\\\": \\\"https://tv.521x5.com/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂÜ∑ÊúàTV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÊÄùÂ•áTV\\\",\\n                    \\\"url\\\": \\\"http://tv.siqitv.vip/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÊÄùÂ•áTV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"ÂèåÂ≠êÊòü\\\",\\n                    \\\"url\\\": \\\"http://tv.diyoui.cc/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/ÂèåÂ≠êÊòü.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Ëã•ÊÉúÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://rxw.ruoxinew.com/api.php/Sntv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Ëã•ÊÉúÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"Â∞èÊûÅTV\\\",\\n                    \\\"url\\\": \\\"http://api.8d8q.com/mmv/api.php/Chengcheng/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/Â∞èÊûÅTV.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                },\\n                {\\n                    \\\"title\\\": \\\"‰∫ëÊí≠ÂΩ±ËßÜ\\\",\\n                    \\\"url\\\": \\\"http://yunbo.bxin.tv/api.php/iptv/vod/\\\",\\n                    \\\"img\\\": \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/‰∫ëÊí≠ÂΩ±ËßÜ.png\\\",\\n                    \\\"murl\\\": \\\"q:TVÂΩ±ËßÜ\\\"\\n                }\\n            ]\\n        }\\n    ]\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"ÊêúÁ¥¢\",\"path\":\"sear\",\"rule\":\"var res = {};\\nvar items = [];\\n//ËÆæÁΩÆÊêúÁ¥¢Á∫øÁ®ã\\nvar ssmode = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).ssmode;\\nvar key = MY_URL.split('$$$')[1];\\n//setError(le);\\nif (ssmode == '0') {\\n    setPageTitle(key + ' ÁöÑÊêúÁ¥¢ÁªìÊûú')\\n};\\nvar html = JSON.parse(JSON.parse(fetch('hiker://page/ResCode', {})).rule);\\n//var html = JSON.parse(fetchCache('https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/APPÂΩ±ËßÜÂàóË°®', 24));\\n\\nvar dlist = html.data;\\n\\nfunction randomSort3(arr) {\\n    arr.sort(function(a, b) {\\n        return Math.random() - 0.5;\\n    });\\n    return arr;\\n}\\n\\n//Êâì‰π±È°∫Â∫è\\nvar random = true;\\nif (ssmode == '1' || MY_TYPE == 'home') {\\n    for (var l = 0; l < dlist.length; l++) {\\n        var list = dlist[l].list;\\n        var tytit = dlist[l].title\\n        if (random) {\\n            let k = getVar(MY_RULE.title + \\\"-\\\" + tytit, \\\"\\\");\\n            if (k == \\\"\\\") {\\n                list = randomSort3(list)\\n                putVar(MY_RULE.title + \\\"-\\\" + tytit, JSON.stringify(list))\\n            } else {\\n                list = JSON.parse(k)\\n            }\\n        }\\n\\n\\n        items.push({\\n            title: MY_TYPE == \\\"home\\\" ? \\\"ÁÇπÂáªÊü•Áúã \\\" + tytit + \\\" ÂàÜÁ±ª ‚Äú‚Äú\\\" + key + \\\"‚Äù‚Äù ÁöÑËÅöÊêúÁªìÊûú\\\" : \\\"ÁÇπÂáªÊü•Áúã \\\" + tytit + \\\" ÂàÜÁ±ª \\\" + key + \\\" ÁöÑËÅöÊêúÁªìÊûú\\\",\\n            url: $('hiker://empty$$$' + key + '$$$fypage$$$').rule((list, tytit) => {\\n                var res = {};\\n                var items = [];\\n                //ÂèñÊêúÁ¥¢Á∫øÁ®ãËÆæÁΩÆ\\n                var ssxc = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).sscount;\\n                //ËÆæÁΩÆË∂ÖÊó∂Êó∂Èó¥ÔºåË∂äÂ∞èË∂äÂø´ÔºåÂçï‰ΩçÊØ´Áßí\\n                //var timeou = 5000;\\n                var key = MY_URL.split('$$$')[1];\\n                var num = MY_URL.split('$$$')[2];\\n                var le = parseInt(num * ssxc);\\n                var Data = [];\\n                var Tit = [];\\n                for (var j = le - ssxc; j < le; j++) {\\n                    if (j < list.length) {\\n                        var link = list[j].url;\\n\\n                        if (/APPÂΩ±ËßÜ/.test(tytit)) {\\n                            if (link.indexOf('api.php/app/') != -1) {\\n                                var hmurl = link + 'search?pg=1&text=' + key + '&token=';\\n                            } else if (link.indexOf('xgapp.php/v1/') != -1) {\\n                                var hmurl = link + 'search?pg=1&text=' + key;\\n                            } else {\\n                                if (/iopenyun/.test(link)) {\\n                                    var hmurl = link + '/list?page=fypage&limit=10&wd=' + key;\\n                                } else {\\n                                    var hmurl = link + '?page=1&limit=10&wd=' + key;\\n                                }\\n                            }\\n                        } else if (/TVÂΩ±ËßÜ/.test(tytit)) {\\n                            if (/19jx|293ys|zhaikanys|ji\\\\-ding\\\\-he|phoebe|yunbo\\\\.bxin|lanrentk|hetaoys|pxun|139\\\\.155|fkkdy|056158|aixixi|ruoxinew|feifan123|siqitv/.test(link)) {\\n                                var hmurl = link + '?ac=list&zm=' + key + '&page=1';\\n                            } else {\\n                                var hmurl = link + '?ac=list&wd=' + key + '&page=1';\\n                            }\\n                        }\\n                        //Data.push({url: hmurl,options: {headers: {\\\"User-Agent\\\": \\\"Dart/2.13 (dart:io)\\\"},timeout: timeou}});\\n                        Data.push({\\n                            url: hmurl,\\n                            options: {\\n                                headers: {\\n                                    \\\"User-Agent\\\": \\\"Dart/2.13 (dart:io)\\\"\\n                                }\\n                            }\\n                        });\\n                        Tit.push({\\n                            tit: list[j].title,\\n                            link: link,\\n                            typnm: tytit\\n                        });\\n                    } //if\\n                } //for j\\n\\n                //---‰ª£Á†ÅÂàÜÁïåÁ∫ø---- \\n                if (Data != '') {\\n                    var bhtml = batchFetch(Data);\\n                    //writeFile(\\\"hiker://files/rules/xyq/appError.json\\\",JSON.stringify(bhtml));\\n\\n                    for (var k = 0; k < bhtml.length; k++) {\\n                        var html = bhtml[k];\\n                        //log(html);\\n                        try {\\n                            html = html.substring(0, 2) == '\\\\r\\\\n' ? html.replace('\\\\r\\\\n', '') : html;\\n                        } catch (e) {}\\n                        if (/btwaf/.test(html)) {\\n                            html = fetch(Data[k].url + '&btwaf' + html.match(/btwaf(.*?)\\\\\\\"/)[1], {});\\n\\n                        }\\n                        if (html == \\\"\\\" || html == null || html.substring(0, 5) == 'error' || !html.startsWith('{')) {\\n\\n                            items.push({\\n                                title: Tit[k].tit + ' ' + 'Êú™ÊêúÁ¥¢Âà∞ÔºåÁÇπÂáªËÆøÈóÆÂéüÁΩëÈ°µ',\\n                                url: Data[k].url + `@lazyRule=.js:input.split(';')[0]`,\\n                                col_type: 'text_1'\\n                            });\\n\\n                        } else if (html.length < 80) {\\n                            items.push({\\n                                title: Tit[k].tit + ' ' + 'ËøîÂõûÊï∞ÊçÆ‰∏çÂÆåÊï¥ÔºåÁÇπÂáªËÆøÈóÆÂéüÁΩëÈ°µ',\\n                                url: Data[k].url + `@lazyRule=.js:input.split(';')[0]`,\\n                                col_type: 'text_1'\\n                            });\\n                        } else {\\n                            var html = JSON.parse(html);\\n                            //log(html);\\n                            var typet = Tit[k].typnm;\\n                            var tdomin = Tit[k].link;\\n                            if (html.list) {\\n                                var list = html.list;\\n                            } else if (html.data.list) {\\n                                var list = html.data.list;\\n                            } else if (html.data) {\\n                                var list = html.data;\\n                            } else {\\n                                var list = [];\\n                            }\\n                            if (list.length < 1) {\\n\\n                                items.push({\\n                                    title: Tit[k].tit + ' ' + 'ÂàóË°®Â∞è‰∫é1ÔºåÊó†Ê≥ïÂ±ïÁ§∫ÔºåÁÇπÂáªËÆøÈóÆÂéüÁΩëÈ°µ',\\n                                    url: Data[k].url + `@lazyRule=.js:input.split(';')[0]`,\\n                                    col_type: 'text_1'\\n                                });\\n\\n                            } else {\\n                                for (var i = 0; i < list.length; i++) {\\n                                    if (/TVÂΩ±ËßÜ/.test(typet)) {\\n                                        var title = list[i].title;\\n                                        var pic = list[i].pic;\\n                                        var vid = list[i].nextlink;\\n                                        var rem = list[i].state;\\n                                    } else if (/APPÂΩ±ËßÜ/.test(typet)) {\\n\\n                                        if (tdomin.indexOf('api.php/app/') != -1) {\\n                                            var title = list[i].vod_name;\\n                                            var pic = list[i].vod_pic;\\n                                            if (/fantuan/.test(tdomin)) {\\n                                                var vid = 'https://fantuan.wkfile.com/api.php/app/video_detail?id=' + list[i].vod_id + '&token=';\\n                                            } else {\\n                                                var vid = tdomin + 'video_detail?id=' + list[i].vod_id + '&token=';\\n                                            }\\n                                            var rem = list[i].vod_remarks;\\n                                            //var con=list[i].type.type_des;\\n                                        } else if (tdomin.indexOf('xgapp.php/v1/') != -1) {\\n                                            var title = list[i].vod_name;\\n                                            var pic = list[i].vod_pic;\\n                                            var vid = tdomin + 'video_detail?id=' + list[i].vod_id;\\n                                            var rem = list[i].vod_remarks;\\n                                            //var con=list[i].type.type_des;\\n                                        } else {\\n                                            var title = list[i].vod_name;\\n                                            var pic = list[i].vod_pic;\\n                                            if (/iopenyun/.test(tdomin)) {\\n                                                var vid = tdomin + '/detailID?vod_id=' + list[i].vod_id + '&token=';\\n                                            } else {\\n                                                var vid = tdomin + '/detail?vod_id=' + list[i].vod_id + '&token=';\\n                                            }\\n                                            var rem = list[i].vod_remarks;\\n                                            //var con=list[i].type.type_des;\\n                                        }\\n\\n                                    }\\n                                    //var con=list[i].state;\\n                                    //log(vid);\\n\\n                                    items.push({\\n                                        title: MY_TYPE == \\\"home\\\" ? title.replace(key, '‚Äú‚Äú' + key + '‚Äù‚Äù') + '\\\\n' + rem : title + rem,\\n                                        pic_url: pic + '@Referer=',\\n                                        url: $(vid + ';get;utf-8;{User-Agent@Dart/2.13 (dart:io)}').rule((typet) => {\\n                                            var res = {};\\n                                            var items = [];\\n                                            var html = JSON.parse(getResCode());\\n                                            items.push({\\n                                                title: '',\\n                                                desc: '255&&float',\\n                                                url: '',\\n                                                col_type: 'x5_webview_single'\\n                                            });\\n                                            var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n                                            if (/APPÂΩ±ËßÜ/.test(typet)) {\\n                                                eval(JSON.parse(fetch('hiker://page/appmovlist', {})).rule);\\n                                            } else if (/TVÂΩ±ËßÜ/.test(typet)) {\\n                                                eval(JSON.parse(fetch('hiker://page/tvmovlist', {})).rule);\\n                                            }\\n\\n                                            res.data = items;\\n                                            setHomeResult(res);\\n                                        }, typet),\\n                                        //content: rem,\\n                                        desc: typet + ' => ' + Tit[k].tit,\\n                                        col_type: 'movie_1_vertical_pic'\\n                                    });\\n                                } //for i\\n                            } //if list.length\\n                        }\\n                    } //for k bhtml.length\\n                }\\n\\n                res.data = items;\\n                setHomeResult(res);\\n            }, list, tytit),\\n            col_type: 'text_1'\\n        });\\n\\n    } //for i\\n}; //end mode 1\\n\\nif (ssmode == '0' || MY_TYPE == 'home') {\\n    for (var i = 0; i < dlist.length; i++) {\\n        var list = dlist[i].list;\\n        var tytit = dlist[i].title\\n        if (random) {\\n            let k = getVar(MY_RULE.title + \\\"-\\\" + tytit, \\\"\\\");\\n            if (k == \\\"\\\") {\\n                list = randomSort3(list)\\n                putVar(MY_RULE.title + \\\"-\\\" + tytit, JSON.stringify(list))\\n            } else {\\n                list = JSON.parse(k)\\n            }\\n        }\\n\\n        items.push({\\n            title: MY_TYPE == \\\"home\\\" ? \\\" ÈÄâÊã©‰∏Ä‰∏™ \\\"+dlist[i].title+\\\" È°πÁõÆÊü•Áúã ‚Äú‚Äú\\\" + key + \\\"‚Äù‚Äù ÁöÑÊêúÁ¥¢ÁªìÊûú\\\" : \\\" ÈÄâÊã©‰∏Ä‰∏™ \\\"+dlist[i].title+\\\" È°πÁõÆÊü•Áúã \\\" + key + \\\" ÁöÑÊêúÁ¥¢ÁªìÊûú\\\",\\n            col_type: 'text_1'\\n        });\\n\\n        for (var j = 0; j < list.length; j++) {\\n            var link = list[j].url;\\n\\n            if (/APPÂΩ±ËßÜ/.test(tytit)) {\\n                if (link.indexOf('api.php/app/') != -1) {\\n                    var hmurl = link + 'search?pg=fypage&text=' + key + '&token=';\\n                } else if (link.indexOf('xgapp.php/v1/') != -1) {\\n                    var hmurl = link + 'search?pg=fypage&text=' + key;\\n                } else {\\n                    if (/iopenyun/.test(link)) {\\n                        var hmurl = link + '/list?page=fypage&limit=10&wd=' + key;\\n                    } else {\\n                        var hmurl = link + '?page=fypage&limit=10&wd=' + key;\\n                    }\\n                }\\n            } else if (/TVÂΩ±ËßÜ/.test(tytit)) {\\n                if (/19jx|293ys|zhaikanys|ji\\\\-ding\\\\-he|phoebe|yunbo\\\\.bxin|lanrentk|hetaoys|pxun|139\\\\.155|fkkdy|056158|aixixi|ruoxinew|feifan123|siqitv/.test(link)) {\\n                    var hmurl = link + '?ac=list&zm=' + key + '&page=fypage';\\n                } else {\\n                    var hmurl = link + '?ac=list&wd=' + key + '&page=fypage';\\n                }\\n            }\\n            items.push({\\n                title: list[j].title,\\n                img: list[j].img,\\n                url: $('hiker://empty#x#' + hmurl + '#x#' + link + '#x#' + tytit + '#x#' + key + '#x#').rule(() => {\\n                    $.require('hiker://page/searerj');\\n                }),\\n                col_type: 'icon_round_small_4'\\n                //col_type: 'text_3'\\n                //link:link,\\n                //type: i\\n            });\\n\\n        } //for j\\n\\n\\n    } //for i\\n\\n} //end mode 0\\n\\n\\nres.data = items;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"APPÂàÜÁ±ªÂàóË°®\",\"path\":\"applistdata\",\"rule\":\"if (html.list) {\\n    var list = html.list;\\n} else if (html.data && html.data.list) {\\n    var list = html.data.list;\\n} else {\\n    var list = html.data;\\n}\\n//log(list);\\nfor (var i = 0; i < list.length; i++) {\\n    var title = list[i].vod_name;\\n    var img = list[i].vod_pic;\\n    var url = list[i].vod_id;\\n    var desc = list[i].vod_remarks;\\n    if (html.list) {\\n        var link = murl + 'video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n    } else if (html.data && html.data.list) {\\n        var link = murl + '/detail?vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n    } else {\\n        var link = murl + 'video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n    };\\n    if (/fantuan/.test(murl)) {\\n        var link = 'https://fantuan.wkfile.com/api.php/app/video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n    } else if (/iopenyun/.test(murl)) {\\n        var link = murl + '/detailID?vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n    } else if (/dijiaxia/.test(murl)) {\\n        var link = 'http://www.dijiaxia.com/api.php/app/video_detail?id=' + url;\\n    }\\n    items.push({\\n        title: title,\\n        pic_url: img + '@Referer=',\\n        url: $(link).rule(() => {\\n            var res = {};\\n            var items = [];\\n            items.push({\\n                title: '',\\n                desc: '255&&float',\\n                url: '',\\n                col_type: 'x5_webview_single'\\n            });\\n            refreshX5WebView('');\\n            var html = JSON.parse(getResCode());\\n            var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n            eval(JSON.parse(fetch('hiker://page/appmovlist', {})).rule);\\n            res.data = items;\\n            setHomeResult(res);\\n        }),\\n        desc: desc,\\n        col_type: 'movie_3_marquee'\\n    });\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"TVÂàóË°®Ëß£Êûê\",\"path\":\"tvlistdata\",\"rule\":\"var list = html.data;\\nfor (var i = 0; i < list.length; i++) {\\n    var title = list[i].title;\\n    var img = list[i].pic;\\n    var url = list[i].nextlink;\\n    var desc = list[i].state;\\n    url = url.startsWith('http') ? url : murl + '?ac=detail&ids=' + url;\\n    items.push({\\n        title: title,\\n        pic_url: img + '@Referer=',\\n        url: $(url).rule(() => {\\n            var res = {};\\n            var items = [];\\n            var html = JSON.parse(getResCode());\\n            var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n            items.push({\\n                title: '',\\n                desc: '255&&float',\\n                url: '',\\n                col_type: 'x5_webview_single'\\n            });\\n            refreshX5WebView('');\\n            eval(JSON.parse(fetch('hiker://page/tvmovlist', {})).rule);\\n            res.data = items;\\n            setHomeResult(res);\\n        }),\\n        desc: desc,\\n        col_type: 'movie_3_marquee'\\n    });\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"APPÁÆÄ‰ªã‰∏éÈÄâÈõÜ\",\"path\":\"appmovlist\",\"rule\":\"if (html.data.vod_url_with_player) {\\n    var conts = html.data.vod_url_with_player;\\n    if (conts.length < 1) {\\n        conts = html.data.vod_play_url.split('$$$');\\n        var tabs = html.data.vod_play_from.split('$$$');\\n    }\\n} else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n    var conts = html.data.vod_info.vod_url_with_player;\\n    if (conts.length < 1) {\\n        conts = html.data.vod_info.vod_play_url.split('$$$');\\n        var tabs = html.data.vod_info.vod_play_from.split('$$$');\\n    }\\n} else {\\n    var conts = html.data.vod_play_list;\\n    if (conts.length < 1) {\\n        conts = html.data.vod_play_url.split('$$$');\\n        var tabs = html.data.vod_play_from.split('$$$');\\n    }\\n}\\n\\n//log(conts);\\n\\nvar thumb = html.data.vod_info ? html.data.vod_info.vod_pic : html.data.vod_pic;\\neval(JSON.parse(fetch('hiker://page/dnplugin', {})).rule);\\nitems.push({\\n    title: 'ÂâßÊÉÖÁÆÄ‰ªãÔºö',\\n    desc: html.data.vod_info ? html.data.vod_info.vod_content : html.data.vod_content,\\n    pic_url: thumb,\\n    url: dnpug,\\n    col_type: 'movie_1_vertical_pic'\\n});\\nvar jiek = '';\\nfor (var i = 0; i < conts.length; i++) {\\n    if (conts[i].urls) {\\n        var list = conts[i].urls;\\n    } else if (conts[i].url) {\\n        var list = conts[i].url.split(\\\"#\\\");\\n    } else {\\n        var list = conts[i].split(\\\"#\\\");\\n    }\\n    //setError(list.length);\\n    if (html.data.vod_url_with_player) {\\n        var ptab = conts[i].code ? conts[i].code : tabs[i];\\n    } else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n        var ptab = conts[i].code ? conts[i].code : tabs[i];\\n    } else {\\n        var ptab = conts[i].from ? conts[i].from : tabs[i];\\n    }\\n    items.push({\\n        title: ptab + ' üîó' + [i + 1] + '/' + [conts.length],\\n        col_type: 'text_1'\\n    });\\n    for (var j = 0; j < list.length; j++) {\\n        if (conts[i].urls) {\\n            var vlink = list[j].url;\\n            var title = list[j].name;\\n        } else {\\n            var vlink = list[j].split(\\\"$\\\")[1];\\n            var title = list[j].split(\\\"$\\\")[0];\\n        }\\n        try {\\n            if (html.data.vod_url_with_player) {\\n                var jiek = conts[i].parse_api;\\n            } else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n                var jiek = conts[i].parse_api;\\n            } else {\\n                if (conts[i].player_info.parse2 && (conts[i].player_info.parse2).indexOf(\\\"=\\\") != -1) {\\n                    var jiek = (conts[i].player_info.parse2).match(/.*?url=|.*?v=|.*?vid=/)[0].replace(\\\"..\\\", \\\".\\\").replace('jsonbs', '');\\n                } else if (conts[i].player_info.parse && (conts[i].player_info.parse).indexOf(\\\"=\\\") != -1) {\\n                    var jiek = (conts[i].player_info.parse).match(/.*?url=|.*?v=|.*?vid=/)[0].replace(\\\"..\\\", \\\".\\\");\\n                } else {\\n                    var jiek = \\\"\\\";\\n                }\\n                //setError(jiek);                \\n            }\\n        } catch (e) {}\\n        if (jiek != '' && jiek != null) {\\n            if (jiek.substring(0, 4) == 'http') {\\n                jiek = jiek;\\n            } else if (jiek.substring(0, 2) == '\\\\/\\\\/') {\\n                jiek = 'https:' + jiek;\\n            }\\n        }\\n        //ÂØπÂ§±ÊïàÊé•Âè£ËøõË°åÊõøÊç¢\\n        if (/cokemv/.test(myurl) && /cokeqie|xin|90mm/.test(ptab)) {\\n            jiek = 'https://player.90mm.me/play.php?url=';\\n        } else if (/json\\\\.m3u8\\\\.tv/.test(jiek)) {\\n            jiek = 'https://jx.m3u8.tv/jiexi/?url=';\\n        } else if (/cjt521/.test(myurl)) {\\n            jiek = conts[i].player_info.parse;\\n        } else if (jiek.indexOf('jpg.hou.lu/jm/za/index.php') != -1) {\\n            jiek = 'http://vip.mengx.vip/home/api?type=ys&uid=3249696&key=aefqrtuwxyEFHKNOQY&url=';\\n        } else if (ptab == 'renrenmi' && jiek.search(/jhdyw/) != -1) {\\n            jiek = 'http://www.1080kan.cc/jiexi/rrmi.php?url=';\\n        } else if (ptab == 'fqfilm' && jiek.search(/jhdyw/) != -1) {\\n            jiek = 'http://www.1080kan.cc/jiexi/fq.php?url=';\\n        } else if (ptab == 'rrsp' && jiek.search(/jhdyw/) != -1) {\\n            jiek = 'http://www.1080kan.cc/jiexi/rr.php?url=';\\n        } else if (/jhyun\\\\.php/.test(jiek)) {\\n            jiek = jiek.replace('http://svip.jhyun.jx.cn:1234/jhyun.php?url=', 'https://api.jhdyw.vip/?url=');            \\n        };\\n        //Â£∞ÊòéÈìæÊé•\\n        var link = jiek + vlink;\\n        if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos/.test(vlink) && /http/.test(vlink)) {\\n            link = vlink;\\n        }\\n        //log(link);\\n        if (list.length <= 4) {\\n            var clt = 'text_2';\\n        } else {\\n            var clt = isNaN(title) ? 'flex_button' : 'text_5'\\n        };\\n        items.push({\\n            title: title,\\n            url: $().lazyRule((ptab, link, myurl) => {\\n                function openurl(resurl) {\\n                    if (resurl.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) && resurl.search(/html|bilibili/) != -1) {\\n                        var enDn = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n                        if (enDn == '1') {\\n                            log('Ë∞ÉÁî®Êñ≠ÊèíËß£Êûê');\\n                            eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                            eval(fetch(config.cj));\\n                            return aytmParse(resurl);\\n                        } else {\\n                            return resurl\\n                        };\\n                    } else {\\n                        return resurl\\n                    }\\n                };\\n                var srcurl = link;\\n                //log(srcurl);\\n                //Âä®ÊÄÅËß£Êûê‰ª£Á†ÅÂºÄÂßã\\n                try {\\n                    //Â§ÑÁêÜÊåáÂÆöËßÜÈ¢ë‰∏éÁ∫øË∑Ø\\n                    if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos/.test(srcurl) && /http/.test(srcurl) && !/\\\\.html/.test(srcurl)) {\\n                        if (/wkfile/.test(srcurl)) {\\n                            return srcurl + ';{Referer@https://fantuan.wkfile.com/}'\\n                        } else if (/duoduozy/.test(ptab)) {\\n                            var json = fetch('https://player.duoduozy.com/ddplay/api.php?url=' + srcurl, {});\\n                            return JSON.parse(json).url;\\n                        } else {\\n                            return /\\\\=/.test(srcurl) ? srcurl.split('=')[1] : srcurl + '#isVideo=true#';\\n                        }\\n                    } else if (srcurl.indexOf(\\\"/share/\\\") != -1) {\\n                        try {\\n                            var link = srcurl.split(\\\"/share\\\")[0];\\n                            var fc = fetch(srcurl, {}).replace(\\\"var purl\\\", \\\"var main\\\");\\n                            if (fc.indexOf(\\\"main\\\") != -1) {\\n                                var mat = fc.match(/var main.*?;/)[0];\\n                                eval(mat);\\n                                var play = (main.indexOf(\\\"http\\\") != -1 ? main : link + main);\\n                            } else {\\n                                var main = fc.match(/url:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1];\\n                                var play = (main.indexOf(\\\"http\\\") != -1 ? main : link + main)\\n                            };\\n                            return play;\\n                        } catch (e) {\\n                            return 'x5WebView://' + (srcurl)\\n                        }\\n\\n                    } else if (ptab == 'alizy') {\\n                        var purl = fetch('https://foubin.com/jiexi.php?url=' + srcurl.split('url=')[1], {}).match(/\\\\\\\"url\\\\\\\":\\\\\\\"(.*?)\\\\\\\"/)[1];\\n                        return purl;\\n                    } else if (/983vip/.test(srcurl)) {\\n                        return JSON.parse(fetch(srcurl, {\\n                            headers: {\\n                                \\\"User-Agent\\\": MOBILE_UA\\n                            },\\n                            redirect: false,\\n                            withHeaders: true\\n                        })).headers.location[0];\\n                    } else if (/x\\\\-n\\\\.cc|nhdz666/.test(srcurl) && /\\\\.html|bilibili/.test(srcurl)) {\\n                        return openurl(srcurl.substring(srcurl.indexOf('=http') + 1));\\n                    }\\n                    //Â§ÑÁêÜÊåáÂÆöËßÜÈ¢ëÂíåÁ∫øË∑ØÁªìÊùü\\n                    //----ÂàÜÂâ≤Á∫ø----//\\n                    var scode = JSON.parse(fetch(srcurl, {\\n                        headers: {\\n                            \\\"User-Agent\\\": \\\"Dart/2.13 (dart:io)\\\"\\n                        },\\n                        redirect: false,\\n                        withStatusCode: true\\n                    }));\\n                    //log(scode);\\n                    if (scode.statusCode == '302' || scode.statusCode == '301') {\\n                        //ÊâìÂºÄËß£ÊûêÊúâ302ÈáçÂÆöÂêëÁöÑÈìæÊé•\\n                        var redurl = scode.headers.location[0].replace(/\\\\\\\\/g,'');\\n                        if (/\\\\=http/.test(redurl) && /html|bilibili/.test(redurl)) {\\n                            return JSON.parse(fetch(redurl, {})).url;\\n                        } else if (/\\\\=http/.test(redurl) && /\\\\.m3u8|\\\\.mp4|\\\\.flv/.test(redurl)) {\\n                            return redurl.substring(redurl.indexOf('=http') + 1);\\n                        } else {\\n                            return redurl\\n                        }\\n                    } else {\\n                        //var html = request(srcurl);\\n                        var html = scode.body;\\n                        if (/\\\\<body/.test(html)) {\\n                            log('Â∞ùËØïÁΩëÈ°µËß£Êûê');\\n                            requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                            return x5rule(srcurl, srcurl);\\n                            //return openurl(srcurl);\\n                        } else {\\n                            //jsonËß£ÊûêÁöÑÂèñÈìæÊé•\\n                            var purl = html.match(/[\\\\'\\\\\\\"]url[\\\\'\\\\\\\"]:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1].replace(/\\\\\\\\/g, '');\\n                            if (/http/.test(purl)) {\\n                                if (ptab == 'bilibili') {\\n                                    return purl + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n                                } else if (ptab == 'mgtv') {\\n                                    return purl + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                                } else {\\n                                    return purl + '#isVideo=true#'\\n                                };\\n                            } else if (/\\\\=http/.test(srcurl) && /\\\\.html|bilibili/.test(srcurl)) {\\n                                return openurl(srcurl.substring(srcurl.indexOf('=http') + 1));\\n                            } else {\\n                                //ÈùûhttpÂºÄÂ§¥ÁöÑÊâìÂºÄÂéüÈìæÊé•                                                                \\n                                return openurl(srcurl.substring(srcurl.indexOf('=http') + 1))\\n                            }\\n                        }\\n                    }\\n                } catch (e) {\\n                    //Êä•ÈîôÂà§Êñ≠Â§ÑÁêÜ\\n                    if (srcurl.substring(0, 2) == '\\\\/\\\\/') {\\n                        return openurl('https:' + srcurl);\\n                    } else if (/\\\\=http/.test(srcurl) && /\\\\.html|bilibili/.test(srcurl)) {\\n                        //return srcurl.split('=')[1];\\n                        return openurl(srcurl.substring(srcurl.indexOf('=http') + 1));\\n                    } else {\\n                        return openurl(srcurl)\\n                        //return 'x5WebView://'+srcurl\\n                    }\\n                }\\n                //Âä®ÊÄÅËß£Êûê‰ª£Á†ÅÁªìÊùü\\n            }, ptab, link, myurl),\\n            col_type: clt\\n        });\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"TVÁÆÄ‰ªã‰∏éÈÄâÈõÜ\",\"path\":\"tvmovlist\",\"rule\":\"var tabs = Object.keys(html.videolist);\\nvar thumb = html.img_url;\\neval(JSON.parse(fetch('hiker://page/dnplugin', {})).rule);\\nitems.push({\\n    title: 'ÂâßÊÉÖÁÆÄ‰ªãÔºö',\\n    desc: html.intro,\\n    pic_url: thumb,\\n    url: dnpug,\\n    col_type: 'movie_1_vertical_pic'\\n});\\n\\nfor (var i = 0; i < tabs.length; i++) {\\n    var list = html.videolist[tabs[i]];\\n    var ptab = tabs[i];\\n    items.push({\\n        title: ptab + ' üîó' + [i + 1] + '/' + [tabs.length],\\n        col_type: 'text_1'\\n    });\\n\\n    for (var j = 0; j < list.length; j++) {\\n        var srcurl = list[j].url;\\n        if (/293jx1/.test(srcurl)) {\\n            srcurl = srcurl.replace('293jx1', 'jx');\\n        } else if (/8d8q|diliktv|haokanju1|cztv|fit\\\\:8|ppzhu/.test(myurl)) {\\n            srcurl = srcurl + '&app=10000&account=272775028&password=qq272775028';\\n        }\\n        var title = list[j].title;\\n        if (list.length <= 4) {\\n            var clt = 'text_2';\\n        } else {\\n            var clt = isNaN(title) ? 'flex_button' : 'text_5'\\n        };\\n        items.push({\\n            title: title,\\n            url: $().lazyRule((ptab, srcurl, myurl) => {\\n                function openurl(resurl) {\\n                    if (resurl.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) && resurl.search(/html|bilibili/) != -1) {\\n                        var enDn = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n                        if (enDn == '1') {\\n                            log('Ë∞ÉÁî®Êñ≠ÊèíËß£Êûê');\\n                            eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                            eval(fetch(config.cj));\\n                            return aytmParse(resurl);\\n                        } else {\\n                            return resurl\\n                        };\\n                    } else {\\n                        return resurl\\n                    }\\n                };\\n                //log(srcurl);\\n                //Âä®ÊÄÅËß£Êûê‰ª£Á†ÅÂºÄÂßã\\n                try {\\n                    if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos/.test(srcurl) && /http/.test(srcurl)) {\\n                        return /\\\\=/.test(srcurl) ? srcurl.split('=')[1] : srcurl + '#isVideo=true#';\\n                    } else if (srcurl.indexOf(\\\"/share/\\\") != -1) {\\n                        try {\\n                            var link = srcurl.split(\\\"/share\\\")[0];\\n                            var fc = fetch(srcurl, {}).replace(\\\"var purl\\\", \\\"var main\\\");\\n                            if (fc.indexOf(\\\"main\\\") != -1) {\\n                                var mat = fc.match(/var main.*?;/)[0];\\n                                eval(mat);\\n                                var play = (main.indexOf(\\\"http\\\") != -1 ? main : link + main);\\n                            } else {\\n                                var main = fc.match(/url:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1];\\n                                var play = (main.indexOf(\\\"http\\\") != -1 ? main : link + main)\\n                            };\\n                            return play;\\n                        } catch (e) {\\n                            return 'x5WebView://' + (srcurl)\\n                        }\\n                    } else if (ptab == 'alizy') {\\n                        var purl = fetch('https://foubin.com/jiexi.php?url=' + srcurl, {}).match(/\\\\\\\"url\\\\\\\":\\\\\\\"(.*?)\\\\\\\"/)[1];\\n                        return purl;\\n                    } else if (/19jx\\\\.vip|nfyingshi/.test(srcurl)) {\\n                        var purl = JSON.parse(fetch(srcurl.replace('http://', 'https://'), {\\n                            headers: {\\n                                \\\"User-Agent\\\": MOBILE_UA\\n                            },\\n                            redirect: false,\\n                            withHeaders: true\\n                        })).headers.location[0];\\n                        if (/titan.mgtv/.test(purl)) {\\n                            return purl + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                        } else if (/obj\\\\/tos/.test(purl)) {\\n                            return purl + '#isVideo=true#';\\n                        } else {\\n                            return purl\\n                        };\\n                    } /*else if (/zhaikanys/.test(srcurl)) {\\n                        var purl = JSON.parse(fetch(srcurl + '&app=10003&account=272775028&password=qq272775028', {\\n                            headers: {\\n                                \\\"User-Agent\\\": MOBILE_UA\\n                            },\\n                            redirect: false,\\n                            withHeaders: true\\n                        })).headers.location[0];\\n                        if (/titan.mgtv/.test(purl)) {\\n                            return purl + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                        } else if (/obj\\\\/tos/.test(purl)) {\\n                            return purl + '#isVideo=true#';\\n                        } else {\\n                            return purl\\n                        };\\n                    }*/\\n\\n                    //----ÂàÜÂâ≤Á∫ø----//\\n                    var scode = JSON.parse(fetch(srcurl, {\\n                        headers: {\\n                            \\\"User-Agent\\\": MOBILE_UA\\n                        },\\n                        redirect: false,\\n                        withStatusCode: true\\n                    }));\\n                    //log(scode);\\n                    if (scode.statusCode == '302' || scode.statusCode == '301') {\\n                        var purl = scode.headers.location[0].replace(/\\\\\\\\/g, '');\\n                    } else {\\n                        //var html = request(srcurl);\\n                        var html = scode.body;\\n                        //log(html);\\n                        if (/\\\\\\\"url\\\\\\\"\\\\:\\\\\\\"http/.test(html)) {\\n                            var purl = html.match(/\\\\\\\"url\\\\\\\":\\\\\\\"(.*?)\\\\\\\"/)[1].replace(/\\\\\\\\/g, '');\\n                        } else if (html.startsWith('{')) {\\n                            var purl = srcurl.substring(srcurl.indexOf('=http') + 1);\\n                        } else {\\n                            //var purl = srcurl\\n                            requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                            return x5rule(srcurl, srcurl);\\n                            //return 'x5WebView://'+(srcurl) \\n                        }\\n                    };\\n                    //log(purl);\\n                    if (/titan.mgtv/.test(purl)) {\\n                        return purl + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                    } else if (/obj\\\\/tos/.test(purl)) {\\n                        return purl + '#isVideo=true#';\\n                    } else {\\n                        return purl\\n                    };\\n\\n                } catch (e) {\\n                    if (srcurl.substring(0, 2) == '\\\\/\\\\/') {\\n                        return openurl('https:' + srcurl);\\n                    } else if (/\\\\=http/.test(srcurl) && /\\\\.html|bilibili/.test(srcurl)) {\\n                        //return srcurl.split('=')[1];\\n                        return openurl(srcurl.substring(srcurl.indexOf('=http') + 1));\\n                    } else {\\n                        return openurl(srcurl)\\n                    }\\n                }\\n                //Âä®ÊÄÅËß£Êûê‰ª£Á†ÅÁªìÊùü\\n            }, ptab, srcurl, myurl),\\n            col_type: clt\\n        });\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"ÂàóË°®Ê®°ÂºèÊêúÁ¥¢‰∫åÁ∫ß\",\"path\":\"searerj\",\"rule\":\"var res = {};\\nvar items = [];\\nvar spl = getResCode().split('#x#');\\nvar typet = spl[3];\\nvar tdomin = spl[2];\\nvar key = spl[4];\\n\\nif (/vipmv/.test(tdomin)) {\\n    var bhtml = request(spl[1]);\\n} else {\\n    var bhtml = fetch(spl[1], {\\n        headers: {\\n            \\\"User-Agent\\\": \\\"Dart/2.13 (dart:io)\\\"\\n        }\\n    });\\n}\\ntry {\\n    bhtml = bhtml.startsWith('\\\\r\\\\n') ? bhtml.replace('\\\\r\\\\n', '') : bhtml;\\n} catch (e) {}\\nif (/btwaf/.test(bhtml)) {\\n    /*\\n                items.push({\\n                    title:'ÊúâÂÆùÂ°îÈ™åËØÅÔºåÁÇπÂáªËÆøÈóÆÂéüÁΩëÈ°µ',\\n                    url: spl[1] + `@lazyRule=.js:input.split(';')[0]`,\\n                    col_type: 'text_1'\\n                });\\n                */\\n\\n    bhtml = fetch(spl[1] + '&btwaf' + bhtml.match(/btwaf(.*?)\\\\\\\"/)[1], {});\\n\\n}\\n\\nif (bhtml == \\\"\\\" || bhtml == null || bhtml.substring(0, 5) == 'error' || !bhtml.startsWith('{')) {\\n    items.push({\\n        title: 'Êú™ÊêúÁ¥¢Âà∞Áõ∏ÂÖ≥ËµÑÊ∫êÔºåÁÇπÂáªËÆøÈóÆÂéüÁΩëÈ°µ',\\n        url: spl[1] + `@lazyRule=.js:input.split(';')[0]`,\\n        col_type: 'text_1'\\n    });\\n} else if (bhtml.length < 80) {\\n    items.push({\\n        title: 'ËøîÂõûÊï∞ÊçÆ‰∏çÂÆåÊï¥ÔºåÁÇπÂáªËÆøÈóÆÂéüÁΩëÈ°µ',\\n        url: spl[1] + `@lazyRule=.js:input.split(';')[0]`,\\n        col_type: 'text_1'\\n    });\\n} else {\\n    var html = JSON.parse(bhtml);\\n    //log(spl[1]);\\n    if (html.list) {\\n        var list = html.list;\\n    } else if (html.data.list) {\\n        var list = html.data.list;\\n    } else if (html.data) {\\n        var list = html.data;\\n    }\\n\\n    if (list.length < 1) {\\n        items.push({\\n            title: 'Êú™ÊêúÁ¥¢Âà∞ÔºåÁÇπÂáªËÆøÈóÆÂéüÁΩëÈ°µ',\\n            url: spl[1] + `@lazyRule=.js:input.split(';')[0]`,\\n            col_type: 'text_1'\\n        });\\n    } else {\\n        for (var i = 0; i < list.length; i++) {\\n\\n            if (/APPÂΩ±ËßÜ/.test(typet)) {\\n                if (tdomin.indexOf('api.php/app/') != -1) {\\n                    var title = list[i].vod_name;\\n                    var pic = list[i].vod_pic;\\n                    if (/fantuan/.test(tdomin)) {\\n                        var vid = 'https://fantuan.wkfile.com/api.php/app/video_detail?id=' + list[i].vod_id + '&token=';\\n                    } else {\\n                        var vid = tdomin + 'video_detail?id=' + list[i].vod_id + '&token=';\\n                    }\\n                    var rem = list[i].vod_remarks;\\n                    //var con=list[i].type.type_des;\\n                } else if (tdomin.indexOf('xgapp.php/v1/') != -1) {\\n                    var title = list[i].vod_name;\\n                    var pic = list[i].vod_pic;\\n                    var vid = tdomin + 'video_detail?id=' + list[i].vod_id;\\n                    var rem = list[i].vod_remarks;\\n                    //var con=list[i].type.type_des;\\n                } else {\\n                    var title = list[i].vod_name;\\n                    var pic = list[i].vod_pic;\\n                    if (/iopenyun/.test(tdomin)) {\\n                        var vid = tdomin + '/detailID?vod_id=' + list[i].vod_id + '&token=';\\n                    } else {\\n                        var vid = tdomin + '/detail?vod_id=' + list[i].vod_id + '&token=';\\n                    }\\n                    var rem = list[i].vod_remarks;\\n                    //var con=list[i].type.type_des;\\n                }\\n            } else if (/TVÂΩ±ËßÜ/.test(typet)) {\\n                var title = list[i].title;\\n                var pic = list[i].pic;\\n                //var vid=tdomin+'/detail?vod_id='+list[i].nextlink+'&rel_limit=10';\\n                var vid = list[i].nextlink;\\n                var rem = list[i].state;\\n                //var con=list[i].state;\\n            }\\n\\n            items.push({\\n                title: title.replace(key, '‚Äú‚Äú' + key + '‚Äù‚Äù'),\\n                pic_url: pic + '@Referer=',\\n                url: $(vid+';get;utf-8;{User-Agent@Dart/2.13 (dart:io)}').rule((typet) => {\\n                    var res = {};\\n                    var items = [];\\n                    var html = JSON.parse(getResCode());\\n                    items.push({\\n                        title: '',\\n                        desc: '255&&float',\\n                        url: '',\\n                        col_type: 'x5_webview_single'\\n                    });\\n                    refreshX5WebView('');\\n                    var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n                    if (/APPÂΩ±ËßÜ/.test(typet)) {\\n                        eval(JSON.parse(fetch('hiker://page/appmovlist', {})).rule);\\n                    } else if (/TVÂΩ±ËßÜ/.test(typet)) {\\n                        eval(JSON.parse(fetch('hiker://page/tvmovlist', {})).rule);\\n                    }\\n                    res.data = items;\\n                    setHomeResult(res);\\n                }, typet),\\n                //content:rem,\\n                desc: rem,\\n                col_type: 'movie_1_vertical_pic'\\n            });\\n        } //for i\\n    } //else list.length\\n}\\n\\nres.data = items;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"APPÈ¶ñÈ°µÂàóË°®\",\"path\":\"appindexdata\",\"rule\":\"if (html.list) {\\n    var list = html.list;\\n} else if (html.data && html.data.list) {\\n    var list = html.data.list;\\n} else {\\n    var list = html.data;\\n}\\n\\nfor (var i = 0; i < list.length; i++) {\\n    if (list[i].vod_list) {\\n        var lists = list[i].vod_list;\\n        var typename = list[i].vod_type_name;\\n    } else {\\n        var lists = list[i].vlist;\\n        var typename = list[i].type_name\\n    }\\n    items.push({\\n        title: typename,\\n        col_type: 'text_1'\\n\\n    });\\n\\n    for (var j = 0; j < lists.length; j++) {\\n        var title = lists[j].vod_name;\\n        var img = lists[j].vod_pic;\\n        var url = lists[j].vod_id;\\n        var desc = lists[j].vod_remarks;\\n        if (html.list) {\\n            var link = murl + 'video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n        } else if (html.data && html.data.list) {\\n            var link = murl + '/detail?vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n        } else {\\n            var link = murl + 'video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n        };\\n        if (/fantuan/.test(murl)) {\\n            var link = 'https://fantuan.wkfile.com/api.php/app/video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n        } else if (/iopenyun/.test(murl)) {\\n            var link = murl + '/detailID?vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@Dart/2.13 (dart:io)}';\\n        } else if (/dijiaxia/.test(murl)) {\\n            var link = 'http://www.dijiaxia.com/api.php/app/video_detail?id=' + url;\\n        }\\n        items.push({\\n            title: title,\\n            pic_url: img + '@Referer=',\\n            url: $(link).rule(() => {\\n                var res = {};\\n                var items = [];\\n                items.push({\\n                    title: '',\\n                    desc: '255&&float',\\n                    url: '',\\n                    col_type: 'x5_webview_single'\\n                });\\n                refreshX5WebView('');\\n                var html = JSON.parse(getResCode());\\n                var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n                eval(JSON.parse(fetch('hiker://page/appmovlist', {})).rule);\\n                res.data = items;\\n                setHomeResult(res);\\n            }),\\n            desc: desc,\\n            col_type: 'movie_3_marquee'\\n        });\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÊ¨°ÂØºÂÖ•Á≠âÂæÖ\",\"path\":\"wait\",\"rule\":\"function canUse() {\\n    //Â¶ÇÊûúÊõ¥Êñ∞‰∫ÜËßÑÂàô‰πüË¶ÅÈôêÊµÅÔºåÂèØ‰ª•‰øÆÊîπkey\\n    let key = \\\"lock4\\\"\\n    //Á≠âÂæÖÂàÜÈíüÊï∞\\n    let waitMin = 20\\n    \\n    let min = Math.round(Math.random() * 1000 * 60 * waitMin)\\n    let unlock = new Date().getTime() + min;\\n    let time = getItem(key, \\\"\\\");\\n    if (time == \\\"\\\") {\\n        setItem(key, \\\"\\\" + unlock)\\n        let st = new Date(unlock).toLocaleString().replace(/:\\\\d{1,2}$/, ' ');\\n        let msg = \\\"ËøôÊòØÊÇ®Á¨¨‰∏ÄÊ¨°‰ΩøÁî®ËØ•ÁâàÊú¨ËßÑÂàôÔºå‰∏∫ÈÅøÂÖçÁ¨¨‰∏ÄÊ¨°ÂØºÂÖ•‰ΩøÁî®‰∫∫Êï∞ÊøÄÂ¢ûÔºåËßÑÂàôÂ∞ÜÂú®\\\" + st + \\\"Ëß£ÈîÅ‰ΩøÁî®„ÄÇ<br><br>Â•ΩËßÑÂàô‰∏çÊÄïÊôöÔºåËØ∑ËÄêÂøÉÁ≠âÂæÖÔºÅËØ•ÊèêÁ§∫‰ªÖÂú®Á¨¨‰∏ÄÊ¨°ÂØºÂÖ•ÔºàÊõ¥Êñ∞ÔºâÊó∂Âá∫Áé∞ÔºåÂêéÁª≠‰ΩøÁî®ËøáÁ®ã‰∏≠‰∏ç‰ºöÂá∫Áé∞ÔºÅ\\\"\\n        setResult([{\\n            title: msg,\\n            col_type: \\\"rich_text\\\"\\n        }])\\n        return false\\n    } else if (parseInt(time) < new Date().getTime()) {\\n        return true\\n    } else {\\n        let st = new Date(parseInt(time)).toLocaleString().replace(/:\\\\d{1,2}$/, ' ');\\n        let msg = \\\"‰∏∫ÈÅøÂÖç‰ΩøÁî®‰∫∫Êï∞ÊøÄÂ¢ûÔºåËßÑÂàôÂ∞ÜÂú®\\\" + st + \\\"Ëß£ÈîÅ‰ΩøÁî®„ÄÇ<br><br>Â•ΩËßÑÂàô‰∏çÊÄïÊôöÔºåËØ∑ËÄêÂøÉÁ≠âÂæÖÔºÅËØ•ÊèêÁ§∫‰ªÖÂú®Á¨¨‰∏ÄÊ¨°ÂØºÂÖ•ÔºàÊõ¥Êñ∞ÔºâÊó∂Âá∫Áé∞ÔºåÂêéÁª≠‰ΩøÁî®ËøáÁ®ã‰∏≠‰∏ç‰ºöÂá∫Áé∞ÔºÅ\\\"\\n        setResult([{\\n            title: msg,\\n            col_type: \\\"rich_text\\\"\\n        }])\\n        return false\\n    }\\n}\\n$.exports = canUse();\"},{\"col_type\":\"movie_3\",\"name\":\"Êñ≠ÂøµÊèí‰ª∂Ë∞ÉÁî®\",\"path\":\"dnplugin\",\"rule\":\"var dnpug = $().rule(() => {\\n    var d = [];\\n    setPageTitle('Êñ≠ÂøµÊèí‰ª∂ËÆæÁΩÆ')\\n    var enDn = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n    d.push({\\n        title: 'Êñ≠ÂøµÊèí‰ª∂Ë∞ÉÁî®',\\n        url: 'hiker://empty',\\n        col_type: 'text_center_1'\\n    });\\n    d.push({\\n        title: 'ÂΩìÂâçÔºö' + '(' + (enDn == 1 ? 'Â∑≤ÂêØÁî®' : 'Â∑≤Á¶ÅÁî®') + ')',\\n        url: $('hiker://empty').lazyRule(() => {\\n            var md = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n\\n            if (md == 1) {\\n                var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace('\\\\\\\"enDn\\\\\\\":\\\\\\\"1\\\\\\\"', '\\\\\\\"enDn\\\\\\\":\\\\\\\"0\\\\\\\"');\\n                writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n                refreshPage(false);\\n                return 'toast://Â∑≤Á¶ÅÁî®Êñ≠ÊèíË∞ÉÁî®ÔºÅ';\\n            } else {\\n                var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace('\\\\\\\"enDn\\\\\\\":\\\\\\\"0\\\\\\\"', '\\\\\\\"enDn\\\\\\\":\\\\\\\"1\\\\\\\"');\\n                //log(fileUrl);\\n                writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n                refreshPage(false);\\n                return 'toast://Â∑≤ÂºÄÂêØÊñ≠ÊèíË∞ÉÁî®ÔºÅ'\\n            }\\n        }),\\n        col_type: 'text_2'\\n    });\\n    d.push({\\n        title: 'ÁÆ°ÁêÜËß£Êûê',\\n        url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/jxItem.js');jxItem.jxList();setResult(d)\\\",\\n        col_type: 'text_2'\\n    });\\n    d.push({\\n        title: 'Á∫øË∑ØÈÖçÁΩÆ',\\n        url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/Route.js');Route.setParse();setResult(d);\\\",\\n        col_type: 'text_2'\\n    });\\n    setResult(d)\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"ËÆæÁΩÆÈ°µ‰ª£Á†Å\",\"path\":\"setting\",\"rule\":\"var d = [];\\nvar setjson = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {}));\\nvar ssmd = setjson.ssmode;\\nvar ssxc = setjson.sscount;\\nd.push({\\n    title: 'ÊêúÁ¥¢Ê®°ÂºèËÆæÁΩÆ',\\n    col_type: 'text_center_1'\\n});\\nd.push({\\n    title: 'ÂΩìÂâçÔºö' + '(' + (ssmd == 1 ? 'ËÅöÂêàÁªìÊûú' : 'ÂºïÊìéÂàóË°®') + ')',\\n    url: $('hiker://empty').lazyRule(() => {\\n        var md = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).ssmode;\\n\\n        if (md == 1) {\\n            var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace('\\\\\\\"ssmode\\\\\\\":\\\\\\\"1\\\\\\\"', '\\\\\\\"ssmode\\\\\\\":\\\\\\\"0\\\\\\\"');\\n            writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n            back(true);\\n            return 'toast://ÂàáÊç¢‰∏∫ÊêúÁ¥¢ÂºïÊìéÂàóË°®ÂçïÈÄâÊ®°ÂºèÊàêÂäüÔºÅ';\\n        } else {\\n            var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace('\\\\\\\"ssmode\\\\\\\":\\\\\\\"0\\\\\\\"', '\\\\\\\"ssmode\\\\\\\":\\\\\\\"1\\\\\\\"');\\n            //log(fileUrl);\\n            writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n            back(true);\\n            return 'toast://ÂàáÊç¢‰∏∫ËÅöÂêàÊêúÁ¥¢Ê®°ÂºèÊàêÂäüÔºÅ'\\n        }\\n    }),\\n    col_type: 'text_2'\\n})\\n\\nd.push({\\n    title: 'ÊêúÁ¥¢Á∫øÁ®ãËÆæÁΩÆ',\\n    col_type: 'text_center_1'\\n});\\nd.push({\\n    title: 'ÂΩìÂâçÁ∫øÁ®ã' + ssxc + '  ' + '‰Ω†ËæìÂÖ•ÁöÑÊòØ' + parseInt(getVar('appmssxcset', '')),\\n    col_type: 'rich_text'\\n});\\n\\nd.push({\\n    title: 'ËÆæÁΩÆÊêúÁ¥¢Á∫øÁ®ã',\\n    url: \\\"input://\\\" + '' + \\\"////ËØ∑ËæìÂÖ•‰∏Ä‰∏™Êï¥Êï∞Êï∞Â≠óÔºåÊé®ËçêÊúÄÂ§ß‰∏çË¶ÅË∂ÖËøá15„ÄÇ.js:putVar('appmssxcset',input);refreshPage()\\\",\\n    col_type: 'text_2'\\n});\\n\\nd.push({\\n    title: '‰øùÂ≠òÁ∫øÁ®ãËÆæÁΩÆ',\\n    url: $().lazyRule(() => {\\n        var num = parseInt(getVar('appmssxcset')).toString();\\n        if (num == 'NaN') {\\n            return 'toast://ËæìÂÖ•ÁöÑÂÄºÂ•ΩÂÉè‰∏çÊ≠£Á°Æ„ÄÇ';\\n        } else {\\n            var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace(/\\\\\\\"sscount\\\\\\\":\\\\\\\"[\\\\S]*\\\\\\\"/, '\\\\\\\"sscount\\\\\\\":\\\\\\\"' + num + '\\\\\\\"');\\n            writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n            //refreshPage(true);\\n            back(true);\\n            return 'toast://‰øùÂ≠òËÆæÁΩÆÊêúÁ¥¢Á∫øÁ®ãÂÆåÊàêÔºÅ';\\n        }\\n\\n    }),\\n    col_type: 'text_2'\\n});\\nd.push({\\n    title: 'Êõ¥Êñ∞Áõ∏ÂÖ≥',\\n    col_type: 'text_center_1'\\n});\\nd.push({\\n    title: 'Ê£ÄÊµãÊõ¥Êñ∞',\\n    url: $('').lazyRule((locver) => {\\n        var remf = fetchCache('https://codeberg.org/lzk23559/cloudrule/raw/branch/master/appmovie.txt', 24);\\n        if (/Ôø•base64/.test(remf)) {\\n            var remv = JSON.parse(base64Decode(remf.split('@')[2])).version;\\n        } else {\\n            var remv = JSON.parse(remf.split('home_ruleÔø•')[1]).version;\\n        }\\n        log('ËøúÁ®ãÁâàÊú¨Ôºö' + remv);\\n        log('Êú¨Âú∞ÁâàÊú¨Ôºö' + locver);\\n        if (locver != remv) {\\n            putVar('appnver', remf);\\n            refreshPage();\\n            return 'toast://ÊúâÊñ∞ÁâàÊú¨ÔºåÁÇπÂØºÂÖ•Êõ¥Êñ∞ÂèØÊõ¥Êñ∞ËßÑÂàô„ÄÇ';\\n        } else {\\n            return 'toast://ÊöÇÊó†Êñ∞ÁâàÊú¨„ÄÇ'\\n        }\\n    }, locver),\\n    col_type: 'text_2'\\n});\\nif (getVar('appnver')) {\\n    d.push({\\n        title: 'ÂØºÂÖ•Êõ¥Êñ∞',\\n        url: $('').lazyRule(()=>{\\n           return getVar('appnver');\\n        }),\\n        col_type: 'text_2'\\n    });\\n}\\nsetResult(d)\"}]",
    "icon": ""
  },
  {
    "last_chapter_rule": "",
    "title": "È¶ôÊÉÖÂΩ±ËßÜ",
    "author": "È¶ôÈõÖÊÉÖ",
    "url": "hiker://files/rules/xyq/hikermovie.json",
    "version": 3,
    "col_type": "icon_4_card",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikhmrule();",
    "search_url": "hiker://empty$$$hiker://files/rules/xyq/hikermovie.json$$$**$$$fypage$$$",
    "group": "‚ë°ÂΩ±Êêú",
    "searchFind": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hiksearch();",
    "detail_col_type": "movie_1",
    "detail_find_rule": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikhmerj();",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikseaerji();",
    "ua": "mobile",
    "preRule": "//ËÆæÁΩÆÊõ¥Êñ∞Èó¥ÈöîÊó∂Èó¥,Âçï‰Ωç‰∏∫Êï¥Êï∞Â§©„ÄÇ\nvar uptime = 2;\n\nfunction uprulefile() {\n    var rulejs = fetch('https://code.aliyun.com/lzk23559/CloudRule/raw/master/hikermovie.js', {});\n    if (rulejs.search(/lazyRule/) == -1) {\n        rulejs = fetch('https://codeberg.org/lzk23559/cloudrule/raw/branch/master/hikermovie.js', {});\n    }\n    if (rulejs.search(/lazyRule/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikermovie.js\", rulejs);\n    }\n    var rulejson = fetch('https://code.aliyun.com/lzk23559/CloudRule/raw/master/hikermovie.json', {});\n    if (rulejson.search(/\\\"vodhref\\\"/) == -1) {\n        rulejson = fetch('https://codeberg.org/lzk23559/cloudrule/raw/branch/master/hikermovie.json', {});\n    }\n    if (rulejson.search(/\\\"vodhref\\\"/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikermovie.json\", rulejson);\n    }\n    if (rulejs.search(/lazyRule/) != -1 && rulejson.search(/\\\"vodhref\\\"/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikerupdate.txt\", new Date() + '');\n        confirm({title:'ÊèêÁ§∫', content:'Ëá™Âä®Êõ¥Êñ∞ÂÆåÊàê'});\n    } else {\n        confirm({title:'ÊèêÁ§∫', content:'Ëá™Âä®Êõ¥Êñ∞Â§±Ë¥•'});\n    }\n}\n\n\n\n//Ê£ÄÊµãÊòØÂê¶ÊúâÂÜôÂÖ•Êó∂Èó¥‰∏éËßÑÂàôÁöÑjsÊèí‰ª∂Êñá‰ª∂\nif (fileExist(\"hiker://files/rules/xyq/hikerupdate.txt\") && fileExist(\"hiker://files/rules/xyq/hikermovie.js\") && fileExist(\"hiker://files/rules/xyq/hikermovie.json\")) {\n    //ËÆ°ÁÆóÊó∂Èó¥Èó¥Èöî\n    var start = new Date(fetch(\"hiker://files/rules/xyq/hikerupdate.txt\", {}));\n    var nowt = new Date();\n    var D_T = nowt.getTime() - start.getTime();\n    var D_D = D_T / (1000 * 3600 * 24);\n    var tdif = parseInt(D_D) + '';\n    //log(tdif);\n    //ÈªòËÆ§Èó¥ÈöîË∂ÖËøáËÆæÁΩÆÂ§©Êï∞Â∞±Âèñ‰∏ÄÊ¨°‰∫ëÁ´ØÊñá‰ª∂\n    if (tdif >= uptime || tdif < 0) {\n        uprulefile();\n    }\n} else {\n    //Â¶ÇÊûúÂ∞ë‰∏Ä‰∏™Êñá‰ª∂Â∞±Ëá™Âä®Âèñ‰∫ëÁ´ØÊñá‰ª∂\n    uprulefile();\n}\n\n\n\n//ÊâßË°åÈúÄË¶ÅÈ¢ÑÂ§ÑÁêÜÁöÑÁ´ôÁÇπ\nvar lac = fetch('hiker://files/rules/xyq/hikermovie.js');\n//log(lac.length);\nif (lac.search(/lazyRule/) != -1) {\n    eval(lac);\n    hikerpre();\n} else {\n    //Â¶ÇÊûúÊú¨Âú∞Êñá‰ª∂‰∏çÂØπÂ∞ÜÂ∞ùËØïËá™‰øÆÂ§ç\n    uprulefile();\n    setError('ËßÑÂàô‰øÆÂ§çÂÆåÊàêÔºåÂ¶ÇÊúâÈóÆÈ¢òËØ∑ÂèçÈ¶à„ÄÇ')\n}",
    "pages": "[]"
  },
  {
    "last_chapter_rule": "",
    "title": "ËµÑÊ∫êÁΩëÈááÈõÜ.xyq",
    "author": "È¶ôÈõÖÊÉÖ",
    "url": "hiker://files/rules/xyq/ZYWCJ.txt",
    "version": 1,
    "col_type": "movie_3",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywhm();",
    "search_url": "hiker://$$$?wd=**&pg=1&ac=list$$$fypage",
    "group": "‚ë°ÂΩ±Êêú",
    "searchFind": "js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywsea();",
    "detail_col_type": "movie_1",
    "detail_find_rule": "js:\r\neval(fetch('hiker://files/rules/xyq/zywcj.js',{}));\nTWEJ();",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "js:\neval(fetch('hiker://files/rules/xyq/zywcj.js'));zywerj();",
    "ua": "mobile",
    "preRule": "function uprulefile() {\n    var ruletxt = fetch('https://codeberg.org/lzk23559/PublicRule/raw/branch/master/ZYWCJ.txt', {});\n    var rulejs = fetch('https://codeberg.org/lzk23559/PublicRule/raw/branch/master/zywcj.js', {});\n    if (rulejs.search(/lazyRule/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/zywcj.js\", rulejs);\n        writeFile(\"hiker://files/rules/xyq/ZYWCJ.txt\", ruletxt);\n    } else {\n        setError('ËßÑÂàôÊñá‰ª∂Ëé∑ÂèñÂ§±Ë¥•ÔºåÂèØËÉΩÁΩëÁªúÊúâÈóÆÈ¢ò„ÄÇ')\n    };\n};\n\n//Ê£ÄÊµãÊòØÂê¶ÊúâËßÑÂàô‰∏éJSÊñá‰ª∂\nif (fileExist(\"hiker://files/rules/xyq/zywcj.js\") && fileExist(\"hiker://files/rules/xyq/ZYWCJ.txt\")) {\n    //ÊâßË°åÈ¢ÑÂ§ÑÁêÜ\n    var lac = fetch('hiker://files/rules/xyq/zywcj.js');\n    if (lac.search(/lazyRule/) != -1) {\n        eval(lac);\n        if (filter(base64Decode('VklQ'))) {\n            zywpre();\n        } else {\n            uprulefile();\n        };\n    } else {\n        //Â¶ÇÊûúÊú¨Âú∞Êñá‰ª∂‰∏çÂØπÂ∞ÜÂ∞ùËØïËá™‰øÆÂ§ç\n        uprulefile();\n        eval(fetch('hiker://files/rules/xyq/zywcj.js'));\n        zywpre();\n    };\n} else {\n    uprulefile();\n    //ÊâßË°åÈ¢ÑÂ§ÑÁêÜ\n    eval(fetch('hiker://files/rules/xyq/zywcj.js'));\n    zywpre();\n};",
    "pages": "[]",
    "icon": ""
  },
  {
    "last_chapter_rule": "",
    "title": "ËΩªÂêàÈõÜ.Êôì",
    "author": "ËΩªÂêàÈõÜÁîüÊàêÂô®",
    "url": "hiker://empty",
    "version": 78,
    "col_type": "icon_round_small_4",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon||'https://cf-ipfs.com/ipfs/QmXxgDVAZLWhFxikrAFVPRZQuJ2uFae7syXhFubPwMwUiU',\n            extra: { RULE: v }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "movie_1",
    "detail_find_rule": "",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=450384733')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "https://www.hualigs.cn/image/6107d579a6403.jpg"
  },
  {
    "last_chapter_rule": "",
    "title": "ËΩªÂêàÈõÜ.ËóçÂáã",
    "author": "ËΩªÂêàÈõÜÁîüÊàêÂô®",
    "url": "hiker://empty",
    "version": 78,
    "col_type": "icon_round_small_4",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon||'https://cf-ipfs.com/ipfs/QmXxgDVAZLWhFxikrAFVPRZQuJ2uFae7syXhFubPwMwUiU',\n            extra: { RULE: v }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "movie_1",
    "detail_find_rule": "",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=1286098114')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "http://q1.qlogo.cn/g?b=qq&nk=1286098114&s=640"
  },
  {
    "last_chapter_rule": "",
    "title": "ËΩªÂêàÈõÜ.ÈÄêÈ£éËÄÖ",
    "author": "ËΩªÂêàÈõÜÁîüÊàêÂô®",
    "url": "hiker://empty",
    "version": 78,
    "col_type": "icon_round_small_4",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon||'https://cf-ipfs.com/ipfs/QmXxgDVAZLWhFxikrAFVPRZQuJ2uFae7syXhFubPwMwUiU',\n            extra: { RULE: v }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "movie_1",
    "detail_find_rule": "",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=510381049')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "http://q1.qlogo.cn/g?b=qq&nk=510381049&s=640"
  },
  {
    "last_chapter_rule": "",
    "title": "ËΩªÂêàÈõÜ.ÂõûÂøÜ",
    "author": "ËΩªÂêàÈõÜÁîüÊàêÂô®",
    "url": "hiker://empty",
    "version": 78,
    "col_type": "icon_round_small_4",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon||'https://cf-ipfs.com/ipfs/QmXxgDVAZLWhFxikrAFVPRZQuJ2uFae7syXhFubPwMwUiU',\n            extra: { RULE: v }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "movie_1",
    "detail_find_rule": "",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=184462840')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "http://q1.qlogo.cn/g?b=qq&nk=184462840&s=640"
  },
  {
    "last_chapter_rule": "",
    "title": "ËΩªÂêàÈõÜ.ËìùËéì‚ôî",
    "author": "ËΩªÂêàÈõÜÁîüÊàêÂô®",
    "url": "hiker://empty",
    "version": 78,
    "col_type": "icon_round_4",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon||'https://cf-ipfs.com/ipfs/QmXxgDVAZLWhFxikrAFVPRZQuJ2uFae7syXhFubPwMwUiU',\n            extra: { RULE: v }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "movie_1",
    "detail_find_rule": "",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=2579949378')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "https://z3.ax1x.com/2021/09/27/42IJ56.jpg"
  },
  {
    "last_chapter_rule": "",
    "title": "ËΩªÂêàÈõÜ.‰ª∞ÊúõÊòüÁ©∫",
    "author": "ËΩªÂêàÈõÜÁîüÊàêÂô®",
    "url": "hiker://empty",
    "version": 78,
    "col_type": "icon_round_small_4",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon||'https://cf-ipfs.com/ipfs/QmXxgDVAZLWhFxikrAFVPRZQuJ2uFae7syXhFubPwMwUiU',\n            extra: { RULE: v }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "movie_1",
    "detail_find_rule": "",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=1290597077')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "http://q1.qlogo.cn/g?b=qq&nk=1290597077&s=640"
  },
  {
    "last_chapter_rule": "",
    "title": "ËΩªÂêàÈõÜ.Â≠ê‰∏ëÂØÖÂçØ",
    "author": "ËΩªÂêàÈõÜÁîüÊàêÂô®",
    "url": "hiker://empty",
    "version": 78,
    "col_type": "icon_round_small_4",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon||'https://cf-ipfs.com/ipfs/QmXxgDVAZLWhFxikrAFVPRZQuJ2uFae7syXhFubPwMwUiU',\n            extra: { RULE: v }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "movie_1",
    "detail_find_rule": "",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=2449105024')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "https://i03piccdn.sogoucdn.com/ed5ffed305c1bbea"
  },
  {
    "last_chapter_rule": "",
    "title": "ËΩªÂêàÈõÜ¬∑TyrantG",
    "author": "Â∞èÊ£âË¢Ñüåû&Ê∞∏Ëøú„ÅÆÊòéÊó•",
    "url": "hiker://empty",
    "version": 78,
    "col_type": "icon_2_round",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon,\n            extra: { RULE: v }\n        }\n    if(newWindow) Object.assign(d.extra, { newWindow: true, windowId: getItem('myCollection') + d.title })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "movie_1",
    "detail_find_rule": "",
    "sdetail_col_type": "movie_1",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "setItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'https://git.tyrantg.com/tyrantgenesis/hikerViewRules/raw/master/data/rules.json')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "https://git.tyrantg.com/tyrantgenesis/hikerViewRules/raw/master/assets/images/avatar.jpg"
  },
  {
    "last_chapter_rule": "",
    "title": "ËÅöÊº´üîÆ",
    "author": "‰∫∫Ê∞ëÂ§ß‰ºó",
    "url": "hiker://empty",
    "version": 211130,
    "col_type": "icon_round_small_4",
    "class_name": "",
    "class_url": "",
    "area_name": "",
    "area_url": "",
    "sort_name": "",
    "year_name": "",
    "sort_url": "",
    "year_url": "",
    "find_rule": "js:\nconst {\n    dataLoad\n} = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet el = [{\n    title: ' ' + getItem('myCollection').bold() + ' &nbsp &nbsp ' + '‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô'.small(),\n    url: 'hiker://page/Config?rule=' + getItem('myCollection'),\n    img: MY_RULE.icon || 'hiker://images/icon1',\n    col_type: 'avatar'\n}, {\n    url: '\"hiker://search?s=\"+input+\"&rule=' + getItem('myCollection') + '\"',\n    desc: 'Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...',\n    title: 'ÊêúÁ¥¢',\n    col_type: 'input'\n}]\n\nif (getItem(\"read_policy\") !== \"1\") {\n    el.push({\n        title: '‚Äú‚Äú‚Äù‚Äù<small><font color=#871f78>‰ª•‰∏ãÊï∞ÊçÆÊù•Ê∫ê‰∫éÁΩëÁªúÔºåÂ¶ÇÊÇ®ÂñúÊ¨¢ÔºåËØ∑ÊîØÊåÅÂÆòÊñπ</font></small>',\n        desc: '‚Äú‚Äú‚Äù‚Äù<small><font color=#f20c00>Êú¨ËßÑÂàô‰ªÖÈôêÂ≠¶‰π†‰∫§ÊµÅ‰ΩøÁî®ÔºåËØ∑‰∫éÂØºÂÖ•Âêé24Â∞èÊó∂ÂÜÖÂà†Èô§Ôºå‰ªª‰ΩïÁªÑÁªáÊàñ‰∏™‰∫∫‰∏çÂæó‰ª•‰ªª‰ΩïÊñπÂºèÊñπÊ≥ï‰º†Êí≠Ê≠§ËßÑÂàôÁöÑÊï¥‰ΩìÊàñÈÉ®ÂàÜÔºÅ</font></small>',\n        url: $('#noHistory#').lazyRule(() => {\n            setItem(\"read_policy\", \"1\")\n            refreshPage(false)\n            return \"toast://‰Ω†Â∑≤ÂêåÊÑèËØ•ÂçèËÆÆ\"\n        }),\n        col_type: 'text_center_1'\n    })\n}\n\nlet newWindow = readFile('newWindow')\ndataLoad().forEach((v) => {\n    let fypage = /^[^;]*?fypage.*?(;.*)?$/.test(v.url) ? 'fypage' : '1',\n        d = {\n            title: v.title,\n            url: 'hiker://page/indexLoad?#' + fypage + '#noHistory#',\n            img: v.icon || 'https://cf-ipfs.com/ipfs/QmXxgDVAZLWhFxikrAFVPRZQuJ2uFae7syXhFubPwMwUiU',\n            extra: {\n                RULE: v\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: getItem('myCollection') + d.title\n    })\n    el.push(d)\n})\nsetResult(el)",
    "search_url": "hiker://empty?keyword=**&page=fypage",
    "group": "‚ë†ËΩªÂêàÈõÜ",
    "searchFind": "js:\nvar { dataLoad, runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\nlet myCollection_el = [],\n    searchThd = parseInt(readFile('searchThd') || '5'),\n    keyword = getParam('keyword'),\n    pageNum = parseInt(getParam('page')),\n    RULES = dataLoad().filter((v) => v.search_url)\nif (searchThd == 0) {\n    myCollection_el.push({\n        title: ('‚¨á ÈÄâÊã©‰∏Ä‰∏™Â∞èÁ®ãÂ∫èÊü•Áúã' + keyword + 'ÁöÑÊêúÁ¥¢ÁªìÊûú ‚¨á').small(),\n        url: 'hiker://empty'\n    })\n    RULES.forEach((v) => myCollection_el.push({\n        title: v.title,\n        url: \"hiker://page/singleSearch?keyword=\" + keyword + \"&page=fypage\",\n        extra: { rule: getItem('myCollection'), RULE: v },\n    }))\n} else if (searchThd > 0) {\n    let searchCount = pageNum * searchThd,\n        searchTag = { title: '‚¨Ü Â∑≤ÊêúÁ¥¢‰∫Ü' + searchCount + '‰∏™Â∞èÁ®ãÂ∫è ‚¨Ü\\n‚¨á ‰∏ãÈù¢ËøòÊúâ' + RULES.slice(searchCount).length + '‰∏™Â∞èÁ®ãÂ∫è ‚¨á' }\n    RULES = RULES.slice(searchCount - searchThd, searchCount)\n    if (!RULES.length) setResult([])\n\n    let URLS = RULES.map((RULE) => {\n        MY_RULE.ua = RULE.ua\n        let urlReq = urlParse(RULE.search_url, {}, 1, (url) => {\n            url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\*\\*/g, encodeStr(keyword, url[2]))\n        })\n        return { url: urlReq.MY_URL, options: urlReq.MY_URL_Options }\n    })\n    batchFetch(URLS).forEach((indexHtml, index) => {\n        // Â§ÑÁêÜMY_URLÂíåMY_RULE\n        let RULE = RULES[index]\n        MY_URL = URLS[index].url\n        MY_RULE.ua = RULE.ua\n        MY_RULE.col_type = RULE.col_type\n        MY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\n        MY_RULE.find_rule = RULE.searchFind\n        MY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\n        MY_RULE.preRule = RULE.preRule\n        MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\n        MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\n        MY_RULE.last_chapter_rule = RULE.last_chapter_rule\n        MY_RULE.params = {}\n        MY_RULE.url = MY_URL\n        MY_RULE.urlHeaders = URLS[index].options.headers\n\n        // Ê≠£ÊñáËß£Êûê\n        eval(MY_RULE.preRule)\n        if (MY_RULE.find_rule.startsWith('js:')) {\n            function getUrl() {\n                return MY_URL\n            }\n\n            function getResCode() {\n                return indexHtml\n            }\n\n            setResult = function(el) {\n                if (Array.isArray(el.data)) el = el.data\n                Array.prototype.push.apply(myCollection_el, el.map((v) => {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    v.desc = RULE.title + ' ‚ñ™ ' + (v.desc || '')\n\n                    if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\n                        return v\n                    } else if (v.url.includes('@rule=')) {\n                        let [_, url, rule] = v.url.match(/^([\\s\\S]*?)@rule=([\\s\\S]*)$/)\n                        v.url = url\n                        MY__RULE.detail_find_rule = rule\n                        MY__RULE.detail_col_type = MY_RULE.col_type\n                    } else if (v.url.startsWith('hiker://page/')) {\n                        if (v.url.includes('rule=') || (v.extra || {}).rule)\n                            return v\n                        let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\/\\/page\\/(.+?)(?:\\?(.*))?$/),\n                            subPage = MY_RULE.pageList.find((v) => v.path == path),\n                            subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\n                        v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\n                        MY__RULE.detail_find_rule = subPage.rule\n                        MY__RULE.detail_col_type = subPage.col_type\n                        MY__RULE.params = v.extra || {}\n                    } else if (v.url.includes('@lazyRule=')) {\n                        v.url = v.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                        return v\n                    } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\n                    v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\n                    v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                    if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\n\n                    return v\n                }))\n            }\n            setHomeResult = setResult\n            setSearchResult = setResult\n\n            try {\n                eval(MY_RULE.find_rule.slice(3))\n            } catch (e) {}\n        } else {\n            let findRule = MY_RULE.find_rule.split(';')\n            parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\n                let [title, url, desc, content, img] = findRule.map((v, i) => {\n                        try {\n                            if (v == '*') return ''\n                            else v = (i == 1 || i == 4) ?\n                                parseDom(data, v) :\n                                parseDomForHtml(data, v)\n                            if (i != 1) v = runCode(v)\n                            return v\n                        } catch (e) { return '' }\n                    }),\n                    res = {\n                        title: title,\n                        url: url,\n                        desc: RULE.title + ' ‚ñ™ ' + desc,\n                        content: content,\n                        img: img\n                    }\n                if (res.url) {\n                    let MY__RULE = Object.assign({}, MY_RULE, { title: RULE.title })\n                    if (res.url.includes('@lazyRule=')) {\n                        res.url = res.url.replace('.js:', '.js:\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY__RULE.pages, pageList: MY__RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\"' + MY_URL + '\";')\n                    } else if (MY_RULE.detail_find_rule) {\n                        res.extra = { url: url, RULE: MY__RULE, pageTitle: title }\n                        res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\n                        if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\n                    }\n                }\n                myCollection_el.push(res)\n            })\n        }\n    })\n    myCollection_el.push(searchTag)\n}\nmethod_setResult.invoke(javaContext, myCollection_el, CALLBACK_KEY, MY_RULE, MY_TYPE)\n",
    "detail_col_type": "text_3",
    "detail_find_rule": "",
    "sdetail_col_type": "text_3",
    "sdetail_find_rule": "",
    "ua": "mobile",
    "preRule": "initConfig({\n    categoryLocalLib: 'hiker://files/rules/js/categories-header.js',\n    categoryGiteeLib: 'https://gitee.com/reborn0/HikerRules/raw/master/plugins/categories-header.js',\n\n\n    ‰æùËµñ: \"http://hiker.nokia.press/hikerule/rulelist.json?id=2454\",\n    Êõ¥Êñ∞Èó¥Èöî: 520\n\n});\nsetItem('myCollection', MY_RULE.title)\nsetItem('remoteUrl', 'http://hiker.nokia.press/hikerule/rulelist.json?id=2764')\n// \n// ÂåÖË£πÈîôËØØ",
    "pages": "[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"function ClassTab(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + MY_RULE.title + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = getVar('fold_' + this.sign, '')\\n        if (this.fold) el.push({\\n            title: '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:#049eff\\\">' + (folded ? '‚ñ∂' : '‚ñº'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n                selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: (selected == now ? '‚Äú‚Äú‚Äù‚Äù<span style=\\\"color:' + this.color + '\\\"><b>' : '') + name,\\n                    url: $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        putVar(sign, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        if (defaultClass) defaultClass = JSON.stringify({\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        })\\n        else throw new Error('cannot find id: ' + id + ' in classTab: ' + this.sign)\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    getLastClick() {\\n        return JSON.parse(getVar(this.sign, '{}'))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n$.exports = ClassTab\\n\"},{\"col_type\":\"movie_3\",\"name\":\"È¶ñÈ°µ\",\"path\":\"indexLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = parseInt(MY_URL.split('#')[1]),\\n    RULE = MY_PARAMS.RULE,\\n    fyAll = RULE.url.includes('fyAll'),\\n    // Âä†ËΩΩClassTabÁªÑ‰ª∂\\n    ClassTab = $.require('hiker://page/ClassTab?rule=' + getItem('myCollection')),\\n    tabHeader = []\\n\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title })\\nif (pageNum == 1) {\\n    addListener('onClose', 'clearVar(\\\"myCollection-searchMode\\\")')\\n    putVar('myCollection-searchMode', RULE.title)\\n    tabHeader.load(myCollection_el)\\n    if (RULE.search_url) myCollection_el.push({\\n        title: \\\"ÊêúÁ¥¢\\\",\\n        desc: \\\"Êêú‰Ω†ÊÉ≥Ë¶ÅÁöÑ...\\\",\\n        url: '\\\"hiker://page/singleSearch?keyword=\\\"+input+\\\"&page=fypage\\\"',\\n        extra: { rule: getItem('myCollection'), RULE: RULE },\\n        col_type: \\\"input\\\",\\n    })\\n}\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.find_rule\\nMY_RULE.detail_find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.url, {}, pageNum, (url) => {\\n    url[0] = fyAll ? url[0].replace(/fyAll/g, '$${fyAll}') : url[0].replace(/fy(class|area|year|sort)/g, '$${fy$1}')\\n    url[0] = tabHeader.setUrl(url[0])\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) eval(MY_RULE.preRule)\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: v.title }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"ËØ¶ÊÉÖ\",\"path\":\"detailLoad\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    pageNum = 1\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nlet RULE = MY_PARAMS.RULE\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.detail_col_type\\nMY_RULE.find_rule = RULE.detail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = RULE.pageList\\nMY_RULE.pages = RULE.pages\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = RULE.params\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet fypageFlag = MY_PARAMS.url.indexOf('fypage')\\nif (fypageFlag >= 0) pageNum = parseInt(/^\\\\d+/.exec(MY_URL.slice(fypageFlag)))\\nvar { MY_URL, MY_URL_Options } = urlParse(MY_PARAMS.url, RULE.urlHeaders, pageNum),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ëß£ÊûêÊ≠£Êñá\\nif (MY_PARAMS.pageTitle) setPageTitle(MY_PARAMS.pageTitle)\\neval(MY_RULE.preRule)\\nsetLastChapterRule(MY_RULE.last_chapter_rule)\\nMY_PARAMS = MY_RULE.params\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE)\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^(.*?)(?:==>(.*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (detailFindRule) {\\n                res.extra = { url: url, RULE: Object.assign({}, MY_RULE, { detail_find_rule: detailFindRule }) }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"Â∑•ÂÖ∑ÈõÜ\",\"path\":\"utility\",\"rule\":\"$.exports = {\\n    dataLoad: function(showAll) {\\n        //Ê£ÄÊü•Èó¥ÈöîÔºåÈªòËÆ§‰∏ÄÂ§©\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            time = parseInt(readFile('updateTime')) || 0,\\n            now = new Date().getTime(),\\n            data = []\\n        if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n            // Ëé∑ÂèñËøúÁ®ãÊï∞ÊçÆ\\n            let url = getItem('remoteUrl')\\n            try {\\n                let remoteData = fetch(url)\\n                if (url.startsWith('hiker://page/'))\\n                    remoteData = JSON.parse(remoteData).rule\\n                data = JSON.parse(remoteData)\\n            } catch (e) {}\\n            if(data.length == 0) {\\n                data = JSON.parse(readFile('dataCache') || '[]')\\n                log('Ê≤°ÊúâËé∑ÂèñÂà∞Êõ¥Êñ∞Êï∞ÊçÆ')\\n            } else {\\n                data = data.filter((v) => { return v.title != getItem('myCollection') && !v.author.includes('ËΩªÂêàÈõÜÁîüÊàêÂô®') })\\n                saveFile('dataCache', JSON.stringify(data))\\n                saveFile('updateTime', now.toString())\\n                log('Êõ¥Êñ∞Êï∞ÊçÆÂ∑≤ÂÜôÂÖ•Êú¨Âú∞')\\n            }\\n        } else {\\n            data = JSON.parse(readFile('dataCache') || '[]')\\n        }\\n        // ÂÜôÂÖ•Ëá™ÂÆö‰πâÊï∞ÊçÆ\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if(showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    },\\n    runCode: function(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    },\\n    urlParse: function(url, headers, pageNum, func) {\\n        url = url.split(';').map((v) => v.replace(/ÔºõÔºõ/g, ';'))\\n        if (func) func(url)\\n        url[0] = url[0].replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n        url[0] = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?$/.exec(url[0])\\n        url[0] = runCode(url[0][2] && pageNum == 1 ? url[0][2] : url[0][1])\\n        let options = { headers: headers, method: url[1] }\\n        // postÊñπÊ≥ïÊó∂ËΩ¨Êç¢ÂèÇÊï∞\\n        if (/^post$/i.test(options['method'])) {\\n            let [oriUrl, body] = url[0].split('?')\\n            url[0] = oriUrl.replace(/ÔºüÔºü/g, '?')\\n            if (body.startsWith('JsonBody=')) body = body.slice(9)\\n            options['body'] = body\\n        }\\n        if (url[2]) options.headers['Content-Type'] = 'text/plain;charst=' + url[2]\\n        if (url[3]) url[3].match(/{(.*)}/)[1].split('&&').forEach((v) => {\\n            let [key, value] = v.split('@')\\n            options.headers[key] = runCode(value)\\n        })\\n        // Ê∑ªÂä†ÂÖ®Â±ÄUA\\n        if (!options.headers['User-Agent']) {\\n            if (MY_RULE.ua == 'pc')\\n                options.headers['User-Agent'] = PC_UA\\n            else if (MY_RULE.ua == 'mobile')\\n                options.headers['User-Agent'] = MOBILE_UA\\n        }\\n        return { MY_URL: url[0], MY_URL_Options: options }\\n    }\\n}\\n\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"ÂçïÊêú\",\"path\":\"singleSearch\",\"rule\":\"js:\\nlet myCollection_el = [],\\n    RULE = MY_PARAMS.RULE,\\n    keyword = getParam('keyword'),\\n    pageNum = parseInt(getParam('page'))\\n\\n// Â§ÑÁêÜMY_URLÂíåMY_RULE\\nMY_TYPE = 'search'\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.col_type = RULE.col_type\\nMY_RULE.detail_col_type = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_col_type : RULE.sdetail_col_type\\nMY_RULE.find_rule = RULE.searchFind\\nMY_RULE.detail_find_rule = ['', '*'].includes(RULE.sdetail_find_rule) ? RULE.detail_find_rule : RULE.sdetail_find_rule\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\nMY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\nMY_RULE.params = {}\\n\\nconst { runCode, urlParse } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nvar { MY_URL, MY_URL_Options } = urlParse(RULE.search_url, {}, pageNum, (url) => {\\n    url[0] = url[0].replace(url[0].includes('%%') ? /%%/g : /\\\\*\\\\*/g, encodeStr(keyword, url[2]))\\n}),\\n    indexHtml = fetch(MY_URL, MY_URL_Options)\\nMY_RULE.url = MY_URL\\nMY_RULE.urlHeaders = MY_URL_Options.headers\\n// Ê≠£ÊñáËß£Êûê\\nif (pageNum == 1) setPageTitle('‚Äú' + keyword + '‚ÄùÁöÑÊêúÁ¥¢ÁªìÊûú')\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    function getUrl() {\\n        return MY_URL\\n    }\\n\\n    function getResCode() {\\n        return indexHtml\\n    }\\n\\n    function setResult(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign({}, MY_RULE),\\n                subTitle = v.title\\n            v.title += '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + (v.desc || '').fontcolor('#666666')).small()\\n            v.desc = v.content || ''\\n            if(!v.img && !v.pic_url) v.col_type = 'text_1'\\n            delete v.content\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule'].find((vv) => v.url.startsWith(vv + '://'))) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, params] = v.url.split('#')[0].match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/ÔºüÔºü/g, '?').replace(/ÔºÜÔºÜ/g, '&') : (v.extra || {}).url || 'hiker://empty?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                v.url = v.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n                return v\\n            } else if (!MY_RULE.detail_find_rule || v.url.startsWith('hiker://')) { return v }\\n            v.extra = { url: v.url, RULE: MY__RULE, pageTitle: subTitle }\\n            v.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n            if (v.extra.RULE.url.includes('#immersiveTheme#')) v.url += '&#immersiveTheme#'\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let findRule = MY_RULE.find_rule.split(';')\\n    parseDomForArray(indexHtml, findRule.shift()).forEach((data) => {\\n        let [title, url, desc, content, img] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 4) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 1) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title + '‚Äú‚Äú‚Äù‚Äù<br>' + (RULE.title.fontcolor('#12b668') + ' ‚ñ™ ' + desc.fontcolor('#666666')).small(),\\n                url: url,\\n                desc: content,\\n                img: img\\n            }\\n        if(!res.img) res.col_type = 'text_1'\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                res.url = res.url.replace('.js:', '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE,' + $.stringify({ pages: MY_RULE.pages, pageList: MY_RULE.pageList, find_rule: '', params: '' }) + ');MY_URL=\\\"' + MY_URL + '\\\";')\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = { url: url, RULE: MY_RULE, pageTitle: title }\\n                res.url = 'hiker://page/detailLoad?rule=' + getItem('myCollection')\\n                if (res.extra.RULE.url.includes('#immersiveTheme#')) res.url += '&#immersiveTheme#'\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"ËÆæÁΩÆ\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"myCollection-sortFlag\\\");refreshPage()')\\nsetPageTitle('‚öô ËΩªÂêàÈõÜËÆæÁΩÆ ‚öô')\\nconst { dataLoad } = $.require('hiker://page/utility?rule=' + getItem('myCollection'))\\nlet data = dataLoad(true),\\n    el = [{\\n        title: 'Ê∏ÖÈô§ÁºìÂ≠ò,Á´ãÂç≥Êõ¥Êñ∞ <small> ÔºàÂü∫‰∫éËøúÁ®ã‰ªìÂ∫ì,‰∏çË¶ÅÈ¢ëÁπÅÁÇπÂáªÔºâ',\\n        url: $().lazyRule(() => {\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://Â∑≤Êõ¥Êñ∞'\\n        }),\\n        img: 'hiker://images/icon1',\\n        col_type: 'avatar'\\n    }],\\n    searchThd = readFile('searchThd') || '5',\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    editMode = getVar('myCollection-editMode', 'ÂêØÁî®/Á¶ÅÁî®')\\n\\nel.push({\\n    title: '  üîç ÊêúÁ¥¢Ê®°Âºè: ' + (searchThd == 0 ? 'Âàó' : 'ËÅö' + searchThd) + '  ',\\n    url: $(['ÂàóË°®ÊêúÁ¥¢', 'ËÅöÂêàÊêúÁ¥¢'], 1).select((searchThd) => {\\n        if (input == 'ÂàóË°®ÊêúÁ¥¢') {\\n            saveFile('searchThd', '0')\\n            refreshPage()\\n        } else {\\n            if (searchThd == 0) searchThd = 5\\n            return $(searchThd, 'ËæìÂÖ•ÊêúÁ¥¢Á∫øÁ®ãÔºåÊúÄÂ•Ω‰∏çË¶ÅË∂ÖËøá16').input(() => {\\n                saveFile('searchThd', input)\\n                refreshPage()\\n            })\\n        }\\n    }, searchThd),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üí° Êõ¥Êñ∞È¢ëÁéá: ' + (updateInterval < 1 ? 'ÊâãÂä®' : updateInterval + 'Â§©') + '  ',\\n    url: $(updateInterval, 'ËæìÂÖ•Êõ¥Êñ∞Èó¥ÈöîÔºàÂ§©ÔºâÔºå‰∏∫0ÂàôÊâãÂä®Êõ¥Êñ∞').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  üñ• Áã¨Á´ãÈ¶ñÈ°µ: ' + (newWindow ? 'ÊòØ' : 'Âê¶') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '‚Äú‚Äú‚Äù‚Äù<font color=\\\"#666666\\\"><small>ÁâπÂà´È∏£Ë∞¢ÔºåÂ∞èÁ®ãÂ∫èÊèê‰æõËÄÖÔºö\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('„ÄÅ'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, { col_type: 'big_blank_block' });\\n['ÂêØÁî®/Á¶ÅÁî®', 'ÈáçÊñ∞ÊéíÂ∫è', 'Êõ¥ÊîπÂõæÊ†á', 'ÂØºÂÖ•Êµ∑Èòî'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '‚Äú‚Äú‚Äù‚Äù' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putVar('myCollection-editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nel.push({\\n    title: 'ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ',\\n    url: $('Á°ÆÂÆöË¶ÅÊÅ¢Â§çÂá∫ÂéÇÔºåÊ∏ÖÊ•öËá™ÂÆö‰πâÊï∞ÊçÆÂêóÔºü').confirm(() => {\\n        deleteFile('customData')\\n        refreshPage(false)\\n        return 'toast://Â∑≤ÊÅ¢Â§çÂá∫ÂéÇÊï∞ÊçÆ'\\n    }),\\n    col_type: 'scroll_button'\\n})\\n\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case 'ÂêØÁî®/Á¶ÅÁî®':\\n            d.title = (v.visible ? 'üü¢  ' : 'üî¥  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                rules[index].visible = !rules[index].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÈáçÊñ∞ÊéíÂ∫è':\\n            let sortFlag = parseInt(getVar('myCollection-sortFlag', '-1'))\\n            d.title = (sortFlag == i ? 'üîÉ  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putVar('myCollection-sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://ÈÄâÊã©Ë¶ÅÁßªÂä®Âà∞ÁöÑ‰ΩçÁΩÆ'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putVar('myCollection-sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case 'Êõ¥ÊîπÂõæÊ†á':\\n            d.url = $(v.icon || '', 'ËæìÂÖ•Êñ∞ÂõæÊ†áÂú∞ÂùÄÊàñÈ¢úËâ≤‰ª£Á†ÅÔºö').input((rule) => {\\n                let rules = JSON.parse(readFile('customData') || '[]'),\\n                    index = rules.findIndex((v) => v.title == rule.title)\\n                if (input)\\n                    rules[index].icon = input\\n                else\\n                    delete rules[index].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, v)\\n            break\\n        case 'ÂØºÂÖ•Êµ∑Èòî':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"}]",
    "icon": "https://lanmeiguojiang.com/tubiao/q/13.png"
  }
]
