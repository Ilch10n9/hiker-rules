[{"last_chapter_rule":"","title":"云盘汇影","author":"MrFly","version":6,"type":"all","url":"hiker://empty$$$fypage","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(fetch('hiker://files/rules/icy/ali.js'));\nali.homePage();","searchFind":"js:\neval(fetch('hiker://files/rules/icy/ali.js'));\nali.searchPage(true);\n","search_url":"hiker://empty$$$**$$$fypage$$$","group":"①网盘","detail_col_type":"movie_1","detail_find_rule":"js:\neval(fetch('hiker://files/rules/icy/ali.js'));\nali.detailPage();","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"var alijs = fetch('https://gitee.com/fly1397/hiker-icy/raw/master/ali.js');\nif(!alijs || !alijs.includes('ali')){\n\talijs = fetch('https://cdn.jsdelivr.net/gh/fly1397/hiker-icy/ali.js')\n}\nif(!alijs || !alijs.includes('ali')){\n\talijs = fetch('http://lficy.com:30000/mrfly/hiker-icy/raw/master/ali.js')\n}\nif(alijs) {\n\twriteFile(\"hiker://files/rules/icy/ali.js\",alijs);\n\teval(alijs);\n\tali.preRule();\n}\n","pages":"[{\"col_type\":\"movie_3\",\"name\":\"网盘详情\",\"path\":\"detail\",\"rule\":\"js:\\neval(fetch('hiker://files/rules/icy/ali.js'));\\nali.initConfig();\\nali.aliRule();\"},{\"col_type\":\"movie_1_left_pic\",\"name\":\"资源网页详情\",\"path\":\"site-detail\",\"rule\":\"js:\\neval(fetch('hiker://files/rules/icy/ali.js'));\\nali.detailPage();\"},{\"col_type\":\"movie_3\",\"name\":\"个人网盘详情\",\"path\":\"drive\",\"rule\":\"js:\\neval(fetch('hiker://files/rules/icy/ali.js'));\\nali.initConfig();\\nali.myAliRule();\"}]","icon":"https://gitee.com/fly1397/hiker-icy/raw/master/aliyun.png"},{"last_chapter_rule":"","title":"聚漫🔮","author":"小棉袄🌞&永远の明日&团子&Hi&梦海&菜鸡&dy2020","version":220422101,"type":"all","url":"hiker://empty","col_type":"icon_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nrequire('http://hiker.nokia.press/hikerule/rulelist.json?id=4091');\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', 'find:'),\n    types = { 'all': '全部', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '另类', 'news': '无搜索', 'tool': '可下载', 'other': '抽风' }\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n\nel.push(顺搜(el))\n\nel.push(\n    {\n        img: 'https://lanmeiguojiang.com/tubiao/ke/1.png',\n        title: '收藏',\n        url:\"hiker://collection\",\n        col_type:\"icon_2\"\n    }, {\n        img: 'https://lanmeiguojiang.com/tubiao/ke/137.png',\n        title: '历史',\n        url:\"hiker://history\",\n        col_type:\"icon_2\"\n    }, {\n        img: 'https://lanmeiguojiang.com/tubiao/messy/10.svg',\n        title: '本地资源',\n        url:\"hiker://page/Main.view?rule=本地资源管理\",\n        col_type:\"avatar\"\n    })\n\nel.push(typeShow.startsWith('find:') ? {\n    title: '““””' + ('🔍全部' + (typeShow[5] ? '[' + typeShow.slice(5) + ']' : '')).bold().fontcolor('#12b668'),\n    url: $(typeShow.slice(5), '查找小程序关键词').input(() => {\n        putMyVar('typeShow', 'find:' + input)\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n} : {\n    title: '🔍全部',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('typeShow', 'find:')\n        refreshPage(false)\n        return 'toast://再次点击【全部】可查找小程序'\n    }),\n    col_type: 'scroll_button'\n})\nfor (let k in types)\n    if (rules.find((v) => v.type == k))\n        el.push({\n            title: '““””' + (k == typeShow ? types[k].bold().fontcolor('#12b668') : types[k]),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\nif (getItem(\"read_policy\") !== \"1\") {\n    el.push({\n        title: '““””<small><font color=#871f78>以下数据来源于网络，如您喜欢，请支持官方</font></small>',\n        desc: '““””<small><font color=#f20c00>本规则仅限免费学习交流使用，请于导入后24小时内删除，任何组织或个人不得以任何方式方法传播或售卖此规则的整体或部分！</font></small>',\n        url: $('#noHistory#').lazyRule(() => {\n            setItem(\"read_policy\", \"1\")\n            refreshPage(false)\n            return \"toast://你已同意该协议\"\n        }),\n        col_type: 'text_center_1'\n    })\n}\n\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow.startsWith('find:')) {\n    let filterKey = typeShow.slice(5)\n    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n} else rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/^(https?:\\/\\/.+?)(?:#|\\?|\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', 'find:')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow.startsWith('find:')) {\n                let filterKey = typeShow.slice(5)\n                if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n            } else rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', 'https://tuanzideku.coding.net/p/jm/d/JM/git/raw/master/JM?download=false')\n// \n/*\n*/","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteCache(url)\\n            back(false)\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (MY_PAGE == 1) {\\n    let loaded = getMyVar(thisRULE.title + \\\"@pre\\\", \\\"no\\\")\\n    if (\\\"yes\\\" != loaded) {\\n        eval(thisRULE.preRule)\\n        putMyVar(thisRULE.title + \\\"@pre\\\", \\\"yes\\\")\\n    }\\n}\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title, url) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { title:title, url: url, pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, MY_RULE.title, MY_RULE.url)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            if(!v.extra) v.extra = {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra })\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'confirm', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || v.extra.rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = Object.assign({}, v.extra, {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            })\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"CSS选择器模版\",\"path\":\"ejwb.js\",\"rule\":\"function 一级(列表, 标题, 图片, 集数, 链接, 访问头) {\\n    访问头 = !访问头 ? '' : 访问头\\n    var d = [];\\n    var code = getCode()\\n    pdfa(code, 列表).forEach(function(data) {\\n        d.push({\\n            title: pdfh(data, 标题),\\n            desc: pdfh(data, 集数),\\n            pic_url: pd(data, 图片) + \\\"@Referer=\\\" + 访问头,\\n            url: 'hiker://empty#immersiveTheme#',\\n            col_type: \\\"movie_3\\\",\\nextra: {\\n            name: pdfh(data, 标题),\\n            url: pd(data, 链接),\\n            qz: MY_HOME\\n        }\\n        });\\n    });\\n    setResult(d);\\n}\\n\\n\\n\\nfunction 搜索(列表, 标题, 链接, 描述, 详情, 图片, 访问头) {\\n    var d = [];\\n    访问头 = !访问头 ? '' : 访问头\\n    pdfa(getResCode(), 列表).forEach(function(data) {\\n        d.push({\\n            title: pdfh(data, 标题),\\n            desc: pdfh(data, 描述),\\n            pic_url: pd(data, 图片) + \\\"@Referer=\\\" + 访问头,\\n            url: 'hiker://empty#immersiveTheme#',\\n            content: pdfh(data, 详情),\\n\\nextra: {\\n            name: pdfh(data, 标题),\\n            url: pd(data, 链接),\\n            qz: MY_HOME\\n        }\\n        });\\n    });\\n    setResult(d);\\n}\\n\\n\\n\\n\\nfunction 最新(选择器, UA) {\\n    if (UA == \\\"PC\\\") {\\n        var code = fetch(getParam('url').replace(\\\"m.\\\", \\\"www.\\\"));\\n    } else {\\n        var code = request(getParam('url').replace(\\\"www.\\\", \\\"m.\\\"));\\n    }\\n    setResult(pdfh(code, 选择器))\\n}\\n\\n\\n\\neval(JSON.parse(request(\\\"hiker://page/qs?rule=聚漫🔮\\\")).rule)\\n\\nfunction 二级(头部列表, 标题, 图片, 描述, 访问头, 作者, 时间, 分类, 简介, 多路线否, 路线列表, 路线名, 选集总列表, 选集列表, 集名, 集url, 漫画解析,当前URL,当前页名,前缀,UA,防重载否) {\\n    var d = [];\\n\\n//头部列表  则默认使用 code 来作为头部列表数据\\n//多路线否  true 则使用多路线；false 则使用章路线\\n//UA  不填则使用手机端  'PC'则手机端\\n\\nif (当前页名) {\\n    setPageTitle(当前页名)\\n}\\n\\nif(防重载否){\\n//网页内容+防止重拉\\n    var code = 添加防止网页(当前URL, UA)\\n}else{\\n    var code = getCode()\\n}\\n    \\n\\n    //头部列表数据\\n    var 头部 = !头部列表 ? code : pdfa(code, 头部列表)[0];\\n    标题 = pdfh(头部, 标题)\\n    图片 = pdfh(头部, 图片)\\n    if (图片) {\\n        图片 = 图片.includes('http') ? 图片 : 前缀 + 图片\\n        if (!访问头) {} else if (访问头.substr(0, 1) == '@') {\\n            图片 = 图片 + 访问头\\n        } else {\\n            图片 = 图片 + \\\"@Referer=\\\" + 访问头\\n        }\\n    }\\n    \\n描述 = 描述.includes('$') ? 描述.split('$')[1] + pdfh(头部, 描述.split('$')[0]) : pdfh(头部, 描述)\\n\\n作者 = 作者.includes('$') ? 作者.split('$')[1] + pdfh(头部, 作者.split('$')[0]) : pdfh(头部, 作者)\\n    \\n时间 = 时间.includes('$') ? 时间.split('$')[1] + pdfh(头部, 时间.split('$')[0]) : pdfh(头部, 时间)\\n\\n分类 = 分类.includes('$') ? 分类.split('$')[1] + pdfh(头部, 分类.split('$')[0]) : pdfh(头部, 分类)\\n\\n    \\n    //头部列表\\n    添加头部列表(d, 标题, 图片, 描述, 作者, 时间, 分类,当前URL)\\n    \\n    //路线名与选集数据\\n    var 章节json = 优化路线章节数据(多路线否, code, 路线列表,路线名,选集总列表,选集列表,集名,集url,前缀,当前页名,图片)\\n\\n    //简介\\n    添加简介(d, pdfh(code, 简介), 当前URL, '')\\n\\n   //当没有章节内容，就不显示\\n    if (章节json.length > 0) {\\n\\n        //路线选择\\n        var 选择列表 = 添加选择路线(d, 章节json, 当前URL, 多路线否)\\n\\n        //选择下载\\n        添加选择下载(d, 章节json,多路线否)\\n\\n        //排序与选集\\n        var lazy = `@lazyRule=.js:` + 漫画解析;\\n        添加列表章节(d, 章节json[选择列表].title, 章节json[选择列表].list, lazy, 当前URL, '')\\n\\n        d.push({\\n            col_type: \\\"long_text\\\"\\n        });\\n    }\\n    setResult(d)\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"模板一\",\"path\":\"comicFunctionFile.js\",\"rule\":\"function cover(coverTitle, coverTitle1, coverTitle2, coverTitle3, coverDesc, coverPic, coverUrl, hasLine) {\\n    try {\\n        const Color = \\\"#19B89D\\\";\\n    \\tvar des_desc = pdfh(html, coverDesc).replace('简　　介：','').replace('漫画简介：','');\\n        d.push({\\n            title: '‘‘’’<><font color=\\\"#FA7298\\\">' + pdfh(html, coverTitle) + '\\\\n' + '‘‘’’<><font color=\\\"#734338\\\">' +  pdfh(html, coverTitle1)+ '\\\\n',\\n            desc: '‘‘’’<><font color=\\\"#954A45\\\">' + pdfh(html, coverTitle2) + '\\\\n' + '‘‘’’<><font color=\\\"#954A45\\\">' + pdfh(html, coverTitle3),\\n            pic_url: pd(html, coverPic),\\n            url: coverUrl,\\n            col_type: 'movie_1_vertical_pic_blur'\\n        });\\n        d.push({     \\n    col_type: 'line'\\n    });\\n    //var jj = getVar(\\\"jjs\\\", \\\"收起\\\");\\n//var jjurl = 'hiker://empty@lazyRule=.js:getVar(\\\"jjs\\\") == \\\"收起\\\"?putVar(\\\"jjs\\\",\\\"展开\\\"):putVar(\\\"jjs\\\",\\\"收起\\\");\\\"hiker://empty\\\"';\\nd.push({\\n  title: '简介 <small><small><span style=\\\"color:#19B89D\\\">展开></span></small></small>',\\n  img: \\\"https://lanmeiguojiang.com/tubiao/more/197.png\\\",\\n  url: $(\\\"#noLoading#\\\").lazyRule((jjid,decid,des_desc) => {\\n\\t  if(getVar(\\\"jjs\\\",\\\"收起\\\") == \\\"收起\\\"){\\n\\t    putVar(\\\"jjs\\\",\\\"展开\\\");\\n\\n\\t\\t updateItem({\\n\\t      extra: { id: jjid },\\n\\t      title: '简介 <small><small><span style=\\\"color:#19B89D\\\">收起></span></small></small>'\\n\\t\\t  })\\n\\n\\t\\tupdateItem({\\n\\t      extra: { textSize: 14,lineSpacing: 3,id: decid },\\n\\t      title: '<span style=\\\"color:#808080\\\">' + des_desc + '...</span>'\\n\\t\\t  })\\n\\t\\t  return \\\"hiker://empty\\\"\\t\\t\\n\\t  }else{\\n\\t    putVar(\\\"jjs\\\",\\\"收起\\\");\\n\\n\\t\\tupdateItem({\\n\\t      extra: { id: jjid },\\n\\t      title: '简介 <small><small><span style=\\\"color:#19B89D\\\">展开></span></small></small>'\\n\\t\\t  })\\n\\n\\t\\tupdateItem({\\n\\t      extra: { textSize: 14,lineSpacing: 3,id: decid },\\n\\t      title: '<span style=\\\"color:#808080\\\">' + des_desc.substr(0, 30) + '...</span>'\\n\\t\\t  })\\n\\t\\t  return \\\"hiker://empty\\\"\\t\\n\\t  }\\n\\t\\n\\t}, MY_RULE + \\\"_jjid\\\",MY_RULE + \\\"_decid\\\",des_desc),\\n\\t  col_type: \\\"avatar\\\",\\n  extra: {id: MY_RULE + \\\"_jjid\\\"}\\n});\\n\\nd.push({\\n  title: '<span style=\\\"color:#808080\\\">' + des_desc.substr(0, 30) + '...</span>',\\n  col_type: \\\"rich_text\\\",\\n  extra: {textSize: 14,lineSpacing: 3,id: MY_RULE + \\\"_decid\\\"}\\n});\\n        d.push({     \\n    col_type: 'line'\\n    })\\n        d.push({     \\n    col_type: 'line'\\n    })\\n    } catch (e) {}\\n}\\nfunction chapter(chapterList, chapterTitle, chapterUrl, defaultOrder, hasLine) {\\n    var list = chapterList;\\n    var original = [{\\n        url: MY_URL,\\n        order: defaultOrder\\n    }];\\n    !fileExist('hiker://files/rules/comic/comicLogFile.js') ? (writeFile('hiker://files/rules/comic/comicLogFile.js', JSON.stringify(original))) : 0;\\n    var log = JSON.parse(fetch('hiker://files/rules/comic/comicLogFile.js'));\\n    for (var i in log) {\\n        if (log[i].url == MY_URL) {\\n            var now = i;\\n            var order = log[i].order;\\n            break;\\n        } else {\\n            var now = '';\\n            var order = defaultOrder;\\n        }\\n    }\\n    let orderItem = {\\n        title: \\\"““””\\\" + '<font color=\\\"#f37335\\\">' + '章节排序⇅' + '</font>',\\n        url: MY_URL + `@lazyRule=.js:var log = JSON.parse(fetch('hiker://files/rules/comic/comicLogFile.js'));var now='` + now + `';if(now!=''){var now=parseInt(now);var order=log[now].order}else{var now=parseInt(log.length);var order=` + defaultOrder + `;log.push({url:input,order:order});}if(log[now].order){log[now].order=0;}else{log[now].order=1;};writeFile('hiker://files/rules/comic/comicLogFile.js', JSON.stringify(log));refreshPage();'hiker://empty'`,\\n        col_type: 'text_center_1'\\n    }\\n    if (hasLine) {\\n          orderItem.title = \\\"““””\\\" + '<font color=\\\"#f37335\\\">' + '集数排序⇅' + '</font>';\\n        orderItem.col_type = \\\"scroll_button\\\"\\n    }   \\n    d.push(orderItem);\\n    d.push({     \\n    col_type: 'line'\\n    });\\n    \\n    var list = order ? list : list.reverse();\\n    for (var i = list.length-1 ; i >= 0; i--) {\\n        try {\\n            d.push({\\n                title: pdfh(list[i], chapterTitle),\\n                url: pd(list[i], chapterUrl) + lazy,\\n                col_type: pdfh(list[0], chapterTitle).length > 4? 'text_2' : 'text_3',\\n            });\\n        }catch (e) {}\\n    }\\n}\\n\\nfunction line(lineList, lineTitleRule, varKey) {\\n    let list = lineList\\n    varKey = varKey == null ? (MY_RULE.url + '#line-index'):  varKey;\\n    addListener('onClose', $.toString((keyList) => {\\n        for (let i in keyList) {\\n            clearVar(keyList[i])\\n        }\\n\\n    }, [varKey, MY_RULE.title + '#line-title']))\\n    let line0Title = ''\\n    try {\\n        line0Title = pdfh(list[0], lineTitleRule);\\n    } catch (e) {}\\n    log(MY_RULE.title + getVar((MY_RULE.title + '#line-title')))\\n    for (let i in list) {\\n        try {\\n            let lineTitle = pdfh(list[i], lineTitleRule);\\n            d.push({\\n                title: getVar((MY_RULE.title + '#line-title'), line0Title) === lineTitle ? \\\"切换:‘‘\\\" + lineTitle+\\\"\\\":lineTitle+\\\"‘‘:切换\\\",\\n                url: $().lazyRule((varKey, lineIndex, lineTitle) => {\\n                    putVar(varKey, lineIndex.toString())\\n                    // log(MY_RULE.url)\\n                    putVar((MY_RULE.title + '#line-title'), lineTitle)\\n                    log(MY_RULE.title + getVar((MY_RULE.title + '#line-title')))\\n                    refreshPage()\\n                    return \\\"toast://已切换至\\\" + lineTitle\\n                }, varKey, i, lineTitle),\\n                col_type: 'scroll_button'\\n            });\\n        } catch (e) {}\\n    }\\n}\\n\\n                \"},{\"col_type\":\"movie_3\",\"name\":\"一级工具\",\"path\":\"yjtool\",\"rule\":\"function convert1(str) {\\n    let c = str.split(\\\";\\\")\\n    return {\\n        列表: c[0],\\n        标题: c[1],\\n        图片: c[2],\\n        描述: c[3],\\n        链接: c[4]\\n    }\\n}\\n\\nfunction merge(source, target) {\\n    let keys = Object.keys(source)\\n    for (let i in keys) {\\n        target[keys[i]] = source[keys[i]]\\n    }\\n}\\n\\nfunction 一级(obj) {\\n    var d = [];\\n    if ($.type(obj) == \\\"string\\\") {\\n        obj = convert1(obj)\\n    }\\n    if (obj.规则) {\\n        let c = convert1(obj.规则)\\n        merge(c, obj)\\n    }\\n    let arr = pdfa(getResCode(), obj.列表);\\n       if (obj.列表处理 != null) {\\n            arr = obj.链接处理(arr)\\n        }\\n    for (let it of arr) {\\n        let url = pd(it, obj.链接)\\n        if (obj.链接处理 != null) {\\n            url = obj.链接处理(url)\\n        }\\n        let pic = pd(it, obj.图片)\\n        if (obj.图片处理 != null) {\\n            pic = obj.图片处理(pic)\\n        }\\n        d.push({\\n            title: pdfh(it, obj.标题),\\n            url: url,\\n            col_type: \\\"\\\",\\n            desc: obj.描述 ? pdfh(it, obj.描述) : \\\"\\\",\\n            pic_url: pic\\n        });\\n\\n    }\\n    setResult(d);\\n}\\nvar tool = {\\n    一级: 一级\\n}\\n$.exports = tool\"},{\"col_type\":\"movie_3\",\"name\":\"函数组件\",\"path\":\"qs\",\"rule\":\"function 优化路线章节数据(多路线否, 源数据, 路线列表, 路线名, 选集总列表, 选集列表, 集名, 集url, 前缀, 标题, 图片) {\\n\\n    //当多路线否 选集总列表为空\\n    //最终返回 [{title: '路线名',list: [{title:'选集名',url:'选集url',...}],sjss:'下载资料'},....]\\n    //选集列表 第一项是css选择器，之后可以用$分割添加要删除章节名\\n\\n\\n    var 章节json = [];\\n    var 单路线章节 = '章节列表'\\n\\n    var 列表名 = [];\\n    if (!多路线否) {\\n\\n        列表名.push(单路线章节)\\n\\n    } else {\\n\\n        pdfa(源数据, 路线列表).forEach(function(data) {\\n            列表名.push(pdfh(data, 路线名))\\n        });\\n\\n    }\\n\\n    var 集数组 = [];\\n\\n\\nvar 排除章节 = [];\\nif(选集列表.includes('$')){\\n排除章节 = 选集列表.split('$')\\n选集列表 = 排除章节.shift()\\n}\\n\\n    if (!多路线否) {\\n        集数组.push(pdfa(源数据, 选集列表))\\n    } else {\\n        pdfa(源数据, 选集总列表).forEach(function(data) {\\n            集数组.push(pdfa(data, 选集列表))\\n        });\\n    }\\n\\n\\n    for (let i in 集数组) {\\n\\n        var doList = [];\\n\\n排除章节.forEach(function(data) {\\n    var 标识id = 集数组[i].findIndex(返回 => 返回.indexOf(data) != -1);\\n    if (标识id != -1) {\\n      集数组[i].splice(标识id, 1)\\n    };\\n  });\\n\\n        for (let it of 集数组[i]) {\\n            var doListurl = pdfh(it, 集url)\\n            doListurl = doListurl.includes(\\\"http\\\") ? doListurl : 前缀 + doListurl\\n            doList.push({\\n                title: pdfh(it, 集名),\\n                url: doListurl\\n            })\\n        }\\n\\n        var bookName = !多路线否 ? 标题 : 标题 + '-' + 列表名[i]\\n\\n        章节json.push({\\n            title: 列表名[i],\\n            list: doList,\\n            sjss: {\\n                chapterList: doList,\\n                info: {\\n                    bookName: bookName, //漫画名称,\\n                    ruleName: MY_RULE.title,\\n                    bookTopPic: 图片,\\n                    parseCode: 漫画解析,\\n                },\\n                defaultView: \\\"1\\\"\\n            }\\n        })\\n    }\\n    return 章节json\\n}\\n\\n\\nfunction 添加头部列表(d, 标题, 图片, 描述, 作者, 时间, 分类,页URL) {\\n\\n    标题 = !标题 ? '' : 标题 + '\\\\n'\\n    图片 = !图片 ? '' : 图片\\n    描述 = !描述 ? '' : 描述.replace(\\\"更新至：\\\", '')\\n\\n    作者 = !作者 ? '' : '\\\\n' + 作者\\n    时间 = !时间 ? '' : '\\\\n' + 时间\\n    分类 = !分类 ? '' : '\\\\n' + 分类\\n\\n\\n    var 头部title = ['‘‘’’<b>','</b> <small><font color=#FA7298>','</font>','</small>']\\n    var 头部desc = ['‘‘’’<font color=#f8ecc9>','</font>']\\n\\n\\n\\n    头部title = 头部title[0]+标题+头部title[1]+描述+头部title[2]+作者+头部title[3]\\n\\n    头部desc = 头部desc[0]+时间+分类+头部desc[1]\\n\\n    d.push({\\n        title: 头部title,\\n        desc: 头部desc,\\n        pic_url: 图片,\\n        url: 页URL + \\\"#noHistory#\\\",\\n        col_type: 'movie_1_vertical_pic_blur'\\n    });\\n\\n}\\n\\n\\nfunction 添加简介(d, 数据源, 页URL, 图片) {\\n    //获取数据\\n    var 简介内容 = 数据源\\n    简介内容 = 简介内容.replace(\\\"简介：\\\", \\\"\\\").replace(\\\"介绍:\\\", \\\"\\\").replace(\\\"漫画\\\", \\\"\\\").replace(\\\"……\\\", \\\"\\\").replace(\\\"简介\\\", \\\"\\\")\\n\\n    var 简介内容收;\\n    if (简介内容.length > 45) {\\n        简介内容收 = 简介内容.substr(0, 45) + '...'\\n    } else {\\n        简介内容收 = 简介内容 + '...'\\n    }\\n\\n    //图标获取\\n    if (!图片) {\\n        图片 = 'https://lanmeiguojiang.com/tubiao/q/107.png'\\n    }\\n\\n    //页URL 获取\\n    if (!页URL) {\\n        页URL = MY_RULE.title\\n    }\\n\\n    //标题与简介样式\\n    var mztext = \\\"&nbsp;&nbsp;&nbsp;&nbsp;<small>简介</small><br>\\\"\\n    var bttitle = '<font color=\\\"#098AC1\\\">漫画简介  </font><small><small><font color=\\\"#f47983\\\">简介收></font></small></small>'\\n\\n    //展开与收缩操作\\n    var jj = getVar(页URL + \\\"简介收\\\", \\\"已收起\\\");\\n    var jjurl = $(\\\"#noLoading#\\\").lazyRule((简介内容, 简介内容收, 收, 收内容, 当前URL) => {\\n        var jsbl = 当前URL + \\\"简介收\\\";\\n        var jj = getVar(当前URL + \\\"简介收\\\", \\\"已收起\\\");\\n        jj = jj == \\\"已收起\\\" ? \\\"展开\\\" : \\\"已收起\\\";\\n        putVar(jsbl, jj)\\n        updateItem({\\n            extra: {\\n                id: 当前URL + \\\"_bt\\\"\\n            },\\n            title: 收.replace(\\\"简介收\\\", jj)\\n        })\\n\\n        updateItem({\\n            extra: {\\n                id: 当前URL + \\\"_mz\\\"\\n            },\\n            title: jj == \\\"已收起\\\" ? 收内容.replace(\\\"简介\\\", 简介内容收) : 收内容.replace(\\\"简介\\\", 简介内容)\\n        })\\n        return \\\"hiker://empty\\\"\\n    }, 简介内容, 简介内容收, bttitle, mztext, 页URL)\\n\\n\\n    //标题\\n    d.push({\\n        title: bttitle.replace(\\\"简介收\\\", jj),\\n        url: jjurl,\\n        col_type: \\\"avatar\\\",\\n        pic_url: 图片,\\n        extra: {\\n            id: 页URL + \\\"_bt\\\"\\n        }\\n    });\\n\\n    //简介\\n    d.push({\\n        title: jj == \\\"已收起\\\" ? mztext.replace(\\\"简介\\\", 简介内容收) : mztext.replace(\\\"简介\\\", 简介内容),\\n        col_type: \\\"rich_text\\\",\\n        extra: {\\n            id: 页URL + \\\"_mz\\\"\\n        }\\n    });\\n\\n}\\n\\nfunction 添加列表章节(d, 标题数据, 列表数据, 解析代码, 页URL, 图片) {\\n\\n\\n    //d与外界d，为同内存地址，不用返回\\n    //标题数据  即标题名字\\n    //列表数据必须是JSON  格式是[{title:'',url:'',},.....]  且url必须有前缀\\n\\n    //图标获取\\n    if (!图片) {\\n        图片 = 'https://lanmeiguojiang.com/tubiao/q/18.png'\\n    }\\n\\n    //页URL 获取\\n    if (!页URL) {\\n        页URL = MY_RULE.title\\n    }\\n\\n    //标题名\\n    var 标题名 = '<b>路线</b>  <small><small><font color=#f9906f>排序 ></font></small></small>'\\n\\n\\n    var 排序 = getVar(页URL + \\\"章节排序\\\", \\\"正序\\\");\\n    var 提示 = 排序 == '倒序' ? '正序' : '倒序';\\n\\n    var 排序url = $(\\\"#noLoading#\\\").lazyRule((标题名, 标题数据, 列表数据, 解析代码, 页URL) => {\\n        var 排序 = getVar(页URL + \\\"章节排序\\\", \\\"正序\\\");\\n        var 提示 = 排序 == '倒序' ? '正序' : '倒序';\\n        updateItem({\\n            extra: {\\n                id: 页URL + \\\"_排序\\\"\\n            },\\n            title: 标题名.replace('路线', 标题数据).replace('排序', 提示)\\n        })\\n\\n\\n        if (提示 == '倒序') {\\n            列表数据.reverse()\\n        }\\n        列表数据.forEach(function(data, ssid) {\\n            updateItem({\\n                title: data.title,\\n                url: data.url + 解析代码,\\n                extra: {\\n                    id: 页URL + \\\"_选集\\\" + ssid\\n                }\\n            });\\n        });\\n\\n\\n        putVar(页URL + \\\"章节排序\\\", 提示)\\n        return \\\"hiker://empty\\\"\\n    }, 标题名, 标题数据, 列表数据, 解析代码, 页URL)\\n\\n    d.push({\\n        title: 标题名.replace('路线', 标题数据).replace('排序', 排序),\\n        pic_url: 图片,\\n        url: 排序url,\\n        col_type: \\\"avatar\\\",\\n        extra: {\\n            id: 页URL + \\\"_排序\\\"\\n        }\\n    });\\n\\n    if (排序 == '倒序') {\\n        列表数据.reverse()\\n    }\\n\\n    列表数据.forEach(function(data, id) {\\n        d.push({\\n            title: data.title,\\n            url: data.url + 解析代码,\\n            col_type: \\\"text_2\\\",\\n            extra: {\\n                id: 页URL + \\\"_选集\\\" + id\\n            }\\n        });\\n    });\\n\\n}\\n\\n\\nfunction 添加防止网页(项url, UA) {\\n\\n    //上级跳转到当前页的链接必须是hiker://empty；不然一刷新还是会重复加载\\n    //UA ''或false或'手机' 默认是手机端 ; 电脑 'PC'\\n\\n    var 刷新重复 = MY_RULE.title + \\\"网页源码\\\"\\n    var pc链接 = 项url.replace(\\\"m.\\\", \\\"www.\\\")\\n    var 手机链接 = 项url.replace(\\\"www.\\\", \\\"m.\\\")\\n\\n    var code;\\n    if (getVar(刷新重复, \\\"false\\\") == \\\"false\\\") {\\n\\n        code = UA == 'PC' ? fetch(pc链接) : request(手机链接);\\n        putVar(刷新重复, getParam('url') + \\\"￥&￥\\\" + code)\\n\\n    } else {\\n\\n        var pm = getVar(刷新重复).split(\\\"￥&￥\\\")\\n        if (pm[0] == getParam('url')) {\\n            code = pm[1]\\n        } else {\\n            code = UA == 'PC' ? fetch(pc链接) : request(手机链接);\\n            putVar(刷新重复, getParam('url') + \\\"￥&￥\\\" + code)\\n        }\\n    }\\n    return code\\n}\\n\\n\\nfunction 添加选择路线(d, 路线数据, 页URL, 多路线否) {\\n\\n    //路线数据 格式[{title:'路线名'},....]\\n    //多路线否  false 则不启用选择路线；true 则启用\\n\\n    var 选择列表 = getItem(页URL + \\\"选择列表\\\", \\\"0\\\")\\n\\n    if (多路线否) {\\n\\n        var 路线选中 = '‘‘’’<font color=#098AC1>选中</font>'\\n\\n\\n        d.push({\\n            title: '‘‘’’📖<font color=\\\"#FA7298\\\"> 图源列表</font> ：',\\n            url: \\\"toast://点我干啥呢\\\",\\n            col_type: 'flex_button'\\n        });\\n\\n\\n        路线数据.forEach(function(data, id) {\\n\\n            var jjurl = $(\\\"#noLoading#\\\").lazyRule((页URL,id) => {\\n                setItem(页URL + '选择列表',id+'');\\n                refreshPage(false);\\n                return \\\"hiker://empty\\\";\\n            },页URL,id);\\n\\n            var 标题名 = id == 选择列表 ? 路线选中.replace('选中', data.title) : data.title;\\n            d.push({\\n                title: 标题名,\\n                url: jjurl,\\n                col_type: 'flex_button',\\n                extra: {\\n                    id: 页URL + \\\"_路线\\\" + id\\n                }\\n            });\\n        });\\n\\n    }\\n    return 选择列表\\n}\\n\\n\\nfunction 添加选择下载(d, 路线数据, 多路线否) {\\n\\n    //路线数据 格式[{title:'路线名',sjss:'下载资料信息'},....]\\n    //多路线否  false 则只有①个下载 标题为 点击下载；true 则多个下载\\n\\nif(多路线否){\\n\\nd.push({\\n        title: '‘‘’’📥<font color=\\\"#f47983\\\"> 下载</font> ：',\\n        url: \\\"toast://点我干啥呢\\\",\\n        col_type: 'scroll_button'\\n    });\\n\\n}\\n\\n    路线数据.forEach(function(data, id) {\\n\\n        d.push({\\n            title: data.title.includes('章节列表') ? '点击下载' : data.title,\\n            url: 'hiker://page/download.view#noRecordHistory##noRefresh##noHistory#?rule=本地资源管理',\\n            col_type: 'scroll_button',\\n            extra: data.sjss\\n        });\\n    });\\n\\n    if (多路线否) {\\n        d.push({\\n            col_type: \\\"line_blank\\\"\\n        });\\n    }\\n\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"模板三\",\"path\":\"ejtool\",\"rule\":\"function cover(标题, 作者, 分类, 状态, 章节, 更新, 简介,封面图片,true_url, hasLine) {\\r\\nvar 标题, 作者, 分类, 状态, 章节, 更新, 简介,封面图片,true_url, hasLine;\\r\\n\\ttry {\\r\\n\\t\\td.push({\\r\\n\\t\\t\\ttitle: '‘‘’’<small><font color=\\\"#FA7298\\\">'+作者.slice(0,15)+\\\"&nbsp;\\\"+状态+'</font></small>'+'‘‘’’<small><font color=\\\"#B15BFF\\\">'+\\\"\\\\n\\\"+分类+'</font></small>'+'‘‘’’<small><font color=\\\"#F17C67\\\">'+\\\"\\\\n\\\"+章节+\\\"&nbsp;\\\"+更新+'</font></small>',\\r\\n\\t\\t\\tdesc:'‘‘’’<small><font color=\\\"#52433D\\\">' +简介+ '</small>',\\r\\n\\t\\t\\tpic_url:  封面图片,\\r\\n\\t\\t\\turl: true_url,\\r\\n\\t\\t\\tcol_type: 'movie_1_vertical_pic_blur'\\r\\n\\t\\t});\\n\\t\\td.push({\\r\\n\\t\\t\\tcol_type: 'line_blank',\\r\\n\\t\\t});\\n\\t\\td.push({\\r\\n\\t\\t\\tcol_type: 'line',\\r\\n\\t\\t});\\r\\n\\t\\tif (hasLine) {\\r\\n\\t\\t\\titem.extra = {\\r\\n\\t\\t\\t\\tlineVisible: false\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\td.push(item);\\r\\n\\t} catch (e) {}\\r\\n}\\r\\nfunction chapter(title,pic_url,chapterList, chapterTitle, chapterUrl, defaultOrder, hasLine,downloadlazy) {\\r\\n\\tvar list = chapterList;\\r\\n\\tvar original = [{\\r\\n\\t\\turl: MY_URL,\\r\\n\\t\\torder: defaultOrder\\r\\n\\t}];\\r\\n\\t!fileExist('hiker://files/rules/comic/comicLogFile.js') ? (writeFile('hiker://files/rules/comic/comicLogFile.js', JSON.stringify(original))) : 0;\\r\\n\\tvar log = JSON.parse(fetch('hiker://files/rules/comic/comicLogFile.js'));\\r\\n\\tfor (var i in log) {\\r\\n\\t\\tif (log[i].url == MY_URL) {\\r\\n\\t\\t\\tvar now = i;\\r\\n\\t\\t\\tvar order = log[i].order;\\r\\n\\t\\t\\tbreak;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tvar now = '';\\r\\n\\t\\t\\tvar order = defaultOrder;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tlet orderItem = {\\r\\n\\t\\ttitle: \\\"““””\\\" + '<strong><font color=\\\"#098AC1\\\">' + '章节排序⇅' + '</font></strong>',\\r\\n\\t\\turl: MY_URL + `@lazyRule=.js:var log = JSON.parse(fetch('hiker://files/rules/comic/comicLogFile.js'));var now='` + now + `';if(now!=''){var now=parseInt(now);var order=log[now].order}else{var now=parseInt(log.length);var order=` + defaultOrder + `;log.push({url:input,order:order});}if(log[now].order){log[now].order=0;}else{log[now].order=1;};writeFile('hiker://files/rules/comic/comicLogFile.js', JSON.stringify(log));refreshPage();'hiker://empty'`,\\r\\n\\t\\tcol_type: 'text_center_1'\\r\\n\\t}\\r\\n\\tif (hasLine) {\\r\\n\\t\\torderItem.title = \\\"““””\\\" + '<strong><font color=\\\"#098AC1\\\">' + '集数排序⇅' + '</font></strong>';\\r\\n\\t\\torderItem.col_type = \\\"scroll_button\\\"\\r\\n\\t}\\r\\n\\tlet chapterLists = list.map((item)=>({\\r\\n\\t\\ttitle: pdfh(item,\\\"a&&Text\\\"),\\r\\n\\t\\turl: pd(item,\\\"a&&href\\\"),\\r\\n\\t}));\\r\\nd.push({\\r\\n\\ttitle: '‘‘’’<strong><font color= \\\"#098AC1\\\">' + \\\"下载漫画\\\" + '</front></strong>',\\r\\n\\turl: \\\"hiker://page/download.view#noHistory##noRecordHistory##noRefresh#?rule=本地资源管理\\\",\\r\\n\\tcol_type: \\\"scroll_button\\\",\\r\\n\\textra: {\\r\\n\\t\\tchapterList: chapterLists,\\r\\n\\t\\tinfo:{\\r\\n\\t\\t\\tbookName: title,\\r\\n\\t\\t\\truleName: MY_RULE.title,\\r\\n\\t\\t\\tbookTopPic: pic_url,\\r\\n\\t\\t\\tparseCode: downloadlazy\\r\\n\\t\\t},\\r\\n\\t\\tdefaultView:\\\"1\\\"\\r\\n\\t}\\r\\n});\\r\\n\\td.push({\\r\\n\\t\\ttitle: '‘‘’’<strong><font color= \\\"#098AC1\\\">' + \\\"本地书架\\\" + '</front></strong>',\\r\\n\\t\\turl: \\\"hiker://page/Main.view?rule=本地资源管理\\\",\\r\\n\\t\\tcol_type: \\\"scroll_button\\\",\\r\\n\\t});  \\r\\n\\td.push(orderItem);\\r\\n\\td.push({col_type: 'line'});\\t\\r\\n\\tvar list = order ? list : list.reverse();\\n\\tif(!list||list==\\\"\\\"){\\r\\n\\t\\td.push({\\r\\n\\t\\t\\ttitle: '此漫画已下架!!',\\r\\n\\t\\t\\tcol_type: 'text_1',\\r\\n\\t\\t});\\r\\n\\t}\\n\\r\\n\\tfor (var i in list) {\\r\\n\\t\\ttry {\\r\\n\\t\\t\\td.push({\\r\\n\\t\\t\\t\\ttitle: pdfh(list[i], chapterTitle),\\r\\n\\t\\t\\t\\turl: pd(list[i], chapterUrl) + lazy,\\r\\n\\t\\t\\t\\tcol_type: 'flex_button'\\r\\n\\t\\t\\t});\\r\\n\\t\\t}catch (e) {}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nfunction line(lineList, lineTitleRule, varKey) {\\r\\n\\tlet list = lineList\\r\\n\\tvarKey = varKey == null ? (MY_RULE.url + '#line-index'): varKey;\\r\\n\\taddListener('onClose', $.toString((keyList) => {\\r\\n\\t\\tfor (let i in keyList) {clearVar(keyList[i])}\\r\\n\\t}, [varKey, MY_RULE.title + '#line-title']))\\r\\n\\tlet line0Title = '';\\r\\n\\ttry {\\r\\n\\t\\tline0Title = pdfh(list[0], lineTitleRule).replace(\\\"章节列表：\\\",\\\"\\\");\\r\\n\\t} catch (e) {}\\r\\n\\tlog(MY_RULE.title + getVar((MY_RULE.title + '#line-title')))\\r\\n\\tfor (let i in list) {\\r\\n\\t\\ttry {\\r\\n\\t\\t\\tlet lineTitle = pdfh(list[i], lineTitleRule).replace(\\\"章节列表：\\\",\\\"\\\");\\r\\n\\t\\t\\td.push({\\r\\n\\t\\t\\t\\ttitle: getVar((MY_RULE.title + '#line-title'), line0Title) === lineTitle ? \\\"切换:‘‘\\\" + lineTitle+\\\"\\\":lineTitle+\\\"‘‘:切换\\\",\\r\\n\\t\\t\\t\\turl: $().lazyRule((varKey, lineIndex, lineTitle) => {\\r\\n\\t\\t\\t\\t\\tputVar(varKey, lineIndex.toString());\\r\\n\\t\\t\\t\\t\\tputVar((MY_RULE.title + '#line-title'), lineTitle);\\r\\n\\t\\t\\t\\t\\tlog(MY_RULE.title + getVar((MY_RULE.title + '#line-title')));\\r\\n\\t\\t\\t\\t\\trefreshPage();\\r\\n\\t\\t\\t\\t\\treturn \\\"toast://已切换至\\\" + lineTitle;\\r\\n\\t\\t\\t\\t}, varKey, i, lineTitle),\\r\\n\\t\\t\\t\\tcol_type: 'scroll_button',\\r\\n\\t\\t\\t});\\r\\n\\t\\t} catch (e) {}\\r\\n\\t}\\r\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"一级dy\",\"path\":\"yiji\",\"rule\":\"function 一级() {};\\r\\nObject.assign(一级.prototype, {\\r\\n\\tconstructor: 一级,\\r\\n\\ttest() {},\\r\\n\\t获取源码(url, header) {return fetch(true_url, {headers: header || {'User-Agent': PC_UA}}) },// 默认统一使用MOBILE_UA\\r\\n\\t搜索框架(page) {\\r\\n\\t\\tif (page == '1') {\\n/*\\r\\n\\t\\t\\td.push({\\r\\n\\t\\t\\t\\ttitle: \\\"搜索本规则\\\",\\r\\n\\t\\t\\t\\turl: \\\"'hiker://search?rule=\\\" + MY_RULE.title + \\\"&s='+input\\\",\\r\\n\\t\\t\\t\\tdesc: \\\" \\\",\\r\\n\\t\\t\\t\\tcol_type: \\\"input\\\"\\r\\n\\t\\t\\t});\\n*/\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t获取链接(page, regex) {\\r\\n\\t\\tlet true_url = getMyVar('header.url', MY_URL);\\r\\n\\t\\t//let 链接处理工具 = requireCache(config.链接处理工具依赖)\\r\\n\\t\\t//let 链接处理工具 = requireCache('https://gitee.com/reborn0/HikerRules/raw/master/plugins/UrlProcessor.js')\\r\\n\\t\\t//let 链接处理工具 = $.require('hiker://page/url-processor')\\r\\n\\t\\tlet 链接处理工具 = requireCache('https://gitee.com/coward-cat/js/raw/master/UrlProcessor.js')\\r\\n\\t\\ttrue_url = 链接处理工具\\r\\n\\t\\t\\t.链接(true_url)\\r\\n\\t\\t\\t.页码(page)\\r\\n\\t\\t\\t.插入新处理规则(regex || [])\\r\\n\\t\\t\\t.获取处理结果();\\r\\n\\t\\treturn true_url;\\r\\n\\t},\\r\\n\\t打造分类(ruleList) {\\r\\n\\t\\t//  let htmlCategories = requireCache(config.动态分类依赖)\\r\\n\\t\\t//let htmlCategories = requireCache('https://gitee.com/reborn0/HikerRules/raw/master/plugins/categories-header.js')\\r\\n\\t\\tif (!ruleList) {\\r\\n\\t\\t\\tlet 分类定位 = [{\\r\\n\\t\\t\\t\\t\\t一级分类: 一级定位A,\\r\\n\\t\\t\\t\\t\\t子分类: 统一定位B || 一级定位B,\\r\\n\\t\\t\\t\\t\\t分类链接: {二次处理(url) {try {return 一级处理C(url)} catch (e) {return url}}}\\r\\n\\t\\t\\t}]\\r\\n\\t\\t\\tif (二级定位A && (统一定位B || 二级定位B)) {\\r\\n\\t\\t\\t\\t分类定位.push({\\r\\n\\t\\t\\t\\t\\t\\t一级分类: 二级定位A,\\r\\n\\t\\t\\t\\t\\t\\t子分类: 统一定位B || 二级定位B,\\r\\n\\t\\t\\t\\t\\t\\t分类链接: {二次处理(url) {try {return 二级处理C(url)} catch (e) {return url}}}\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (三级定位A && (统一定位B || 三级定位B)) {\\r\\n\\t\\t\\t\\t分类定位.push({\\r\\n\\t\\t\\t\\t\\t\\t一级分类: 三级定位A,\\r\\n\\t\\t\\t\\t\\t\\t子分类: 统一定位B || 三级定位B,\\r\\n\\t\\t\\t\\t\\t\\t分类链接: {二次处理(url) {try {return 三级处理C(url)} catch (e) {return url}}}\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (四级定位A && (统一定位B || 四级定位B)) {\\r\\n\\t\\t\\t\\t分类定位.push({\\r\\n\\t\\t\\t\\t\\t\\t一级分类: 四级定位A,\\r\\n\\t\\t\\t\\t\\t\\t子分类: 统一定位B || 四级定位B,\\r\\n\\t\\t\\t\\t\\t\\t分类链接: {二次处理(url) {try {return 四级处理C(url)} catch (e) {return url}}}\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\truleList = 分类定位;\\r\\n\\t\\t}\\r\\n\\t\\t// '0' 为默认不折叠，'1' 为默认折叠\\r\\n\\t\\tconst 当前折叠状态 = getMyVar('header.fold', '0')\\r\\n\\t\\t// 引入动态分类依赖\\r\\n\\t\\tlet htmlCategories = requireCache('https://gitee.com/coward-cat/js/raw/master/categories-header.js')\\r\\n\\t\\tvar getRangeColors = function() {\\r\\n\\t\\t\\treturn '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);\\r\\n\\t\\t} // 随机选中的分类颜色\\r\\n\\t\\tvar colour;\\r\\n\\t\\tif (分类颜色 !== '') {\\r\\n\\t\\t\\tcolour = 分类颜色\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tcolour = getRangeColors()\\r\\n\\t\\t}\\r\\n\\t\\thtmlCategories.界面(d)\\r\\n\\t\\t\\t//.分类链接(true_url)\\r\\n\\t\\t\\t.源码(html)\\r\\n\\t\\t\\t.页码(page)\\r\\n\\t\\t\\t.添加分类定位(ruleList)\\r\\n\\t\\t\\t.开启内置折叠功能() // 必须\\r\\n\\t\\t\\t.折叠(当前折叠状态) // 必须\\r\\n\\t\\t\\t.折叠按钮样式({\\r\\n\\t\\t\\t\\ttitle: 当前折叠状态 == \\\"1\\\" ? \\\"““””<big><b><font color='#5959AB'>\\\" + 动态缩小 + \\\"</font></b></big>\\\" : \\\"““””<big><b><font color='#F75D59'>\\\" + 动态扩展 + \\\"</font></b></big>\\\"\\r\\n\\t\\t\\t}) // 可选\\r\\n\\t\\t\\t// .第几行开始折叠(2) // 可选\\r\\n\\t\\t\\t// .折叠按钮样式({ 折叠按钮插入行: 2 })  // 可选，但必须先调用 .第几行开始折叠(index)，然后再传入 { 折叠按钮插入行: index }\\r\\n\\t\\t\\t.选中的分类颜色(colour)\\r\\n\\t\\t\\t.开始打造分类();\\r\\n\\t},\\r\\n\\r\\n\\t生成片单(d,html) {\\r\\n\\r\\n\\t\\tvar 列表\\r\\n\\t\\tvar 标题\\r\\n\\t\\tvar 描述\\r\\n\\t\\tvar 图片\\r\\n\\t\\tvar 链接\\r\\n\\r\\n\\t\\tif (框架类型 === 'myui-vodlist') {\\r\\n\\t\\t\\t列表 = '.myui-vodlist&&li';\\r\\n\\t\\t\\t标题 = 'h4&&Text';\\r\\n\\t\\t\\t描述 = '.pic-tag||.pic-text&&Text';\\r\\n\\t\\t\\t图片 = '.lazyload&&data-original';\\r\\n\\t\\t\\t链接 = 'a&&href';\\r\\n\\t\\t\\t//log('框架类型·myui-vodlist')\\r\\n\\t\\t} else if (框架类型 === '#data_list') {\\r\\n\\t\\t\\t列表 = '#data_list&&li';\\r\\n\\t\\t\\t标题 = 'a&&title';\\r\\n\\t\\t\\t描述 = 'em&&Text';\\r\\n\\t\\t\\t图片 = 'img&&data-srcl';\\r\\n\\t\\t\\t链接 = 'a&&href';\\r\\n\\t\\t\\t//log('框架类型·data_list')\\r\\n\\t\\t} else if (框架类型 === 'fed-list-title') {\\r\\n\\t\\t\\t列表 = '.fed-list-info&&li';\\r\\n\\t\\t\\t标题 = '.fed-list-title&&Text';\\r\\n\\t\\t\\t描述 = '.fed-text-center&&Text';\\r\\n\\t\\t\\t图片 = 'a&&data-original';\\r\\n\\t\\t\\t链接 = 'a&&href';\\r\\n\\t\\t\\t//log('框架类型·.fed-list-info')\\r\\n\\t\\t} else if (框架类型 === 'item') {\\r\\n\\t\\t\\t列表 = 'body&&.item';\\r\\n\\t\\t\\t标题 = 'img&&alt';\\r\\n\\t\\t\\t描述 = 'p&&Text';\\r\\n\\t\\t\\t图片 = 'img&&srcl';\\r\\n\\t\\t\\t链接 = 'a&&href';\\r\\n\\t\\t} else if (框架类型 === 'module-items') {\\r\\n\\t\\t\\t列表 = '.module-items&&.module-item';\\r\\n\\t\\t\\t标题 = 'a&&title';\\r\\n\\t\\t\\t描述 = '.module-item-text&&Text';\\r\\n\\t\\t\\t图片 = 'img||.lazy&&data-src';\\r\\n\\t\\t\\t链接 = 'a&&href';\\r\\n\\t\\t} else if (框架类型 === 'pack-ykpack') {\\r\\n\\t\\t\\t列表 = 'body&&.pack-ykpack';\\r\\n\\t\\t\\t标题 = 'a&&title';\\r\\n\\t\\t\\t描述 = 'span,-1&&Text';\\r\\n\\t\\t\\t图片 = '.eclazy&&data-original';\\r\\n\\t\\t\\t链接 = 'a&&href';\\r\\n\\t\\t} else if (框架类型 === 'stui-vodlist') {\\r\\n\\t\\t\\t列表 = '.stui-vodlist&&li';\\r\\n\\t\\t\\t标题 = 'a&&title';\\r\\n\\t\\t\\t描述 = '.pic-text&&Text';\\r\\n\\t\\t\\t图片 = '.lazyload||a&&data-original';\\r\\n\\t\\t\\t链接 = 'a&&href';\\r\\n\\t\\t} else if (框架类型 === 'vodlist') {\\r\\n\\t\\t\\t列表 = '.vodlist&&li';\\r\\n\\t\\t\\t标题 = 'a&&title';\\r\\n\\t\\t\\t描述 = 'a&&Text';\\r\\n\\t\\t\\t图片 = '.lazyload&&data-original';\\r\\n\\t\\t\\t链接 = 'a&&href';\\r\\n\\t\\t} else if (框架类型 === '测试') {\\r\\n\\t\\t\\t列表 = 'body&&a';\\r\\n\\t\\t\\t标题 = 'body&&a';\\r\\n\\t\\t\\t描述 = 'body&&a';\\r\\n\\t\\t\\t图片 = 'body&&a';\\r\\n\\t\\t\\t链接 = 'body&&a';\\r\\n\\t\\t} else if (框架类型 === '') {\\r\\n\\t\\t\\t列表 = 框架列表;\\r\\n\\t\\t\\t标题 = 框架标题;\\r\\n\\t\\t\\t描述 = 框架描述;\\r\\n\\t\\t\\t图片 = 框架图片;\\r\\n\\t\\t\\t链接 = 框架链接;\\r\\n\\t\\t}\\r\\n\\t\\tlet list = pdfa(html, 列表);\\r\\n\\t\\tfor (let k in list) {\\r\\n\\t\\t\\td.push({\\r\\n\\t\\t\\t\\ttitle: pdfh(list[k], 标题),\\r\\n\\t\\t\\t\\tdesc: pdfh(list[k], 描述),\\r\\n\\t\\t\\t\\timg: pd(list[k], 图片) + '@Referer=',\\r\\n\\t\\t\\t\\turl: pd(list[k], 链接)+\\\"#immersiveTheme#\\\",\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t\\td.push({\\r\\n\\t\\t\\tcol_type: 'big_big_blank_block',\\r\\n\\t\\t});\\r\\n\\t}\\r\\n})\\r\\n\\r\\n$.exports = new 一级();\\r\\n$.exports\"}]","icon":"https://lanmeiguojiang.com/tubiao/ke/28.png"},{"last_chapter_rule":"","title":"轻合集.逐风者","author":"轻合集生成器","version":103,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', 'find:'),\n    types = { 'all': '聚合', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '图集', 'news': '资讯', 'tool': '工具', 'other': '其它' }\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow.startsWith('find:')) {\n                    let filterKey = typeShow.slice(5)\n                    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n                } else rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n\nel.push(typeShow.startsWith('find:') ? {\n    title: '““””' + ('全部' + (typeShow[5] ? '[' + typeShow.slice(5) + ']' : '')).bold().fontcolor('#12b668'),\n    url: $(typeShow.slice(5), '查找小程序关键词').input(() => {\n        putMyVar('typeShow', 'find:' + input)\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n} : {\n    title: '全部',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('typeShow', 'find:')\n        refreshPage(false)\n        return '再次点击【全部】可查找小程序'\n    }),\n    col_type: 'scroll_button'\n})\nfor (let k in types)\n    if (rules.find((v) => v.type == k))\n        el.push({\n            title: '““””' + (k == typeShow ? types[k].bold().fontcolor('#12b668') : types[k]),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow.startsWith('find:')) {\n    let filterKey = typeShow.slice(5)\n    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n} else rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/^(https?:\\/\\/.+?)(?:#|\\?|\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', 'find:')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow.startsWith('find:')) {\n                let filterKey = typeShow.slice(5)\n                if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n            } else rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","titleColor":"#ff13b66a","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=510381049')\n// \n/*\n*/","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteCache(url)\\n            back(false)\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = $('#noLoading#').lazyRule((i)=>{\\n                let data = $.require('hiker://page/dataLoad?rule=' + getMyVar('myCollection'))(true)\\n                return 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            }, i)\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (MY_PAGE == 1) {\\n    let loaded = getMyVar(MY_RULE.title + \\\"@pre\\\")\\n    if (!loaded || isIndex) {\\n        eval(thisRULE.preRule)\\n        putMyVar(MY_RULE.title + \\\"@pre\\\", \\\"1\\\")\\n    }\\n}\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title, url) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { title:title, url: url, pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, MY_RULE.title, MY_RULE.url)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            if(!v.extra) v.extra = {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra })\\n\\n            if (typeof v.url != 'string' || ['rule', 'pics', 'toast', 'input', 'confirm', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || v.extra.rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = Object.assign({}, v.extra, {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            })\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"}]","icon":"http://q1.qlogo.cn/g?b=qq&nk=510381049&s=640"},{"last_chapter_rule":"","title":"轻合集.藍凋","author":"轻合集生成器","version":100,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n//关闭自定义分类？\nconst defaultDisTabModify = true;\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', '');\nlet disTabModify = readFile('disTabModify');\nif(disTabModify===''){\n    saveFile('disTabModify', defaultDisTabModify+'');\n    disTabModify = defaultDisTabModify;\n}else if(/true|false/.test(disTabModify)){\n    disTabModify = JSON.parse(disTabModify);\n}\n//log('关闭自定义分类？'+disTabModify);\nconst {color,small,unique2} = $.require(\"hiker://page/tools?rule=\"+ QING_TITLE);\n\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow,disTabModify) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)();\n                if (disTabModify&&typeShow) {\n                    rules = rules.filter((v) => v.type === typeShow);\n                }else if(!disTabModify){\n                    typeNow = typeShow || '全部';\n                    if(typeNow==='其他'){\n                        rules = rules.filter((v) => !v.sort_url);\n                    }else if(typeNow!=='全部'){\n                        rules = rules.filter((v) => v.sort_url===typeNow);\n                    }\n                }\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow,disTabModify),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)();\n\nif(disTabModify) {\n    types = { '': '全部', 'all': '聚合', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '图集', 'news': '资讯', 'tool': '工具', 'other': '其它' };\n    for (let k in types) {\n        if (!k || rules.find((v) => v.type === k)) {\n            let title = '““””' + (k === typeShow ? types[k].bold().fontcolor('#12b668') : types[k]);\n            let cnt = rules.filter(it => !k || it.type === k).length;\n            el.push({\n                title: title + ' ' + color(cnt, '#ff7000'),\n                url: k === typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                    putMyVar('typeShow', k)\n                    refreshPage(false)\n                    return 'hiker://empty'\n                }, k),\n                col_type: 'scroll_button'\n            })\n        }\n    }\n\n    if (typeShow) {\n        rules = rules.filter((v) => v.type === typeShow);\n    }\n}else{\n    types = rules.map(it => it.sort_url || \"其他\");\n    types.unshift('全部');\n    types = unique2(types);\n    typeNow = typeShow || '全部';\n    for (let k in types) {\n        let its = types[k];\n        let title = '““””' + (its === typeNow ? its.bold().fontcolor('#12b668') : its);\n        let cnt;\n        if (its === '全部') {\n            cnt = rules.length\n        } else if (its === '其他') {\n            cnt = rules.filter(it => !it.sort_url).length;\n        } else {\n            cnt = rules.filter(it => it.sort_url === its).length;\n        }\n        el.push({\n            title: title + ' ' + color(cnt, '#ff7000'),\n            url: its === typeNow ? 'hiker://empty' : $('#noLoading#').lazyRule((its) => {\n                putMyVar('typeShow', its);\n                refreshPage(false)\n                return 'hiker://empty'\n            }, its),\n            col_type: 'scroll_button'\n        })\n    }\n    if(typeNow==='其他'){\n        rules = rules.filter((v) => !v.sort_url);\n    }else if(typeNow!=='全部'){\n        rules = rules.filter((v) => v.sort_url===typeNow);\n    }\n}\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule);\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/(https?:\\/\\/.+?)(?:\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n});\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const defaultDisTabModify = false; //默认禁用自定义分类关闭.就是开启自定义\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', '');\n            let disTabModify = readFile('disTabModify');\n            if(disTabModify===''){\n                saveFile('disTabModify', defaultDisTabModify+'');\n                disTabModify = defaultDisTabModify;\n            }else if(/true|false/.test(disTabModify)){\n                disTabModify = JSON.parse(disTabModify);\n            }\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)();\n            if (disTabModify&&typeShow) {\n                rules = rules.filter((v) => v.type === typeShow);\n            }else if(!disTabModify){\n                typeNow = typeShow || '全部';\n                if(typeNow==='其他'){\n                    rules = rules.filter((v) => !v.sort_url);\n                }else if(typeNow!=='全部'){\n                    rules = rules.filter((v) => v.sort_url===typeNow);\n                }\n            }\n            return JSON.stringify(rules)\n        })\n    }\n}]);","search_url":"hiker://empty?keyword=**","titleColor":"#ff13b66a","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title);\nputMyVar('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=1286098114');","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()');\\nsetPageTitle('⚙ 轻合集设置 ⚙');\\nconst defaultDisTabModify = false; //默认禁用自定义分类关闭.就是开启自定义\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://')){\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            }\\n            deleteCache(url);\\n            back(false);\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disTabModify = readFile('disTabModify'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用');\\nif(disTabModify===''){\\n    saveFile('disTabModify', defaultDisTabModify+'');\\n    disTabModify = defaultDisTabModify;\\n}else if(/true|false/.test(disTabModify)){\\n    disTabModify = JSON.parse(disTabModify);\\n}\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n},  {\\n    title: '  💠 分类自定义: ' + (disTabModify ? '否' : '是') + '  ',\\n    url: $('#noLoading#').lazyRule((disTabModify) => {\\n        saveFile('disTabModify', disTabModify ? 'false' : 'true');\\n        putMyVar('typeShow', '');\\n        refreshPage();\\n        return 'hiker://empty'\\n    }, disTabModify),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n            .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (isIndex && MY_PAGE == 1) eval(thisRULE.preRule)\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, RULE.title)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra || {} })\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            }\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"},{\"name\":\"仓库工具\",\"path\":\"tools\",\"rule\":\"js:\\n$.exports.range = function(m, n) {\\n    return Math.floor(Math.random() * (m - n + 1) + n);\\n}\\n$.exports.color = function(text, color) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n}\\nfunction htmlTag(tag, text) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””\\\" + \\\"<\\\" + tag + \\\">\\\" + text + \\\"</\\\" + tag + \\\">\\\";\\n\\n}\\n\\nfunction getNowFormatDate() {\\n            let date = new Date();\\n            let seperator1 = \\\"-\\\";\\n            let seperator2 = \\\":\\\";\\n            let month = date.getMonth() + 1;\\n            let strDate = date.getDate();\\n            let strHours = date.getHours();\\n            let strMinutes = date.getMinutes();\\n            let strSeconds = date.getSeconds()+1;\\n            if (month >= 1 && month <= 9) {\\n                month = \\\"0\\\" + month\\n            }\\n            if (strDate >= 0 && strDate <= 9) {\\n                strDate = \\\"0\\\" + strDate\\n            }\\n            if (strHours >= 0 && strHours <= 9) {\\n                strHours = \\\"0\\\" + strHours\\n            }\\n            if (strMinutes >= 0 && strMinutes <= 9) {\\n                strMinutes = \\\"0\\\" + strMinutes\\n            }\\n            if (strSeconds >= 0 && strSeconds <= 9) {\\n                strSeconds = \\\"0\\\" + strSeconds\\n            }\\n            //let currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate + \\\" \\\" + strHours + seperator2 + strMinutes + seperator2 + strSeconds;\\n            let currentdate = (date.getFullYear()-2020)+''+ month +''+ strDate +''+ strHours+'' + strMinutes +''+ Math.ceil(strSeconds/7);\\n            return parseInt(currentdate)\\n        }\\n$.exports.getNowFormatDate = getNowFormatDate;\\n$.exports.htmlTag = htmlTag;\\n$.exports.small = function(text) {\\n    return htmlTag(\\\"small\\\", text);\\n}\\n$.exports.unique2 = function unique2(array){\\n    return Array.from(new Set(array));\\n}\\n$.exports.strDeal = function strDeal(str){\\n    str = str.split('');\\n    str = str.filter(e => (e >= 0 && e <= 9) || (e >= 'a' && e <= 'z') || (e >= 'A' && e <= 'Z') || (e >= '\\\\u4e00' && e <= '\\\\u9fa5'));\\n    str = str.join('');\\n    return str\\n}\"}]","icon":"http://q1.qlogo.cn/g?b=qq&nk=1286098114&s=640"},{"last_chapter_rule":"","title":"轻合集.晓","author":"轻合集生成器","version":103,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', 'find:'),\n    types = { 'all': '聚合', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '图集', 'news': '资讯', 'tool': '工具', 'other': '其它' }\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow.startsWith('find:')) {\n                    let filterKey = typeShow.slice(5)\n                    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n                } else rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n\nel.push(typeShow.startsWith('find:') ? {\n    title: '““””' + ('全部' + (typeShow[5] ? '[' + typeShow.slice(5) + ']' : '')).bold().fontcolor('#12b668'),\n    url: $(typeShow.slice(5), '查找小程序关键词').input(() => {\n        putMyVar('typeShow', 'find:' + input)\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n} : {\n    title: '全部',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('typeShow', 'find:')\n        refreshPage(false)\n        return '再次点击【全部】可查找小程序'\n    }),\n    col_type: 'scroll_button'\n})\nfor (let k in types)\n    if (rules.find((v) => v.type == k))\n        el.push({\n            title: '““””' + (k == typeShow ? types[k].bold().fontcolor('#12b668') : types[k]),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow.startsWith('find:')) {\n    let filterKey = typeShow.slice(5)\n    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n} else rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/^(https?:\\/\\/.+?)(?:#|\\?|\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', 'find:')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow.startsWith('find:')) {\n                let filterKey = typeShow.slice(5)\n                if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n            } else rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","titleColor":"#ff13b66a","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=450384733')\n// \n/*\n*/","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteCache(url)\\n            back(false)\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = $('#noLoading#').lazyRule((i)=>{\\n                let data = $.require('hiker://page/dataLoad?rule=' + getMyVar('myCollection'))(true)\\n                return 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            }, i)\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (MY_PAGE == 1) {\\n    let loaded = getMyVar(MY_RULE.title + \\\"@pre\\\")\\n    if (!loaded || isIndex) {\\n        eval(thisRULE.preRule)\\n        putMyVar(MY_RULE.title + \\\"@pre\\\", \\\"1\\\")\\n    }\\n}\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title, url) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { title:title, url: url, pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, MY_RULE.title, MY_RULE.url)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            if(!v.extra) v.extra = {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra })\\n\\n            if (typeof v.url != 'string' || ['rule', 'pics', 'toast', 'input', 'confirm', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || v.extra.rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = Object.assign({}, v.extra, {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            })\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"}]","icon":"https://www.hualigs.cn/image/6107d579a6403.jpg"},{"last_chapter_rule":"","title":"轻合集.帅√`人才","author":"轻合集生成器","version":103,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', 'find:'),\n    types = { 'all': '聚合', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '图集', 'news': '资讯', 'tool': '工具', 'other': '其它' }\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow.startsWith('find:')) {\n                    let filterKey = typeShow.slice(5)\n                    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n                } else rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n\nel.push(typeShow.startsWith('find:') ? {\n    title: '““””' + ('全部' + (typeShow[5] ? '[' + typeShow.slice(5) + ']' : '')).bold().fontcolor('#12b668'),\n    url: $(typeShow.slice(5), '查找小程序关键词').input(() => {\n        putMyVar('typeShow', 'find:' + input)\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n} : {\n    title: '全部',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('typeShow', 'find:')\n        refreshPage(false)\n        return '再次点击【全部】可查找小程序'\n    }),\n    col_type: 'scroll_button'\n})\nfor (let k in types)\n    if (rules.find((v) => v.type == k))\n        el.push({\n            title: '““””' + (k == typeShow ? types[k].bold().fontcolor('#12b668') : types[k]),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow.startsWith('find:')) {\n    let filterKey = typeShow.slice(5)\n    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n} else rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/^(https?:\\/\\/.+?)(?:#|\\?|\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', 'find:')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow.startsWith('find:')) {\n                let filterKey = typeShow.slice(5)\n                if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n            } else rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=48597962')\n// \n/*\n*/","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteCache(url)\\n            back(false)\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = $('#noLoading#').lazyRule((i)=>{\\n                let data = $.require('hiker://page/dataLoad?rule=' + getMyVar('myCollection'))(true)\\n                return 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            }, i)\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (MY_PAGE == 1) {\\n    let loaded = getMyVar(MY_RULE.title + \\\"@pre\\\")\\n    if (!loaded || isIndex) {\\n        eval(thisRULE.preRule)\\n        putMyVar(MY_RULE.title + \\\"@pre\\\", \\\"1\\\")\\n    }\\n}\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title, url) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { title:title, url: url, pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, MY_RULE.title, MY_RULE.url)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            if(!v.extra) v.extra = {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra })\\n\\n            if (typeof v.url != 'string' || ['rule', 'pics', 'toast', 'input', 'confirm', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || v.extra.rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = Object.assign({}, v.extra, {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            })\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"}]","icon":"http://q1.qlogo.cn/g?b=qq&nk=48597962&s=640"},{"last_chapter_rule":"","title":"轻合集.app","author":"Joker","version":10107,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', 'find:');\nlet types = {}\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow.startsWith('find:')) {\n                    let filterKey = typeShow.slice(5)\n                    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n                } else rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)();\nArray.from(new Set(rules.map(e => e.type))).forEach(t => types[t] = t);\nel.push(typeShow.startsWith('find:') ? {\n    title: '““””' + ('全部' + (typeShow[5] ? '[' + typeShow.slice(5) + ']' : rules.length)).bold().fontcolor('#12b668'),\n    url: $(typeShow.slice(5), '查找小程序关键词').input(() => {\n        putMyVar('typeShow', 'find:' + input)\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n} : {\n    title: '全部' + rules.length,\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('typeShow', 'find:')\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n})\nfor (let k in types) {\n    if (rules.find((v) => v.type == k)) {\n        let count = rules.filter(it => !k || it.type === k).length;\n        el.push({\n            title: '““””' + (k == typeShow ? (types[k] + count).bold().fontcolor('#12b668') : types[k] + count),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n    }\n}\n\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow.startsWith('find:')) {\n    let filterKey = typeShow.slice(5)\n    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n} else rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title,\n            url: urlParam.shift(),\n            class_name: v.class_name,\n            class_url: v.class_url,\n            area_name: v.area_name,\n            area_url: v.area_url,\n            year_name: v.year_name,\n            year_url: v.year_url,\n            sort_name: v.sort_name,\n            sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/^(https?:\\/\\/.+?)(?:#|\\?|\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: {\n                    title: v.title\n                },\n                isIndex: true\n            }\n        }\n    if (newWindow) {\n        Object.assign(d.extra, {\n            newWindow: true,\n            windowId: QING_TITLE + '_' + d.title\n        })\n    }\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', '')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow) rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title);\nputMyVar('remoteUrl', 'app影视');\nputMyVar('subscription','https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/APP.json');","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection'),\\n          url = getMyVar('remoteUrl');\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule(() => {\\n            let url = getMyVar('remoteUrl')\\n            if(url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://已更新'\\n        }),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, /*{\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, */{\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + 'hiker://files/libs/' + md5(url) + '.js',\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (isIndex && MY_PAGE == 1) eval(thisRULE.preRule)\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title, url) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { title:title, url: url, pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, MY_RULE.title, MY_RULE.url)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            if(!v.extra) v.extra = {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra })\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'confirm', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || v.extra.rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = Object.assign({}, v.extra, {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            })\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        interval = parseInt(readFile('updateInterval') || '1'),\\n        time = parseInt(readFile('updateTime')) || 0,\\n        now = new Date().getTime(),\\n        data = [];\\n    if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n        // 获取远程数据\\n        try {\\n            data = $.require(\\\"hiker://page/creator\\\");\\n        } catch (e) {}\\n        if(data.length == 0) {\\n            data = JSON.parse(fetch('hiker://files/libs/' + md5(url) + '.js') || '[]')\\n            log('没有获取到更新数据')\\n        } else {\\n            writeFile('hiker://files/libs/' + md5(url) + '.js', JSON.stringify(data));\\n            saveFile('updateTime', now.toString())\\n            log('更新数据已写入本地')\\n        }\\n    } else {\\n        data = JSON.parse(fetch('hiker://files/libs/' + md5(url) + '.js') || '[]')\\n    }\\n    \\n    //data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n        if (readFile('disableCustom')) return data\\n        else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"生成规则集\",\"path\":\"creator\",\"rule\":\"let appjson = $.require('hiker://page/appJson');\\n\\nfunction randomSort3(arr) {\\n    /*arr.sort(function() {\\n        return Math.random() - 0.5;\\n    });*/\\n    return arr;\\n}\\n\\nlet appconts = appjson.data,\\n    rules = [],\\n    types = { \\\"\\\": \\\"全部\\\" };\\nfor (let i = 0; i < appconts.length; i++) {\\n    let applist = randomSort3(appconts[i].list),\\n        apptype = appconts[i].title /* + applist.length*/ ;\\n    types[apptype] = apptype;\\n    if (apptype.includes(\\\"个人收集\\\")) continue;\\n    for (let j = 0; j < applist.length; j++) {\\n        let apptitle = applist[j].title,\\n            appicon = applist[j].img,\\n            appUrl = applist[j].url,\\n            home_url = \\\"\\\",\\n            find_rule = \\\"\\\",\\n            search_url = \\\"\\\",\\n            searchFind = \\\"\\\",\\n            pages = [],\\n            last_chapter_rule = \\\"\\\",\\n            appUa = \\\"\\\";\\n        //处理重名的\\n        let num = 1,\\n            temp = apptitle;\\n        while (rules.some(cur => cur.title == apptitle)) {\\n            num = num + 1;\\n            apptitle = temp + num;\\n        }\\n        //规则链接和搜索链接\\n        if (/神马|TV/.test(apptype)) {\\n            home_url = \\\"hiker://empty##\\\" + appUrl + \\\"?ac=list&page=fypage\\\";\\n            if (/19jx|293ys|zhaikanys|ji\\\\-ding\\\\-he|phoebe|yunbo\\\\.bxin|lanrentk|hetaoys|pxun|139\\\\.155|fkkdy|056158|aixixi|ruoxinew|feifan123|siqitv/.test(appUrl)) {\\n                search_url = \\\"hiker://empty##\\\" + appUrl + '?ac=list&page=fypage&zm=**';\\n            } else {\\n                search_url = \\\"hiker://empty##\\\" + appUrl + '?ac=list&page=fypage&wd=**';\\n            }\\n        } else {\\n            if (appUrl.includes(\\\"api.php/app\\\")) {\\n                home_url = \\\"hiker://empty##\\\" + appUrl + \\\"index_video?token=\\\";\\n            } else if (appUrl.includes(\\\"xgapp\\\")) {\\n                home_url = \\\"hiker://empty##\\\" + appUrl + \\\"index_video?token=\\\";\\n            } else {\\n                home_url = \\\"hiker://empty##\\\" + appUrl + \\\"/vodPhbAll\\\";\\n            }\\n\\n            if (appUrl.includes('api.php/app')) {\\n                search_url = \\\"hiker://empty##\\\" + appUrl + 'search?pg=fypage&token=&text=**';\\n            } else if (appUrl.includes('xgapp')) {\\n                search_url = \\\"hiker://empty##\\\" + appUrl + 'search?pg=fypage&text=**';\\n            } else {\\n                if (/iopenyun/.test(appUrl)) {\\n                    search_url = \\\"hiker://empty##\\\" + appUrl + '/list?page=fypage&limit=10&wd=**';\\n                } else {\\n                    search_url = \\\"hiker://empty##\\\" + appUrl + '?page=fypage&limit=10&wd=**';\\n                }\\n            }\\n        }\\n        //需要特殊处理的链接\\n        function changeUrl(url) {\\n            let newUrl = url;\\n            if (url.includes(\\\"omofun\\\")) {\\n                newUrl = url + \\\"&csrf=a%2BIKGLunJCZuad%2BxETLrZuBoqhluFCD0dH86E8IENvBzMfBLa6dB8RzoxxIvvBEMeJzJnUSt51FhlPBd4Kr5yhGXlyNvDkJyNMDgDZ1b%2FsjXAeMtj17XteM8puTY2PQnQwYOyj%2FHUCAVRZkrflsk87YG1VeSwnET8TprDD8t6ug%3D@signature=FED4A092D5BBBE18117A3B558EB6461A92A52CF7\\\";\\n            } else if (url.includes(\\\"xinluan\\\")) {\\n                newUrl = url + \\\"&csrf=SREQAPX8tFEKpV2dLDjLZhKk8IxJfDWhN%2BmksWJ%2FkdRVwgUh%2FQkTDZEoQASaAp7HzUix87T%2BPLkAIw6yH%2B6MrvaqJM9rJ5l2b85IQRbBbW%2BDbSYRO8bmTsKdLYDTVtRHhz5nylRWlGUidxHfVyLO9tZUiBk1Y2Awo%2Fzsa2tH2u8%3D@signature=FBC7088C677D297E6BBBC8584A93372DDE10FD96\\\";\\n            } else if (url.includes(\\\"sxbrd\\\")) {\\n                newUrl = url + \\\"&csrf=r2NDLtpS8Euqh%2F%2F8Y96ycOUOKS9ICzNYzyaw5C2UfEgoDFDHX%2Frqj%2BYcLWQzH5%2BR6moUOlwOAoJREtUa376ud74627UDzNQ1sRGdTD8kb36s1eTMemcn8d0i7WJ6k9ih5IP4Ad7fpa6%2F3Dst1joGncyr716dRHDMfcvrs3S29jI%3D@client_name=55WF55yL5b2x6KeG\\\";\\n            }\\n            return newUrl;\\n        }\\n        //请求UA\\n        if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\") || appUrl.includes(\\\"freekan\\\")) {\\n            appUa = \\\"Dart/2.14 (dart:io)\\\";\\n        } else if (/zsb|fkxs|xays|xcys|szys|dxys|ytys|qnys/.test(appUrl)) {\\n            appUa = \\\"Dart/2.15 (dart:io)\\\";\\n        } else if (appUrl.includes(\\\".vod\\\")) {\\n            appUa = \\\"okhttp/4.1.0\\\";\\n        } else {\\n            appUa = \\\"Dalvik/2.1.0\\\"; //TV\\n        }\\n        //首页规则、分类规则、二级规则和视频解析\\n        if (/神马|TV/.test(apptype)) {\\n            find_rule = \\\"js:\\\" + $.toString(function(appUrl, appUa) {\\n                let items = [];\\n                if (MY_PAGE == 1) {\\n                    try {\\n                        let typeJson = JSON.parse(fetch(appUrl + \\\"?ac=flitter\\\"), { headers: { \\\"User-Agent\\\": appUa } });\\n                        for (let key in typeJson) {\\n                            items.push({\\n                                title: key,\\n                                col_type: \\\"flex_button\\\",\\n                                url: $(\\\"hiker://empty##\\\" + appUrl + \\\"?ac=list&page=fypage&class=\\\" + key).rule((typeJson, appUa) => {\\n                                    addListener(\\\"onClose\\\", \\\"clearVar('filter')\\\");\\n                                    let items = [],\\n                                        keys = {},\\n                                        tykeys = [],\\n                                        filter = {},\\n                                        color = \\\"#FA7298\\\";\\n                                    for (let index in typeJson) {\\n                                        if (typeJson[index].values.length == 1) continue;\\n                                        let key = typeJson[index].field,\\n                                            filterName = \\\"全部\\\" + typeJson[index].name;\\n                                        tykeys.push(key);\\n                                        keys[\\\"f\\\" + key] = \\\"\\\";\\n                                        filter[\\\"f\\\" + key] = [filterName].concat(typeJson[index].values);\\n                                    }\\n                                    if (!getVar(\\\"filter\\\", \\\"\\\")) { putVar(\\\"filter\\\", JSON.stringify(keys)) }\\n                                    let temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                    if (MY_PAGE == 1) {\\n                                        for (let item in filter) {\\n                                            for (let index = 0; index < filter[item].length; index++) {\\n                                                items.push({\\n                                                    title: temp[item] == \\\"\\\" ? (index === 0 ? \\\"““””\\\" + filter[item][0].bold().fontcolor(color) : filter[item][index]) : (temp[item] == filter[item][index] ? \\\"““””\\\" + filter[item][index].bold().fontcolor(color) : filter[item][index]),\\n                                                    col_type: \\\"scroll_button\\\",\\n                                                    url: $().lazyRule((des, name) => {\\n                                                        let temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                                        temp[name] = des.indexOf(\\\"全部\\\") != -1 ? \\\"\\\" : des;\\n                                                        putVar(\\\"filter\\\", JSON.stringify(temp));\\n                                                        refreshPage(false);\\n                                                        return \\\"hiker://empty\\\"\\n                                                    }, filter[item][index], item)\\n                                                })\\n                                            }\\n                                            items.push({ col_type: \\\"blank_block\\\" })\\n                                        }\\n                                    }\\n                                    let url = MY_URL.split(\\\"##\\\")[1] + \\\"&\\\" + tykeys.map(cur => cur + \\\"=f\\\" + cur).join(\\\"&\\\");\\n                                    for (let item in temp) {\\n                                        url = url.replace(item, temp[item]);\\n                                    }\\n                                    let rescode = fetch(url, { headers: { \\\"User-Agent\\\": appUa } });\\n                                    if (rescode.indexOf('检测中') != -1) {\\n                                        rescode = fetch(url + '&btwaf' + rescode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                                    }\\n                                    let html = JSON.parse(rescode);\\n                                    try {\\n                                        eval(JSON.parse(fetch('hiker://page/tvlistdata')).rule);\\n                                    } catch (e) {\\n                                        log(\\\"视频列表出错:\\\" + e.message);\\n                                    }\\n                                    setResult(items);\\n                                }, typeJson[key], appUa)\\n                            })\\n                        }\\n                    } catch (e) {\\n                        log(\\\"首页分类出错:\\\" + e.message);\\n                    }\\n                }\\n                try {\\n                    let url = MY_URL.split('##')[1],\\n                        html = JSON.parse(fetch(url));\\n                    eval(JSON.parse(fetch('hiker://page/tvlistdata')).rule);\\n                } catch (e) {\\n                    log(\\\"首页推荐出错:\\\" + e.message);\\n                }\\n                setResult(items);\\n            }, appUrl, appUa)\\n            let rule_tvlistdata = $.toString(function() {\\n                let list = html.data;\\n                for (let i = 0; i < list.length; i++) {\\n                    let { title, pic, nextlink, state } = list[i];\\n                    let url = nextlink.startsWith('http') ? nextlink : appUrl + '?ac=detail&ids=' + nextlink;\\n                    items.push({\\n                        title: title,\\n                        pic_url: pic + '@Referer=',\\n                        desc: state,\\n                        col_type: 'movie_3_marquee',\\n                        url: $(\\\"#immersiveTheme#hiker://empty##\\\" + url).rule(() => {\\n                            try {\\n                                eval(JSON.parse(fetch('hiker://page/tvmovlist')).rule);\\n                            } catch (e) {\\n                                log(\\\"影片详情出错:\\\" + e.message);\\n                                setResult([]);\\n                            }\\n                        })\\n                    });\\n                }\\n            });\\n            let rule_tvmovlist = $.toString(function(appUrl, appUa) {\\n                addListener(\\\"onClose\\\", $.toString((url) => {\\n                    clearVar('now');\\n                    clearVar(url);\\n                    clearMyVar('jiexi');\\n                }, MY_URL));\\n                let items = [],\\n                    html = getVar(MY_URL, \\\"\\\");\\n                //domin = MY_URL.split(\\\"##\\\")[1].match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n                if (html == \\\"\\\") {\\n                    html = fetch(MY_URL.split(\\\"##\\\")[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                    putVar(MY_URL, html);\\n                }\\n                html = JSON.parse(html);\\n\\n                //简介\\n                let { title, pubtime, trunk, area, type, director, actor, img_url, intro } = html;\\n                items.push({\\n                    title: title + \\\"(\\\" + pubtime + \\\")\\\" + \\\"\\\\n\\\" + area.join(\\\"/\\\") + \\\"/\\\" + type.join(\\\"/\\\") + \\\"/\\\" + trunk,\\n                    desc: \\\"导演:\\\" + director.join(\\\",\\\") + \\\"\\\\n\\\" + \\\"主演:\\\" + actor.join(\\\",\\\"),\\n                    pic_url: img_url,\\n                    url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/Route.js');Route.setParse();setResult(d);\\\",\\n                    col_type: 'movie_1_vertical_pic_blur'\\n                }, {\\n                    title: '剧情简介:',\\n                    desc: intro,\\n                    url: $('hiker://empty#noRecordHistory#').rule((desc) => {\\n                        setResult([{\\n                            title: desc,\\n                            col_type: 'long_text'\\n                        }]);\\n                    }, intro),\\n                    col_type: 'text_1',\\n                    extra: { lineVisible: false }\\n                });\\n                //断插\\n                /*let dnen = getMyVar(\\\"dnen\\\", \\\"0\\\");\\n                items.push({\\n                    title: '断插:' + (dnen == '1' ? '““✅””' : '❎'),\\n                    url: $('').lazyRule((dnen) => {\\n                        if (dnen == '1') {\\n                            putMyVar(\\\"dnen\\\", \\\"0\\\");\\n                            refreshPage(false);\\n                            return 'toast://已禁用断插调用!';\\n                        } else {\\n                            putMyVar(\\\"dnen\\\", \\\"1\\\");\\n                            refreshPage(false);\\n                            return 'toast://已开启断插调用!'\\n                        }\\n                    }, dnen),\\n                    col_type: 'text_2'\\n                });\\n                items.push({\\n                    title: '线路配置',\\n                    url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/Route.js');Route.setParse();setResult(d);\\\",\\n                    //url:\\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\\\",\\n                    col_type: 'text_2'\\n                });*/\\n                //线路列表\\n                let tabs = Object.keys(html.videolist);\\n                if (getVar(\\\"now\\\", \\\"\\\") == \\\"\\\") { putVar(\\\"now\\\", tabs[0]) }\\n                items.push({\\n                    title: \\\"““↓↑””\\\",\\n                    url: \\\"hiker://empty@lazyRule=.js:putVar('appmtvsort', getVar('appmtvsort','1')=='1'?'0':'1');refreshPage(false);'toast://切换成功!'\\\",\\n                    col_type: 'scroll_button'\\n                });\\n                for (let i in tabs) {\\n                    items.push({\\n                        title: getVar(\\\"now\\\") == tabs[i] ? \\\"““””\\\" + tabs[i].bold().fontcolor(\\\"#FA7298\\\") : tabs[i],\\n                        url: \\\"hiker://empty@lazyRule=.js:putVar('now','\\\" + tabs[i] + \\\"');refreshPage(false);'toast://切换成功!'\\\",\\n                        col_type: 'scroll_button'\\n                    })\\n                }\\n                items.push({\\n                    title:'当前解析:' + getMyVar('jiexi','默认解析'),\\n                    url: $([\\\"默认解析\\\",\\\"断插解析\\\"],1).select(()=>{\\n                        putMyVar('jiexi',input);\\n                        refreshPage(false);\\n                        return 'toast://已更改解析'\\n                    }),\\n                    col_type: 'text_1',\\n                    extra: { lineVisible: false }\\n                })\\n                //视频列表\\n                let ptab = getVar(\\\"now\\\"),\\n                    list = html.videolist[ptab];\\n                //log('当前线路:' + ptab);\\n                if (getVar('appmtvsort', '1') == '0') {\\n                    list.reverse();\\n                };\\n                for (let j = 0; j < list.length; j++) {\\n                    let srcurl = list[j].url;\\n                    if (/293jx1/.test(srcurl)) {\\n                        srcurl = srcurl.replace('293jx1', 'jx');\\n                    } else if (/8d8q|diliktv|haokanju1|cztv|fit\\\\:8|ppzhu/.test(appUrl)) {\\n                        srcurl = srcurl + '&app=10000&account=272775028&password=qq272775028';\\n                    }\\n                    let title = list[j].title;\\n                    //title = title.match(/(第|\\\\d|-)*(集|话|期)/g) ? title.replace(/第|集|话|期/g, '') : title;\\n                    items.push({\\n                        title: title,\\n                        col_type: \\\"text_4\\\",\\n                        url: eval(JSON.parse(fetch(\\\"hiker://page/lazyParse\\\")).rule)\\n                    });\\n                }\\n                setResult(items);\\n            }, appUrl, appUa);\\n            let lazyParse = $.toString(() => {\\n                let vlink = srcurl;\\n                if (/(url|vid|v)\\\\=/.test(srcurl)) {\\n                    vlink = srcurl.substring(srcurl.search(/(url|vid|v)\\\\=/)).split('=')[1].split('&')[0];\\n                }\\n                let enDn = getMyVar(\\\"jiexi\\\", \\\"默认解析\\\"),\\n                    test1 = vlink.search(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) != -1,\\n                    test2 = vlink.search(/LT\\\\-|RongXingVR\\\\-|renrenmi\\\\-|xfy\\\\-|suoyo\\\\.cc|fen\\\\.laodi|xueren\\\\-/) != -1;\\n                if ((test1 || test2) && enDn == '断插解析') {\\n                    return $('hiker://empty').lazyRule((vlink) => {\\n                        log(\\\"调用断插解析,视频链接:\\\" + vlink);\\n                        eval(\\\"let config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                        eval(fetch(config.cj));\\n                        return aytmParse(vlink);\\n                    }, vlink)\\n                } else {\\n                    return $(\\\"hiker://empty\\\").lazyRule((ptab, srcurl, appUrl) => {\\n                        log(\\\"使用默认解析,视频链接:\\\" + srcurl);\\n                        //动态解析代码开始\\n                        function changeVideoUrl(url) {\\n                            //改变特定地址的Referer\\n                            if (url.includes(\\\"wkfile\\\")) {\\n                                url = url + ';{Referer@https://fantuan.wkfile.com/}';\\n                            } else if (ptab == 'bilibili') {\\n                                url = url + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n                            } else if (ptab == 'mgtv') {\\n                                url = url + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                            } else if (url.includes(\\\"ojbk\\\")) {\\n                                url = url + ';{Referer@https://bak.ojbkjx.com/}';\\n                            }\\n                            //返回视频链接\\n                            if (!url.includes(\\\"http\\\")) {\\n                                throw new Error(\\\"链接不是以http开头(可能加密了)\\\");\\n                            } else {\\n                                if (/\\\\.m3u8/.test(url)) {\\n                                    return cacheM3u8(url);\\n                                } else {\\n                                    return url + '#isVideo=true#';\\n                                }\\n                            }\\n                        }\\n                        try {\\n                            if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos|netease\\\\.com/.test(srcurl) && /http/.test(srcurl) && !/\\\\.html/.test(srcurl) && !/(url|v|vid)\\\\=/.test(srcurl)) {\\n                                if (!/fen\\\\.laodi|suoyo\\\\.cc/.test(srcurl)) {\\n                                    log(\\\"检测到资源地址可能是视频链接\\\");\\n                                    return changeVideoUrl(srcurl);\\n                                }\\n                            }\\n                            //----分割线----//\\n                            let scode = JSON.parse(fetch(srcurl, {\\n                                headers: {\\n                                    \\\"User-Agent\\\": MOBILE_UA\\n                                },\\n                                redirect: false,\\n                                withStatusCode: true\\n                            }));\\n                            //返回重定向的链接 \\n                            if (scode.statusCode == '302' || scode.statusCode == '301') {\\n                                let redurl = scode.headers.location[0].replace(/\\\\\\\\/g, '');\\n                                log('重定向:' + redurl);\\n                                if (!/(url|vid|v)\\\\=/.test(redurl)) {\\n                                    return changeVideoUrl(redurl);\\n                                }\\n                                /*else if (/\\\\=http/.test(redurl) && /\\\\.m3u8|\\\\.mp4|\\\\.flv/.test(redurl)) {\\n                                    purl = redurl.substring(redurl.indexOf('=http') + 1);\\n                                }*/\\n                                scode.body = fetch(redurl);\\n                            }\\n                            //开始嗅探\\n                            let html = scode.body;\\n                            if (/404 Not Found|备案后可继续访问/.test(html)) {\\n                                throw new Error(\\\"404了\\\");\\n                            } else if (/\\\\<body/.test(html)) {\\n                                return $([\\\"开始视频嗅探\\\", \\\"打开解析网页\\\", \\\"使用内置解析\\\"], 1, \\\"检测到解析为网页数据\\\").select((ptab, srcurl, appUrl) => {\\n                                    if (input == \\\"开始视频嗅探\\\") {\\n                                        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                                        return x5rule(srcurl, srcurl);\\n                                    } else if (input == \\\"打开解析网页\\\") {\\n                                        return \\\"web://\\\" + srcurl;\\n                                    } else if (input == \\\"使用内置解析\\\") {\\n                                        let vlink = srcurl;\\n                                        if (/(url|vid|v)\\\\=/.test(srcurl)) {\\n                                            vlink = srcurl.substring(srcurl.search(/(url|vid|v)\\\\=/)).split('=')[1].split('&')[0];\\n                                        }\\n                                        log(\\\"使用内置解析,视频链接:\\\" + vlink);\\n                                        showLoading(\\\"正在进行解析...\\\");\\n                                        return eval(JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule);\\n                                    }\\n                                }, ptab, srcurl, appUrl)\\n                            } else {\\n                                //log('尝试从json数据获取');\\n                                try {\\n                                    let purl = JSON.parse(html).url;\\n                                    return changeVideoUrl(purl);\\n                                } catch (e) {\\n                                    /*let purl = html.match(/[\\\\'\\\\\\\"]url[\\\\'\\\\\\\"]:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1].replace(/\\\\\\\\/g, '');\\n                                    return changeVideoUrl(purl);*/\\n                                    throw new Error('解析可能加密了');\\n                                }\\n                            }\\n                        } catch (e) {\\n                            log('未能成功获取视频地址:' + e.message);\\n                            let vlink = srcurl;\\n                            if (/(url|vid|v)\\\\=/.test(srcurl)) {\\n                                vlink = srcurl.substring(srcurl.search(/(url|vid|v)\\\\=/)).split('=')[1].split('&')[0];\\n                            }\\n                            log(\\\"尝试使用内置解析,视频链接:\\\" + vlink);\\n                            return eval(JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule);\\n                        }\\n                        //动态解析代码结束\\n                    }, ptab, srcurl, appUrl);\\n                }\\n            });\\n            pages.push({\\n                name: \\\"TV列表\\\",\\n                path: \\\"tvlistdata\\\",\\n                rule: rule_tvlistdata\\n            }, {\\n                name: \\\"TV选集\\\",\\n                path: \\\"tvmovlist\\\",\\n                rule: rule_tvmovlist\\n            }, {\\n                name: \\\"视频解析\\\",\\n                path: \\\"lazyParse\\\",\\n                rule: lazyParse\\n            });\\n        } else {\\n            find_rule = \\\"js:\\\" + $.toString(function(changeUrl, appUrl, appUa) {\\n                let items = [];\\n                //获取分类内容\\n                try {\\n                    let typeJson = [];\\n                    if (appUrl.includes(\\\"api.php/app\\\")) {\\n                        let typeUrl = changeUrl(appUrl + \\\"nav?token=\\\");\\n                        let typcode = request(typeUrl, { headers: { \\\"User-Agent\\\": appUa } });\\n                        if (typcode.indexOf('检测中') != -1) {\\n                            typcode = fetch(typeUrl + '&btwaf' + typcode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                        }\\n                        typeJson = JSON.parse(typcode).list;\\n                    } else if (appUrl.includes(\\\"xgapp\\\")) {\\n                        let typeUrl = changeUrl(appUrl + \\\"nav?token=\\\");\\n                        let typcode = request(typeUrl, { headers: { \\\"User-Agent\\\": appUa } });\\n                        if (typcode.indexOf('检测中') != -1) {\\n                            typcode = fetch(typeUrl + '&btwaf' + typcode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                        }\\n                        typeJson = JSON.parse(typcode).data;\\n                    } else if (appUrl.includes(\\\".vod\\\")) {\\n                        let typeUrl = changeUrl(appUrl + \\\"/types\\\");\\n                        let typcode = request(typeUrl, { headers: { \\\"User-Agent\\\": appUa } });\\n                        if (typcode.indexOf('检测中') != -1) {\\n                            typcode = fetch(typeUrl + '?btwaf' + typcode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                        }\\n                        typeJson = JSON.parse(typcode).data.list;\\n                    }\\n                    //获取分类列表\\n                    for (let i = 0; i < typeJson.length; i++) {\\n                        //分类视频地址\\n                        let tyurl = \\\"\\\",\\n                            typeArray = Object.keys(typeJson[i].type_extend).filter(cur => [\\\"class\\\", \\\"area\\\", \\\"lang\\\", \\\"year\\\"].includes(cur)),\\n                            typeUrl = typeArray.map(cur => cur + \\\"=f\\\" + cur).join(\\\"&\\\");\\n                        if (appUrl.includes('api.php/app')) {\\n                            tyurl = appUrl + 'video?tid=' + typeJson[i].type_id + '&page=fypage&token=&' + typeUrl;\\n                        } else if (appUrl.includes('xgapp')) {\\n                            tyurl = appUrl + 'video?tid=' + typeJson[i].type_id + '&page=fypage&' + typeUrl;\\n                        } else if (appUrl.includes(\\\".vod\\\")) {\\n                            if (/iopenyun/.test(appUrl)) {\\n                                tyurl = appUrl + '/list?type=' + typeJson[i].type_id + '&page=fypage&by=fby&limit=9&' + typeUrl;\\n                            } else {\\n                                tyurl = appUrl + '?type=' + typeJson[i].type_id + '&page=fypage&by=fby&limit=9&' + typeUrl;\\n                            }\\n                        }\\n                        //构建动态分类\\n                        items.push({\\n                            title: typeJson[i].type_name,\\n                            url: $(\\\"hiker://empty##\\\" + tyurl).rule((appUrl, type_extend, changeUrl, appUa) => {\\n                                addListener(\\\"onClose\\\", \\\"clearVar('filter')\\\");\\n                                let items = [];\\n                                if (MY_PAGE == 1) { //动态分类\\n                                    let keys = {},\\n                                        filter = {},\\n                                        filterNames = { class: \\\"类型\\\", area: \\\"地区\\\", lang: \\\"语言\\\", year: \\\"年份\\\", star: \\\"明星\\\", director: \\\"导演\\\", state: \\\"状态\\\", version: \\\"版本\\\" },\\n                                        defaultFilter = {\\n                                            fclass: [\\\"全部类型\\\", \\\"喜剧\\\", \\\"爱情\\\", \\\"恐怖\\\", \\\"动作\\\", \\\"科幻\\\", \\\"剧情\\\", \\\"战争\\\", \\\"警匪\\\", \\\"犯罪\\\", \\\"动画\\\", \\\"奇幻\\\", \\\"武侠\\\", \\\"冒险\\\", \\\"枪战\\\", \\\"悬疑\\\", \\\"惊悚\\\", \\\"经典\\\", \\\"青春\\\", \\\"文艺\\\", \\\"微电影\\\", \\\"古装\\\", \\\"历史\\\", \\\"运动\\\", \\\"农村\\\", \\\"儿童\\\", \\\"网络电影\\\"],\\n                                            farea: [\\\"全部地区\\\", \\\"内地\\\", \\\"香港\\\", \\\"台湾\\\", \\\"美国\\\", \\\"英国\\\", \\\"法国\\\", \\\"日本\\\", \\\"韩国\\\", \\\"德国\\\", \\\"泰国\\\", \\\"印度\\\", \\\"西班牙\\\", \\\"加拿大\\\", \\\"其他\\\"],\\n                                            fyear: [\\\"全部年份\\\", \\\"2022\\\", \\\"2021\\\", \\\"2020\\\", \\\"2019\\\", \\\"2018\\\", \\\"2017\\\", \\\"2016\\\", \\\"2015\\\", \\\"2014\\\", \\\"2013\\\", \\\"2012\\\", \\\"2011\\\", \\\"2010\\\", \\\"2009\\\", \\\"2008\\\", \\\"2007\\\", \\\"2006\\\", \\\"2005\\\", \\\"2004\\\", \\\"2003\\\", \\\"2002\\\", \\\"2001\\\", \\\"2000\\\"],\\n                                            flang: [\\\"全部语言\\\", \\\"国语\\\", \\\"英语\\\", \\\"粤语\\\", \\\"闽南语\\\", \\\"韩语\\\", \\\"日语\\\", \\\"法语\\\", \\\"德语\\\", \\\"其他\\\"]\\n                                        };\\n                                    for (let key in type_extend) {\\n                                        if (![\\\"class\\\", \\\"area\\\", \\\"lang\\\", \\\"year\\\"].includes(key)) continue;\\n                                        keys[\\\"f\\\" + key] = \\\"\\\";\\n                                        keys[\\\"fby\\\"] = \\\"\\\";\\n                                        let filterName = \\\"全部\\\" + filterNames[key];\\n                                        filter[\\\"f\\\" + key] = [filterName].concat(type_extend[key].split(\\\",\\\"));\\n                                        if (filter[\\\"f\\\" + key].length == 2) {\\n                                            filter[\\\"f\\\" + key] = defaultFilter[\\\"f\\\" + key]\\n                                        }\\n                                    }\\n                                    if (!getVar(\\\"filter\\\", \\\"\\\")) { putVar(\\\"filter\\\", JSON.stringify(keys)) }\\n                                    var temp = JSON.parse(getVar(\\\"filter\\\")),\\n                                        color = \\\"#FA7298\\\";\\n                                    for (let item in filter) {\\n                                        for (let index = 0; index < filter[item].length; index++) {\\n                                            items.push({\\n                                                title: temp[item] == \\\"\\\" ? (index === 0 ? \\\"““””\\\" + filter[item][0].bold().fontcolor(color) : filter[item][index]) : (temp[item] == filter[item][index] ? \\\"““””\\\" + filter[item][index].bold().fontcolor(color) : filter[item][index]),\\n                                                col_type: \\\"scroll_button\\\",\\n                                                url: $().lazyRule((des, name) => {\\n                                                    let temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                                    temp[name] = des.indexOf(\\\"全部\\\") != -1 ? \\\"\\\" : des;\\n                                                    putVar(\\\"filter\\\", JSON.stringify(temp));\\n                                                    refreshPage(false);\\n                                                    return \\\"hiker://empty\\\"\\n                                                }, filter[item][index], item)\\n                                            })\\n                                        }\\n                                        items.push({ col_type: \\\"blank_block\\\" })\\n                                    }\\n                                    let by = { 默认顺序: \\\"\\\", 最新: \\\"time\\\", 最热: \\\"hits\\\", 评分: \\\"score\\\" };\\n                                    if (appUrl.indexOf('api.php/app') == -1 && appUrl.indexOf('xgapp') == -1) {\\n                                        for (let item in by) {\\n                                            items.push({\\n                                                title: temp[\\\"fby\\\"] == by[item] ? \\\"““””\\\" + item.bold().fontcolor(color) : item,\\n                                                col_type: \\\"scroll_button\\\",\\n                                                url: $().lazyRule((des) => {\\n                                                    let temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                                    temp[\\\"fby\\\"] = des;\\n                                                    putVar(\\\"filter\\\", JSON.stringify(temp));\\n                                                    refreshPage(false);\\n                                                    return \\\"hiker://empty\\\"\\n                                                }, by[item])\\n                                            })\\n                                        }\\n                                    }\\n                                } else {\\n                                    var temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                }\\n                                let url = MY_URL.split(\\\"##\\\")[1];\\n                                for (let item in temp) {\\n                                    url = url.replace(item, temp[item]);\\n                                }\\n                                url = changeUrl(url);\\n                                let rescode = fetch(url, { headers: { \\\"User-Agent\\\": appUa } });\\n                                if (rescode.indexOf('检测中') != -1) {\\n                                    rescode = fetch(url + '&btwaf' + rescode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                                }\\n                                let html = JSON.parse(rescode);\\n                                try {\\n                                    eval(JSON.parse(fetch('hiker://page/applistdata', {})).rule);\\n                                } catch (e) {\\n                                    log(\\\"视频列表出错:\\\" + e.message);\\n                                }\\n                                setResult(items);\\n                            }, appUrl, typeJson[i].type_extend, changeUrl, appUa),\\n                            col_type: 'flex_button'\\n                        })\\n                    }\\n                } catch (e) {\\n                    log('首页分类出错:' + e.message);\\n                }\\n                //获取推荐视频列表\\n                try {\\n                    let url = MY_URL.split('##')[1];\\n                    url = changeUrl(url);\\n                    let html = request(url, { headers: { \\\"User-Agent\\\": appUa } });\\n                    if (html.indexOf('检测中') != -1) {\\n                        html = fetch(url + '&btwaf' + html.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                    }\\n                    html = JSON.parse(html);\\n                    eval(JSON.parse(fetch('hiker://page/appindexdata')).rule);\\n                } catch (e) {\\n                    log('首页推荐出错:' + e.message);\\n                }\\n                setResult(items);\\n            }, changeUrl, appUrl, appUa)\\n\\n            let rule_applistdata = $.toString(function() {\\n                let list = [];\\n                if (appUrl.includes('api.php/app')) {\\n                    list = html.list;\\n                } else if (appUrl.includes('xgapp')) {\\n                    list = html.data;\\n                } else if (appUrl.includes(\\\".vod\\\")) {\\n                    list = html.data.list;\\n                }\\n\\n                for (let i = 0; i < list.length; i++) {\\n                    let { vod_name, vod_pic, vod_id, vod_remarks } = list[i];\\n                    let link = \\\"\\\";\\n                    if (appUrl.includes('api.php/app') || appUrl.includes('xgapp')) {\\n                        link = appUrl + 'video_detail?id=' + vod_id + '&token=';\\n                    } else if (appUrl.includes(\\\".vod\\\")) {\\n                        let date = new Date();\\n                        link = appUrl + '/detail?vod_id=' + vod_id + '&rel_limit=10&key=' + (date.getMonth() + 1) + (date.getDate() < 10 ? '0' + date.getDate() : date.getDate());\\n                    };\\n\\n                    if (/iopenyun/.test(appUrl)) {\\n                        link = appUrl + '/detailID?vod_id=' + vod_id + '&rel_limit=10';\\n                    }\\n\\n                    items.push({\\n                        title: vod_name,\\n                        pic_url: vod_pic + '@Referer=',\\n                        desc: vod_remarks,\\n                        col_type: 'movie_3_marquee',\\n                        url: $(\\\"#immersiveTheme#hiker://empty##\\\" + link).rule(() => {\\n                            try {\\n                                eval(JSON.parse(fetch('hiker://page/appmovlist')).rule);\\n                            } catch (e) {\\n                                log(\\\"影片详情出错:\\\" + e.message);\\n                                setResult([]);\\n                            }\\n                        })\\n                    });\\n                }\\n            })\\n            let rule_appindexdata = $.toString(function() {\\n                let list = [];\\n                if (appUrl.includes('api.php/app')) {\\n                    list = html.list;\\n                } else if (appUrl.includes('xgapp')) {\\n                    list = html.data;\\n                } else if (appUrl.includes(\\\".vod\\\")) {\\n                    list = html.data.list;\\n                }\\n\\n                for (let i = 0; i < list.length; i++) {\\n                    let lists = [],\\n                        typename = \\\"\\\";\\n                    if (appUrl.includes('api.php/app') || appUrl.includes('xgapp')) {\\n                        lists = list[i].vlist;\\n                        typename = list[i].type_name;\\n                    } else if (appUrl.includes(\\\".vod\\\")) {\\n                        lists = list[i].vod_list;\\n                        typename = list[i].vod_type_name;\\n\\n                    }\\n\\n                    items.push({\\n                        title: typename,\\n                        col_type: 'text_1',\\n                        url: \\\"hiker://empty\\\"\\n                    });\\n\\n                    for (let j = 0; j < lists.length; j++) {\\n                        let { vod_name, vod_pic, vod_id, vod_remarks } = lists[j];\\n                        let link = \\\"\\\";\\n                        if (appUrl.includes('api.php/app') || appUrl.includes('xgapp')) {\\n                            link = appUrl + 'video_detail?id=' + vod_id + '&token=&key=';\\n                        } else if (appUrl.includes(\\\".vod\\\")) {\\n                            let date = new Date();\\n                            link = appUrl + '/detail?vod_id=' + vod_id + '&rel_limit=10&key=' + (date.getMonth() + 1) + (date.getDate() < 10 ? '0' + date.getDate() : date.getDate());\\n                        };\\n\\n                        if (/iopenyun/.test(appUrl)) {\\n                            link = appUrl + '/detailID?vod_id=' + vod_id + '&rel_limit=10';\\n                        }\\n\\n                        items.push({\\n                            title: vod_name,\\n                            pic_url: vod_pic + '@Referer=',\\n                            desc: vod_remarks,\\n                            col_type: 'movie_3_marquee',\\n                            url: $(\\\"#immersiveTheme#hiker://empty##\\\" + link).rule(() => {\\n                                try {\\n                                    eval(JSON.parse(fetch('hiker://page/appmovlist')).rule);\\n                                } catch (e) {\\n                                    log(\\\"影片详情出错:\\\" + e.message);\\n                                    setResult([]);\\n                                }\\n                            })\\n                        });\\n                    }\\n                }\\n            })\\n            let rule_appmovlist = $.toString(function(changeUrl, appUrl, appUa) {\\n                addListener(\\\"onClose\\\", $.toString((url) => {\\n                    clearVar('appnow');\\n                    clearVar(url);\\n                    clearMyVar('jiexi');\\n                }, MY_URL));\\n                let items = [],\\n                    html = getVar(MY_URL, \\\"\\\"),\\n                    data = {};\\n                if (html == \\\"\\\") {\\n                    let url = MY_URL.split(\\\"##\\\")[1];\\n                    url = changeUrl(url);\\n                    html = fetch(url, { headers: { \\\"User-Agent\\\": appUa } });\\n                    putVar(MY_URL, html);\\n                }\\n                if (appUrl.includes(\\\"xgapp\\\")) {\\n                    data = JSON.parse(html).data.vod_info;\\n                } else {\\n                    data = JSON.parse(html).data;\\n                }\\n\\n                //简介\\n                let { vod_name, vod_pic, vod_content, vod_class, vod_remarks, vod_director, vod_actor, vod_area, vod_lang, vod_year } = data;\\n                items.push({\\n                    title: vod_name + '\\\\n' + vod_class + \\\",\\\" + vod_remarks + \\\"\\\\n\\\" + vod_area + \\\"/\\\" + vod_lang + \\\"/\\\" + vod_year,\\n                    desc: \\\"导演:\\\" + vod_director + \\\"\\\\n主演:\\\" + vod_actor,\\n                    pic_url: vod_pic,\\n                    url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/Route.js');Route.setParse();setResult(d);\\\",\\n                    col_type: 'movie_1_vertical_pic_blur'\\n                }, {\\n                    title: '剧情简介:',\\n                    desc: vod_content,\\n                    url: $('hiker://empty#noRecordHistory#').rule((desc) => {\\n                        setResult([{\\n                            title: desc,\\n                            col_type: 'long_text'\\n                        }]);\\n                    }, vod_content),\\n                    col_type: 'text_1',\\n                    extra: { lineVisible: false }\\n                });\\n                //断插\\n                /*let dnen = getMyVar(\\\"dnen\\\", \\\"0\\\");\\n                items.push({\\n                    title: '断插:' + (dnen == '1' ? '““✅””' : '❎'),\\n                    url: $('#noLoading#').lazyRule((dnen) => {\\n                        if (dnen == '1') {\\n                            putMyVar(\\\"dnen\\\", \\\"0\\\");\\n                            refreshPage(false);\\n                            return 'toast://已禁用断插调用!';\\n                        } else {\\n                            putMyVar(\\\"dnen\\\", \\\"1\\\");\\n                            refreshPage(false);\\n                            return 'toast://已开启断插调用!'\\n                        }\\n                    }, dnen),\\n                    col_type: 'text_2'\\n                });\\n                items.push({\\n                    title: '线路配置',\\n                    url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/Route.js');Route.setParse();setResult(d);\\\",\\n                    //url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\\\",\\n                    col_type: 'text_2'\\n                });*/\\n                //线路列表\\n\\n                let conts = [],\\n                    tabs = [];\\n                if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\")) {\\n                    conts = data.vod_url_with_player;\\n                } else {\\n                    conts = data.vod_play_list;\\n                }\\n                if (conts.length < 1) {\\n                    conts = data.vod_play_url.split('$$$');\\n                    tabs = data.vod_play_from.split('$$$');\\n                }\\n                //线路名称\\n                let ptab = \\\"\\\",\\n                    ptabname = \\\"\\\";\\n                if (getVar(\\\"appnow\\\", \\\"\\\") == \\\"\\\") { putVar(\\\"appnow\\\", \\\"0\\\") }\\n                for (let i = 0; i < conts.length; i++) {\\n                    let sptab = \\\"\\\",\\n                        tabname = \\\"\\\";\\n                    if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\")) {\\n                        sptab = conts[i].code ? conts[i].code : tabs[i];\\n                        tabname = conts[i].name || sptab;\\n                    } else {\\n                        sptab = conts[i].from ? conts[i].from : tabs[i];\\n                        tabname = conts[i].player_info ? conts[i].player_info.show : sptab;\\n                    }\\n                    items.push({\\n                        title: getVar(\\\"appnow\\\") == i ? \\\"““””\\\" + tabname.bold().fontcolor(\\\"#FA7298\\\") : tabname,\\n                        url: \\\"hiker://empty#noLoading#@lazyRule=.js:putVar('appnow','\\\" + i + \\\"');refreshPage(false);'toast://切换成功!'\\\",\\n                        col_type: 'scroll_button'\\n                    })\\n                    if (getVar(\\\"appnow\\\") == i) {\\n                        ptab = sptab;\\n                        ptabname = tabname;\\n                    }\\n                }\\n                items.push({\\n                    title: \\\"““↓↑””\\\" + ptabname + '-' + ptab,\\n                    url: \\\"hiker://empty@lazyRule=.js:putVar('appmappsort', getVar('appmappsort','1')=='1'?'0':'1');refreshPage(false);'toast://切换成功!'\\\",\\n                    col_type: 'text_1',\\n                    extra: { lineVisible: false }\\n                });\\n                //链接列表\\n                let list = [],\\n                    index = getVar(\\\"appnow\\\");\\n                if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\")) {\\n                    list = conts[index].url.split(\\\"#\\\");\\n                } else {\\n                    list = conts[index].urls ? conts[index].urls : conts[index].url.split(\\\"#\\\");\\n                };\\n                if (getVar('appmappsort', '1') == '0') {\\n                    list.reverse();\\n                }\\n                //解析接口\\n                let jiek = [];\\n                try {\\n                    if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\")) {\\n                        jiek.push(conts[index].parse_api || \\\"\\\");\\n                    } else {\\n                        jiek = (conts[index].player_info.parse2 || \\\"\\\").split(\\\",\\\").concat((conts[index].player_info.parse || \\\"\\\").split(\\\",\\\"));\\n                        jiek = jiek.map(cur => cur.replace(\\\"..\\\", \\\".\\\").replace('jsonbs', ''));\\n                    }\\n                } catch (e) {}\\n                jiek = Array.from(new Set(jiek.filter(cur => !!cur)));\\n                jiek.push('断插解析');\\n                \\n                    items.push({\\n                        title:'当前解析:' + getMyVar('jiexi',jiek[0]),\\n                        url: $(jiek,1).select(()=>{\\n                            if(input == '断插解析'){\\n                                putMyVar('dnen','1');\\n                            }\\n                            putMyVar('jiexi', input);\\n                            refreshPage(false);\\n                            return 'toast://已更改解析'\\n                        }),\\n                        col_type: 'text_1',\\n                        extra: { lineVisible: false }\\n                    })\\n                \\n                let jxUrl = getMyVar('jiexi', jiek[0]) || \\\"\\\";\\n                /*if (jxUrl.substring(0, 2) == '\\\\/\\\\/') {\\n                    jxUrl = 'https:' + jxUrl;\\n                }*/\\n                //打印接口\\n                //log('\\\\n当前线路:' + ptab + '\\\\n解析列表:' + $.stringify(jiek));\\n                //视频列表\\n                for (let j = 0; j < list.length; j++) {\\n                    let vlink = \\\"\\\",\\n                        title = \\\"\\\";\\n                    if (list[j].url) {\\n                        vlink = list[j].url.replace(/#456#/g, 'http').replace(/#123#/g, '.').replace(/#789#/g, ':');\\n                        title = list[j].name;\\n                    } else {\\n                        vlink = list[j].split(\\\"$\\\")[1];\\n                        title = list[j].split(\\\"$\\\")[0];\\n                    }\\n                    //title = title.match(/(第|\\\\d|-)*(集|话|期)/g) ? title.replace(/第|集|话|期/g, '') : title;\\n                    items.push({\\n                        title: title,\\n                        col_type: \\\"text_4\\\",\\n                        url: eval(JSON.parse(fetch(\\\"hiker://page/lazyParse\\\")).rule)\\n                    });\\n                }\\n                setResult(items);\\n            }, changeUrl, appUrl, appUa);\\n\\n            let lazyParse = $.toString(function() {\\n                let enDn = getMyVar(\\\"dnen\\\", \\\"0\\\"),\\n                    test1 = vlink.search(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) != -1,\\n                    test2 = vlink.search(/LT\\\\-|RongXingVR\\\\-|renrenmi\\\\-|xfy\\\\-|suoyo\\\\.cc|fen\\\\.laodi|xueren\\\\-/) != -1;\\n                if ((test1 || test2) && enDn == '1') {\\n                    return $('hiker://empty').lazyRule((vlink) => {\\n                        log(\\\"\\\\n调用断插解析,视频链接:\\\" + vlink);\\n                        eval(\\\"let config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                        eval(fetch(config.cj));\\n                        return aytmParse(vlink);\\n                    }, vlink)\\n                } else {\\n                    return $('hiker://empty').lazyRule((ptab, vlink, jxUrl, appUrl) => {\\n                        log(\\\"\\\\n使用默认解析,视频链接:\\\" + vlink);\\n                        //视频链接处理\\n                        function changeVideoUrl(url) {\\n                            //改变特定地址的Referer\\n                            if (url.includes(\\\"wkfile\\\")) {\\n                                url = url + ';{Referer@https://fantuan.wkfile.com/}';\\n                            } else if (ptab == 'bilibili') {\\n                                url = url + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n                            } else if (ptab == 'mgtv') {\\n                                url = url + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                            } else if (url.includes(\\\"ojbk\\\")) {\\n                                url = url + ';{Referer@https://bak.ojbkjx.com/}';\\n                            }\\n                            //返回视频链接\\n                            if (!url.includes(\\\"http\\\")) {\\n                                throw new Error(\\\"链接不是以http开头(可能加密了)\\\");\\n                            } else {\\n                                if (/\\\\.m3u8/.test(url)) {\\n                                    return cacheM3u8(url);\\n                                } else {\\n                                    return url + '#isVideo=true#';\\n                                }\\n                            }\\n                        }\\n                        //动态解析代码开始\\n                        try {\\n                            //处理视频样式的资源链接\\n                            if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos|netease\\\\.com/.test(vlink) && /http/.test(vlink) && !/\\\\.html/.test(vlink)) {\\n                                if (!/fen\\\\.laodi|suoyo\\\\.cc/.test(vlink)) {\\n                                    log(\\\"检测到资源地址可能是视频链接\\\");\\n                                    return changeVideoUrl(vlink);\\n                                }\\n                            }\\n                            //无可用解析直接报错\\n                            if (!jxUrl || /x\\\\-n\\\\.cc/.test(jxUrl)) {\\n                                throw new Error(\\\"无可用解析\\\");\\n                            }\\n                            //使用解析\\n                            log(\\\"使用解析:\\\" + jxUrl);\\n                            let link = jxUrl + vlink,\\n                                scode = JSON.parse(fetch(link, {\\n                                    headers: {\\n                                        \\\"User-Agent\\\": \\\"Dart/2.13 (dart:io)\\\"\\n                                    },\\n                                    redirect: false,\\n                                    withStatusCode: true\\n                                }));\\n                            //返回重定向的链接 \\n                            if (scode.statusCode == '302' || scode.statusCode == '301') {\\n                                let redurl = scode.headers.location[0].replace(/\\\\\\\\/g, '');\\n                                log('重定向:' + redurl);\\n                                if (!/(url|vid|v)\\\\=/.test(redurl)) {\\n                                    return changeVideoUrl(redurl);\\n                                }\\n                                /*else if (/\\\\=http/.test(redurl) && /\\\\.m3u8|\\\\.mp4|\\\\.flv/.test(redurl)) {\\n                                    purl = redurl.substring(redurl.indexOf('=http') + 1);\\n                                }*/\\n                                scode.body = fetch(redurl);\\n                            }\\n                            //开始嗅探\\n                            let html = scode.body;\\n                            if (/404 Not Found|备案后可继续访问/.test(html)) {\\n                                throw new Error(\\\"404了\\\");\\n                            } else if (/\\\\<body/.test(html)) {\\n                                return $([\\\"开始视频嗅探\\\", \\\"打开解析网页\\\", \\\"使用内置解析\\\"], 1, \\\"检测到解析为网页数据\\\").select((link, ptab, vlink, appUrl) => {\\n                                    if (input == \\\"开始视频嗅探\\\") {\\n                                        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                                        return x5rule(link, link);\\n                                    } else if (input == \\\"打开解析网页\\\") {\\n                                        return \\\"web://\\\" + link;\\n                                    } else if (input == \\\"使用内置解析\\\") {\\n                                        log(\\\"使用内置解析\\\");\\n                                        showLoading(\\\"正在进行解析...\\\");\\n                                        return eval(JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule);\\n                                    }\\n                                }, link, ptab, vlink, appUrl);\\n                            } else {\\n                                //log('尝试从json数据获取');\\n                                try {\\n                                    let purl = JSON.parse(html).url;\\n                                    return changeVideoUrl(purl);\\n                                } catch (e) {\\n                                    /*let purl = html.match(/[\\\\'\\\\\\\"]url[\\\\'\\\\\\\"]:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1].replace(/\\\\\\\\/g, '');\\n                                    return changeVideoUrl(purl);*/\\n                                    throw new Error('解析可能加密了');\\n                                }\\n                            }\\n                        } catch (e) {\\n                            log('\\\\n未能成功获取视频地址:' + e.message + \\\"\\\\n尝试使用规则内置解析\\\");\\n                            return eval(JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule);\\n                        }\\n                        //动态解析代码结束\\n                    }, ptab, vlink, jxUrl, appUrl);\\n                }\\n            });\\n            pages.push({\\n                name: \\\"APP分类列表\\\",\\n                path: \\\"applistdata\\\",\\n                rule: rule_applistdata\\n            }, {\\n                name: \\\"APP首页列表\\\",\\n                path: \\\"appindexdata\\\",\\n                rule: rule_appindexdata\\n            }, {\\n                name: \\\"APP选集\\\",\\n                path: \\\"appmovlist\\\",\\n                rule: rule_appmovlist\\n            }, {\\n                name: \\\"视频解析\\\",\\n                path: \\\"lazyParse\\\",\\n                rule: lazyParse\\n            });\\n        }\\n\\n        let myParse = JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule;\\n        pages.push({\\n            name: \\\"内置解析\\\",\\n            path: \\\"myParse\\\",\\n            rule: myParse\\n        })\\n\\n        searchFind = \\\"js:\\\" + $.toString(function(changeUrl, apptype, appUrl, appUa) {\\n            let items = [],\\n                search_url = changeUrl(MY_URL.split('##')[1]),\\n                bhtml = \\\"\\\";\\n\\n            bhtml = fetch(search_url, { headers: { \\\"User-Agent\\\": appUa } });\\n\\n            try {\\n                bhtml = bhtml.startsWith('\\\\r\\\\n') ? bhtml.replace('\\\\r\\\\n', '') : bhtml;\\n            } catch (e) {}\\n\\n            if (/btwaf/.test(bhtml)) {\\n                bhtml = fetch(search_url + '&btwaf' + bhtml.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n            }\\n\\n            let html = JSON.parse(bhtml),\\n                list = [];\\n            if (/神马|TV/.test(apptype)) {\\n                list = html.data;\\n            } else {\\n                if (appUrl.includes('api.php/app')) {\\n                    list = html.list;\\n                } else if (appUrl.includes('xgapp')) {\\n                    list = html.data;\\n                } else {\\n                    list = html.data.list;\\n                }\\n            }\\n\\n            for (let i = 0; i < list.length; i++) {\\n                if (/神马|TV/.test(apptype)) {\\n                    var { title, pic, nextlink: url, state: desc } = list[i];\\n                } else {\\n                    if (appUrl.includes('api.php/app') || appUrl.includes('xgapp')) {\\n                        var { vod_name: title, vod_pic: pic, vod_remarks: desc } = list[i],\\n                            url = appUrl + 'video_detail?id=' + list[i].vod_id + '&token=';\\n                    } else {\\n                        var { vod_name: title, vod_pic: pic, vod_remarks: desc } = list[i];\\n                        if (/iopenyun/.test(appUrl)) {\\n                            var url = appUrl + '/detailID?vod_id=' + list[i].vod_id + '&token=';\\n                        } else {\\n                            var url = appUrl + '/detail?vod_id=' + list[i].vod_id + '&token=';\\n                        }\\n                    }\\n                }\\n\\n                items.push({\\n                    title: title,\\n                    pic_url: pic + '@Referer=',\\n                    desc: desc,\\n                    col_type: 'movie_1_vertical_pic',\\n                    url: $(\\\"#immersiveTheme#hiker://empty##\\\" + url).rule((apptype) => {\\n                        if (/神马|TV/.test(apptype)) {\\n                            eval(JSON.parse(fetch('hiker://page/tvmovlist')).rule);\\n                        } else {\\n                            eval(JSON.parse(fetch('hiker://page/appmovlist')).rule);\\n                        }\\n                    }, apptype)\\n                });\\n            }\\n\\n            setResult(items);\\n        }, changeUrl, apptype, appUrl, appUa)\\n\\n        last_chapter_rule = \\\"js:\\\" + $.toString(function(apptype, appUrl, appUa) {\\n            let chp = [];\\n            try {\\n                let conts = [],\\n                    html = JSON.parse(fetch(MY_URL.split(\\\"##\\\")[1], { headers: { \\\"User-Agent\\\": appUa } }));\\n                if (/神马|TV/.test(apptype)) {\\n                    conts = Object.keys(html.videolist);\\n                } else if (appUrl.includes(\\\"api.php/app\\\")) {\\n                    conts = html.data.vod_url_with_player;\\n                    if (conts.length < 1) {\\n                        conts = html.data.vod_play_url.split('$$$');\\n                    }\\n                } else if (appUrl.includes(\\\"xgapp\\\")) {\\n                    conts = html.data.vod_info.vod_url_with_player;\\n                    if (conts.length < 1) {\\n                        conts = html.data.vod_info.vod_play_url.split('$$$');\\n                    }\\n                } else {\\n                    conts = html.data.vod_play_list;\\n                    if (conts.length < 1) {\\n                        conts = html.data.vod_play_url.split('$$$');\\n                    }\\n                }\\n\\n                let list = [];\\n                for (let i = 0; i < conts.length; i++) {\\n                    if (/神马|TV/.test(apptype)) {\\n                        list = html.videolist[conts[i]];\\n                    } else if (conts[i].urls) {\\n                        list = conts[i].urls;\\n                    } else if (conts[i].url) {\\n                        list = conts[i].url.split(\\\"#\\\");\\n                    } else {\\n                        list = conts[i].split(\\\"#\\\");\\n                    }\\n                    chp.push(list.length);\\n                }\\n            } catch (e) {}\\n            setResult('更新至:' + (Math.max.apply(Math, chp)));\\n        }, apptype, appUrl, appUa);\\n\\n        rules.push({\\n            title: apptitle,\\n            author: getMyVar('remoteUrl'),\\n            type: apptype,\\n            url: home_url,\\n            find_rule: find_rule,\\n            search_url: search_url,\\n            searchFind: searchFind,\\n            pages: JSON.stringify(pages),\\n            last_chapter_rule: last_chapter_rule,\\n            icon: appicon\\n        });\\n    }\\n}\\n/*$.exports = {\\n    rules: rules,\\n    types: types\\n}*/\\n$.exports = rules;\"},{\"col_type\":\"movie_3\",\"name\":\"内置数据\",\"path\":\"ResCode\",\"rule\":\"{\\n    \\\"data\\\":[\\n        {\\n        \\\"title\\\":\\\"优质\\\",\\n        \\\"list\\\":[\\n            {\\n            \\\"title\\\":\\\"1080p\\\",\\n            \\\"url\\\":\\\"https://1080p.one/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/1080p.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"1231D\\\",\\n            \\\"url\\\":\\\"https://vue.app.yunboys.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/1231D.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"300看世界\\\",\\n            \\\"url\\\":\\\"https://300ys.xyz/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/300看世界.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"4K影院\\\",\\n            \\\"url\\\":\\\"http://1api.4kdytv.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/4K影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"80K影视\\\",\\n            \\\"url\\\":\\\"https://1080p.tv/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/80K影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"CJT影院\\\",\\n            \\\"url\\\":\\\"https://www.cjt521.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/CJT影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"DC影视\\\",\\n            \\\"url\\\":\\\"http://chaorenbb.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/DC影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"F7高清\\\",\\n            \\\"url\\\":\\\"http://bc.haokanju1.cc/lvdou_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/F7高清.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"HG影视\\\",\\n            \\\"url\\\":\\\"http://hgyx.vip/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/HG影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"l0l影院\\\",\\n            \\\"url\\\":\\\"https://l0l.tv/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/l0l影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"爱看美剧\\\",\\n            \\\"url\\\":\\\"https://www.uumjw.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/爱看美剧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"爱酷影视\\\",\\n            \\\"url\\\":\\\"https://www.zhanlangbu.com/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/爱酷影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"菜鸟追剧\\\",\\n            \\\"url\\\":\\\"http://81.71.18.95:5555/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/菜鸟追剧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"白嫖影视\\\",\\n            \\\"url\\\":\\\"http://zgjxdtg.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/白嫖影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"爱看影院\\\",\\n            \\\"url\\\":\\\"http://www.a91.cm/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/通用图标.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"初心影视\\\",\\n            \\\"url\\\":\\\"https://www.18mv.club/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/初心影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"独播社\\\",\\n            \\\"url\\\":\\\"http://35ys.cc/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/独播社.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"叮当影视\\\",\\n            \\\"url\\\":\\\"https://tv.0573wl.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/叮当影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"段友影视\\\",\\n            \\\"url\\\":\\\"http://121.204.249.135:4433/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/段友影视3.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"段友影视\\\",\\n            \\\"url\\\":\\\"https://shangjihuoke.com/api.php/tv.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/段友影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"饭后电影\\\",\\n            \\\"url\\\":\\\"http://summ.vip/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/饭后电影.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"飞捷影视\\\",\\n            \\\"url\\\":\\\"https://www.fj6080.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/飞捷影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"疯狂看\\\",\\n            \\\"url\\\":\\\"http://app.fkkdy.vip/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/疯狂看电影.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"粉象视界\\\",\\n            \\\"url\\\":\\\"http://42.157.129.15:34444/lvdou_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/粉象视界.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"汇聚库TV\\\",\\n            \\\"url\\\":\\\"https://www.zzclove666.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/汇聚库TV.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"虎猫视频\\\",\\n            \\\"url\\\":\\\"https://humaosp.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/虎猫视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"可米影视\\\",\\n            \\\"url\\\":\\\"http://www.kmys.vip/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/可米影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"康耀影视\\\",\\n            \\\"url\\\":\\\"http://app.ybyyds.cn/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/康耀影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"绿箭影视\\\",\\n            \\\"url\\\":\\\"http://www.69ty.cc/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/绿箭影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"懒猫电影\\\",\\n            \\\"url\\\":\\\"http://www.esellauto.com/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/懒猫电影.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"蜜蜂影视\\\",\\n            \\\"url\\\":\\\"http://app.f8tp.com/lvdou_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/蜜蜂影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"麻瓜视频\\\",\\n            \\\"url\\\":\\\"http://aliyun.k8aa.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/麻瓜视频1.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"美剧虫\\\",\\n            \\\"url\\\":\\\"https://meijuchong.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/美剧虫.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"木子电影\\\",\\n            \\\"url\\\":\\\"http://www.muzidy.top/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/木子电影.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"奈非迷\\\",\\n            \\\"url\\\":\\\"https://app.netflixmi.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/奈非迷影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"南府影视\\\",\\n            \\\"url\\\":\\\"http://iapp.nfuxs.club/dnmb.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/南府影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"暖光影视\\\",\\n            \\\"url\\\":\\\"https://app.bl210.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/暖光影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"念念影视\\\",\\n            \\\"url\\\":\\\"https://998.yuanmajs.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/念念影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"柠柚影视\\\",\\n            \\\"url\\\":\\\"http://nu.e4tv.cn/lvdou_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/柠柚影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"奇怪视频\\\",\\n            \\\"url\\\":\\\"https://giguai.net/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/通用图标.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"七零动漫\\\",\\n            \\\"url\\\":\\\"https://cf.70yu.cn/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/七零动漫.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"瑞丰资源\\\",\\n            \\\"url\\\":\\\"https://tv.yjhan.com:4433/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/瑞丰.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"闪光影视\\\",\\n            \\\"url\\\":\\\"http://101.35.128.192/mubai_api.php/m2.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/闪光影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"思乐影视\\\",\\n            \\\"url\\\":\\\"https://www.huandian.top/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/思乐影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"天诚影视\\\",\\n            \\\"url\\\":\\\"http://tcspvip.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/天诚影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"天天影视\\\",\\n            \\\"url\\\":\\\"https://app.daishusc.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/天天影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"温妮影视\\\",\\n            \\\"url\\\":\\\"https://www.wenniys.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/温妮影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"小白动漫\\\",\\n            \\\"url\\\":\\\"http://121.62.60.222:20222/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/小白动漫.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"星辰视频\\\",\\n            \\\"url\\\":\\\"https://m.hj0999.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/星辰视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"小极影视\\\",\\n            \\\"url\\\":\\\"http://app.8d8q.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/小极影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"心鸾影视\\\",\\n            \\\"url\\\":\\\"http://zhiyutv.xyz/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/心鸾影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"雪人影视\\\",\\n            \\\"url\\\":\\\"https://zy.qd234.cn/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/雪人影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"益达影院\\\",\\n            \\\"url\\\":\\\"http://luobu.yss6080.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/益达影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"雨果影视\\\",\\n            \\\"url\\\":\\\"http://2.yhys63.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/雨果影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"影视大全\\\",\\n            \\\"url\\\":\\\"http://app.269w.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/影视大全.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"月色影视\\\",\\n            \\\"url\\\":\\\"http://69ty.cc/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/月色影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"优视影视\\\",\\n            \\\"url\\\":\\\"http://cc.ysys.asia/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/优视影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"影阅阁\\\",\\n            \\\"url\\\":\\\"http://221.236.18.12:665/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/影阅阁.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"追剧吧\\\",\\n            \\\"url\\\":\\\"http://zhuiju8.vip/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/追剧吧影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            }\\n        ]\\n        },\\n        {\\n        \\\"title\\\":\\\"普通\\\",\\n        \\\"list\\\":[\\n            {\\n            \\\"title\\\":\\\"51视频\\\",\\n            \\\"url\\\":\\\"http://51shipin.cc/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/51视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"80影视\\\",\\n            \\\"url\\\":\\\"http://www.ccc8.net/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/80影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"JDODO\\\",\\n            \\\"url\\\":\\\"https://appys.jdodo.xyz/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/JDODO影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"QC影视\\\",\\n            \\\"url\\\":\\\"https://www.qcsvip.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/QC影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"U5影视\\\",\\n            \\\"url\\\":\\\"https://appx.uy07.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/U5影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"XG影视\\\",\\n            \\\"url\\\":\\\"http://cms.xggm.top/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/XG影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"yoyo\\\",\\n            \\\"url\\\":\\\"http://jx.wnvod.net/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/yoyo影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"阿里影视\\\",\\n            \\\"url\\\":\\\"http://aliys.cn:90/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/阿里影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"嗷呜影院\\\",\\n            \\\"url\\\":\\\"http://aowu.pro/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/嗷呜影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"爱影视\\\",\\n            \\\"url\\\":\\\"https://www.hzlff.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/爱影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"爱追剧\\\",\\n            \\\"url\\\":\\\"http://81.71.18.95:520/lvdou_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/爱追剧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"艾特影视\\\",\\n            \\\"url\\\":\\\"https://www.aitee.cc/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/艾特影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"白菜追剧\\\",\\n            \\\"url\\\":\\\"http://lbapp.huimaojia.com:30119/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/白菜追剧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"比邻影视\\\",\\n            \\\"url\\\":\\\"http://0hzy.cn:9990/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/比邻影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"百讯视频\\\",\\n            \\\"url\\\":\\\"https://z.iopenyun.com:99/app_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/百讯视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"菜鸟动漫\\\",\\n            \\\"url\\\":\\\"http://taikong.huangguay.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/菜鸟动漫.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"大头影视\\\",\\n            \\\"url\\\":\\\"http://dy.idsao.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/大头影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"段友影视\\\",\\n            \\\"url\\\":\\\"http://js.66app.me/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/段友影视2.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"豆渣影视\\\",\\n            \\\"url\\\":\\\"http://douzhayss.cc/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/豆渣影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"二九影视\\\",\\n            \\\"url\\\":\\\"https://app.19kp.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/二九影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"风启影视\\\",\\n            \\\"url\\\":\\\"http://ysw.ee/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/风启影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"辉哥影视\\\",\\n            \\\"url\\\":\\\"https://app.y.hgyule8.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/辉哥影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"黄河影视\\\",\\n            \\\"url\\\":\\\"http://i.ledu8.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/黄河影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"火星人\\\",\\n            \\\"url\\\":\\\"https://www.huoxing9.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/火星人影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"晗先森\\\",\\n            \\\"url\\\":\\\"https://hantv.top/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/晗先森影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"盒子影院\\\",\\n            \\\"url\\\":\\\"http://i.nihaohezi.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/盒子影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"筋斗云\\\",\\n            \\\"url\\\":\\\"https://tv.jindcloud.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/筋斗云影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"极光影院\\\",\\n            \\\"url\\\":\\\"http://app.winxz.cc/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/极光影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"聚合视频\\\",\\n            \\\"url\\\":\\\"https://app.jhystv.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/聚合视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"久久影视\\\",\\n            \\\"url\\\":\\\"http://s9t9.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/久久影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"剧迷视频\\\",\\n            \\\"url\\\":\\\"http://pan.hzafw.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/剧迷视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"橘子影视\\\",\\n            \\\"url\\\":\\\"http://jz.juzidy.vip/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/橘子影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"快播吧\\\",\\n            \\\"url\\\":\\\"http://app.hd8.pw/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/快播吧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"看剧吧\\\",\\n            \\\"url\\\":\\\"http://app.ishen520.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/看剧吧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"看看剧\\\",\\n            \\\"url\\\":\\\"https://www.kankanju.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/看看剧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"酷酷影视\\\",\\n            \\\"url\\\":\\\"http://www.ccc8.net/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/酷酷影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"可米影视\\\",\\n            \\\"url\\\":\\\"http://sj.kmys.vip/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/可米影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"绿豆视频\\\",\\n            \\\"url\\\":\\\"https://v.lvdoui.cn/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/绿豆影音.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"蓝光视频\\\",\\n            \\\"url\\\":\\\"http://vip.91iqiyi.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/蓝光视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"林谷影视\\\",\\n            \\\"url\\\":\\\"http://ys.linguyy.xyz/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/林谷影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"冷视TV\\\",\\n            \\\"url\\\":\\\"https://len.tv/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/冷视TV.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"美剧范\\\",\\n            \\\"url\\\":\\\"http://ttzmz.net/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/美剧范.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"喵乐影视\\\",\\n            \\\"url\\\":\\\"http://miaoleys.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/喵乐影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"名视影\\\",\\n            \\\"url\\\":\\\"http://app.qqccv.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/名视影.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"麻子追剧\\\",\\n            \\\"url\\\":\\\"http://b.2maz.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/麻子追剧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"奈飞中文\\\",\\n            \\\"url\\\":\\\"https://www.naifei.org/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/奈飞中文.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"苹果影视\\\",\\n            \\\"url\\\":\\\"https://apple678.xyz/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/苹果影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"皮皮动漫\\\",\\n            \\\"url\\\":\\\"http://dm.muying.me/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/皮皮动漫.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"奇趣影视\\\",\\n            \\\"url\\\":\\\"https://app.qiqu.me/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/奇趣影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"任性看\\\",\\n            \\\"url\\\":\\\"https://renxingkan.net/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/任性看.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"思奇影视\\\",\\n            \\\"url\\\":\\\"http://app.siqitv.vip/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/思奇影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"三日影院\\\",\\n            \\\"url\\\":\\\"https://www.3ri.net/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/三日影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"神马影视\\\",\\n            \\\"url\\\":\\\"http://xs.78tv.cc/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/神马影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"视听星球\\\",\\n            \\\"url\\\":\\\"http://zjyapijzys.shynwlkj.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/视听星球.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"土豆TV\\\",\\n            \\\"url\\\":\\\"http://xiuxian.qd234.cn/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/土豆TV.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"淘剧社\\\",\\n            \\\"url\\\":\\\"https://app.shuhai99.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/淘剧社.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"天空影视\\\",\\n            \\\"url\\\":\\\"https://tv.51aizn.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/天空影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"天天视频\\\",\\n            \\\"url\\\":\\\"http://app.qianju.cc/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/天天视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"兔子窝\\\",\\n            \\\"url\\\":\\\"http://cj.huimaojia.com:12345/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/兔子窝.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"我爱跟剧\\\",\\n            \\\"url\\\":\\\"https://www.genmov.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/我爱跟剧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"吾爱影视\\\",\\n            \\\"url\\\":\\\"http://app.5lp.net/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/吾爱影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"吾爱影视\\\",\\n            \\\"url\\\":\\\"http://52ysw.xyz/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/吾爱影视1.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"吻痕视频\\\",\\n            \\\"url\\\":\\\"http://www.kissone.cn/ruifenglb_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/吻痕视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"蜗牛动漫\\\",\\n            \\\"url\\\":\\\"http://woniudm.woniu.cyou:20000/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/蜗牛动漫.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"寻常影视\\\",\\n            \\\"url\\\":\\\"http://tv.91ymz.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/寻常影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"熊猫动漫\\\",\\n            \\\"url\\\":\\\"http://dongman.k8aa.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/熊猫动漫.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"熊猫视频\\\",\\n            \\\"url\\\":\\\"http://anegh.com/lvdou_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/熊猫视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"玺娜影视\\\",\\n            \\\"url\\\":\\\"https://pp.wxina.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/玺娜影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"小蜻蜓\\\",\\n            \\\"url\\\":\\\"http://3ketv.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/小蜻蜓视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"星球视频\\\",\\n            \\\"url\\\":\\\"http://119.29.121.48:8088/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/星球视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"玺心影视\\\",\\n            \\\"url\\\":\\\"https://tv.arbd.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/玺心影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"新享影视\\\",\\n            \\\"url\\\":\\\"https://app.jiagan.cx/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/新享影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"星影相随\\\",\\n            \\\"url\\\":\\\"http://app.rootthree.top/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/星影相随.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"小易影视\\\",\\n            \\\"url\\\":\\\"http://xy.irop.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/小易影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"云城影院\\\",\\n            \\\"url\\\":\\\"https://ayyf.cn/mubai_api.php/m2.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/云城影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"月儿影视\\\",\\n            \\\"url\\\":\\\"https://yue52.xyz/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/通用图标.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"樱花动漫\\\",\\n            \\\"url\\\":\\\"https://www.dmwu.cc/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/樱花动漫.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"月亮影视\\\",\\n            \\\"url\\\":\\\"http://ys.13tv.top/acj_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/月亮影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"影视大全\\\",\\n            \\\"url\\\":\\\"https://xc.xixi2yy.xyz/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/影视大全HD.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"影视热剧\\\",\\n            \\\"url\\\":\\\"http://lb.26ys.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/影视热剧.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"渔渔影视\\\",\\n            \\\"url\\\":\\\"http://luobo.yugenye.site/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/渔渔影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"优优影院\\\",\\n            \\\"url\\\":\\\"http://xin.jjsvip.cc/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/优优影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"柚子视频\\\",\\n            \\\"url\\\":\\\"http://yz.26ys.cn/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/柚子视频.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"鱼仔影视\\\",\\n            \\\"url\\\":\\\"http://yuzaio.top/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/鱼仔影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"追剧达人\\\",\\n            \\\"url\\\":\\\"https://www.zhuijudaren.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/追剧达人.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"追剧猫\\\",\\n            \\\"url\\\":\\\"http://tv.kmtvb.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/追剧猫1.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"侦探影视\\\",\\n            \\\"url\\\":\\\"http://ys.huangguay.com/mogai_api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/侦探影视.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"猪猪影院\\\",\\n            \\\"url\\\":\\\"http://app.2zdyy.com/api.php/v1.vod\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/猪猪影院.png\\\",\\n            \\\"murl\\\":\\\"q:APP影视\\\"\\n            }\\n        ]\\n        },\\n        {\\n        \\\"title\\\":\\\"IPTV\\\",\\n        \\\"list\\\":[\\n            {\\n            \\\"title\\\":\\\"2号币\\\",\\n            \\\"url\\\":\\\"http://phoebe.cf/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/2号币影院.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"CV影视\\\",\\n            \\\"url\\\":\\\"http://www.cccvvv.top/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/CV影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"HG影视\\\",\\n            \\\"url\\\":\\\"http://api.hgyx.vip/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/HG影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"傲视影院\\\",\\n            \\\"url\\\":\\\"http://j.zjj.life:88/mv/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/傲视影院.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"爱西西TV\\\",\\n            \\\"url\\\":\\\"http://tv.aixixi.vip/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/爱西西TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"白熊影院\\\",\\n            \\\"url\\\":\\\"http://qt.yhzy.xyz/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/白熊影院.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"刺桐影视\\\",\\n            \\\"url\\\":\\\"http://tv.cttv.vip/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/刺桐影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"尘梓TV\\\",\\n            \\\"url\\\":\\\"http://cztv.vip:83/api.php/chenziystv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/尘梓TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"嘀哩嘀哩\\\",\\n            \\\"url\\\":\\\"https://api.diliktv.xyz/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/嘀哩嘀哩TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"动力影视\\\",\\n            \\\"url\\\":\\\"http://www.love9989.com/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/动力影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"大师兄\\\",\\n            \\\"url\\\":\\\"http://dsxtv.tv.ci/api.php/dsx/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/大师兄影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"二货影视\\\",\\n            \\\"url\\\":\\\"http://d.zjj.life:88/mv/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/二货影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"非凡影院\\\",\\n            \\\"url\\\":\\\"http://cms.feifan12.xyz/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/非凡影院.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"飞扬TV\\\",\\n            \\\"url\\\":\\\"http://diancj.zhenfy.cn/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/飞扬TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"嘿荼锋\\\",\\n            \\\"url\\\":\\\"http://tv.hfys8.vip/api.php/Sntv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/嘿荼锋.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"黑龙影视\\\",\\n            \\\"url\\\":\\\"http://vip.ji-ding-he.site/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/黑龙影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"河马影院\\\",\\n            \\\"url\\\":\\\"http://1.14.63.101/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/河马影院.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"聚多影视\\\",\\n            \\\"url\\\":\\\"http://jdyy.weetai.cn/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/聚多影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"久久影院\\\",\\n            \\\"url\\\":\\\"http://l.bhtv.org.cn/mv/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/久久影院.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"乐酷TV\\\",\\n            \\\"url\\\":\\\"http://150.138.78.177:2021/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/乐酷TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"懒猫TV\\\",\\n            \\\"url\\\":\\\"http://www.esellauto.com/api.php/lh/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/懒猫TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"六维影视\\\",\\n            \\\"url\\\":\\\"http://liuweiiptv.gq:1357/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/六维影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"流星雨\\\",\\n            \\\"url\\\":\\\"http://nn.lxyyy.xyz:8/c/api.php/WAiLaowang/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/流星雨影院.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"冷月TV\\\",\\n            \\\"url\\\":\\\"https://tv.521x5.com/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/冷月TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"荔枝影视\\\",\\n            \\\"url\\\":\\\"http://api.zjys.vip/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/荔枝影视TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"免费看TV\\\",\\n            \\\"url\\\":\\\"http://www.freekan.vip/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/免费看TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"蜜果TV\\\",\\n            \\\"url\\\":\\\"http://vv.miguotv.net/m/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/蜜果TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"米来影视\\\",\\n            \\\"url\\\":\\\"http://42.51.37.161:2346/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/米来影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"米奇TV\\\",\\n            \\\"url\\\":\\\"http://www.s6ep3.top/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/米奇TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"七科影视\\\",\\n            \\\"url\\\":\\\"http://tv.7kfm.cn/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/七科影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"若惜影视\\\",\\n            \\\"url\\\":\\\"http://rxw.ruoxinew.com/api.php/Sntv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/若惜影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"思奇TV\\\",\\n            \\\"url\\\":\\\"http://tv.siqitv.vip/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/思奇TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"双子星\\\",\\n            \\\"url\\\":\\\"http://tv.diyoui.cc/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/双子星.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"山楂影视\\\",\\n            \\\"url\\\":\\\"http://dy6.dcd1.cn/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/山楂影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"天空TV\\\",\\n            \\\"url\\\":\\\"http://tv.tkys.tv/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/天空TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"虾皮视频\\\",\\n            \\\"url\\\":\\\"http://tv.cmt8.xyz/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/虾皮视频.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"小极TV\\\",\\n            \\\"url\\\":\\\"http://api.8d8q.com/mmv/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/小极TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"小熊猫TV\\\",\\n            \\\"url\\\":\\\"http://tv2.hetaoys.vip/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/小熊猫TV.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            },\\n            {\\n            \\\"title\\\":\\\"紫曦影视\\\",\\n            \\\"url\\\":\\\"http://appys.azx.tools:88/api.php/iptv/vod/\\\",\\n            \\\"img\\\":\\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/紫曦影视.png\\\",\\n            \\\"murl\\\":\\\"q:TV影视\\\"\\n            }\\n        ]\\n        }\\n    ]\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"获取app列表\",\"path\":\"appJson\",\"rule\":\"let appfile = \\\"\\\";\\ntry {\\n    appfile = fetch(getMyVar(\\\"subscription\\\"));\\n} catch (e) {}\\n\\nlet appjson = {};\\nif (/InMemory/.test(appfile)) {\\n    appjson = JSON.parse(appfile);\\n} else {\\n    appjson = JSON.parse(JSON.parse(fetch(\\\"hiker://page/ResCode\\\", {})).rule);\\n}\\n\\n$.exports = appjson;\"},{\"col_type\":\"movie_3\",\"name\":\"内置数据2\",\"path\":\"myParse\",\"rule\":\"(() => {\\n    function changeVideoUrl(url) {\\n        //改变特定地址的Referer\\n        if (url.includes(\\\"wkfile\\\")) {\\n            url = url + ';{Referer@https://fantuan.wkfile.com/}';\\n        } else if (ptab == 'bilibili') {\\n            url = url + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n        } else if (ptab == 'mgtv') {\\n            url = url + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n        } else if (url.includes(\\\"ojbk\\\")) {\\n            url = url + ';{Referer@https://bak.ojbkjx.com/}';\\n        }\\n        //返回视频链接\\n        if (!url.includes(\\\"http\\\")) {\\n            throw new Error(\\\"链接不是以http开头(可能加密了)\\\");\\n        } else {\\n            if (/\\\\.m3u8/.test(url)) {\\n                return cacheM3u8(url);\\n            } else {\\n                return url + '#isVideo=true#';\\n            }\\n        }\\n    }\\n    //aes解密\\n    function De(data, token_key, token_iv) {\\n        eval(getCryptoJS());\\n        var key = CryptoJS.enc.Utf8.parse(token_key);\\n        var iv = CryptoJS.enc.Utf8.parse(token_iv);\\n        return CryptoJS.AES.decrypt(data, key, {\\n            iv: iv,\\n            mode: CryptoJS.mode.CBC,\\n            padding: CryptoJS.pad.Pkcs7\\n        }).toString(CryptoJS.enc.Utf8);\\n    };\\n    if (vlink.includes('m3u8.cache.suoyo.cc')) {\\n        let url = JSON.parse(fetch('https://jhpc.manduhu.com/duoduo/api.php', { body: 'url=' + vlink, method: 'POST' })).url;\\n        return changeVideoUrl(De(url, md5('rXjWvXl6'), 'NXbHoWJbpsEOin8b'));\\n    } else if (vlink.includes('ruifenglb')) {\\n        let url = JSON.parse(fetch('http://ts.yjhan.com:8090/api/?key=DSQFgXdmj9xkDyiXdr&url=' + vlink)).url;\\n        return changeVideoUrl(url);\\n        /*let html = fetch('https://tv.yjhan.com:4423/CL4K/?url=' + vlink),\\n            le_token = html.match(/le_token.*=.*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\".*:.*\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, \\\"A42EAC0C2B408472\\\", le_token));*/\\n    } else if (vlink.includes(\\\"xueren-\\\")) {\\n        let html = fetch('https://diaoyong.qd234.cn/?url=' + vlink),\\n            le_token = html.match(/le_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, 'A42EAC0C2B408473', le_token));\\n    } else if (vlink.includes(\\\"netflixmom-\\\")) {\\n        let html = fetch('https://player.4kya.com/?url=' + vlink, { headers: { referer: 'https://netflix.mom' } }),\\n            le_token = html.match(/le_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, '333180B3EF0ED9D0', le_token));\\n    } else if (ptab.includes('nfuxs')) {\\n        let html = fetch('https://api.xkvideo.design/m3u8.php?url=' + vlink),\\n            bt_token = html.match(/bt_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*getVideoInfo\\\\(\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, 'zsdrf880203ghurd', bt_token));\\n    } else if (/qiyi|youku|qq.com|mgtv|bilibili|ixigua|migu|sohu|pptv|le|1905\\\\.com|fun\\\\.tv/.test(vlink)) {\\n        let html = request(\\\"https://jxqd.tkys.tv/dnma.php?url=\\\" + vlink),\\n            bt_token = html.match(/bt_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*getVideoInfo\\\\(\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, \\\"7692AA70EEF92B42\\\", bt_token));\\n    } else if (vlink.includes(\\\"LT-\\\")) {\\n        let html = request(\\\"https://jxqd.tkys.tv/dnma.php?url=\\\" + vlink),\\n            bt_token = html.match(/bt_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*getVideoInfo\\\\(\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, \\\"7692AA70EEF92B42\\\", bt_token));\\n    } else if (vlink.includes(\\\"renrenmi-\\\")) {\\n        let html = request(\\\"https://jxqd.tkys.tv/dnma.php?url=\\\" + vlink),\\n            bt_token = html.match(/bt_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*getVideoInfo\\\\(\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, \\\"7692AA70EEF92B42\\\", bt_token));\\n    } else if (vlink.includes(\\\"RongXingVR-\\\")) {\\n        let url = JSON.parse(request(\\\"https://vvip.funsline.cn:8866/api/?key=fK6x076k18LU34x02N&url=\\\" + vlink)).url;\\n        return changeVideoUrl(url);\\n    } else if (vlink.includes(\\\"xfy-\\\")) {\\n        let url = JSON.parse(request(\\\"https://vip.xfyun.one/home/api?type=ys&uid=2581923&key=aefiklotwzCEFHJO48&url=\\\" + vlink)).url;\\n        return changeVideoUrl(url);\\n    } else if (vlink.includes(\\\"fen.laodi\\\")) {\\n        let html = fetch(\\\"https://play.tkys.tv/laodi.php/?url=\\\" + vlink),\\n            url = html.match(/vurl\\\\s*=\\\\s*'(.*)'/)[1];\\n        return changeVideoUrl(url);\\n    } else {\\n        return vlink;\\n    }\\n})();\"}]","icon":"https://lanmeiguojiang.com/tubiao/q/52.png"},{"last_chapter_rule":"","title":"一个轻合集","author":"Joker","version":9805,"type":"all","url":"hiker://empty","col_type":"icon_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n// 当没有独立小程序首页时清除页面缓存\naddListener(\"onClose\", $.toString(() => {\n    if(parseInt(getMyVar('openedIndex', '0')) === 0){\n        JSON.parse(readFile(\"_ruleHashCache\") || \"[]\").forEach((v) => deleteFile(v))\n        deleteFile('_ruleHashCache')\n    }\n}))\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', '');\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow) rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(),\n    types = {'':'全部'};\n    Array.from(new Set(rules.map(e=>e.type))).forEach(t=>types[t]=t);\nfor (let k in types){\n    if (!k || rules.find((v) => v.type == k)){\n\t      let count = rules.filter(it => !k || it.type === k).length;\n        el.push({\n            title: '““””' + (k == typeShow ? (types[k]+count).bold().fontcolor('#12b668') : types[k]+count),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\t}\n}\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow) rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/(https?:\\/\\/.+?)(?:\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)\n","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', '')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow) rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', '一个影视')","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule(() => {\\n            let url = getMyVar('remoteUrl')\\n            if(url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteFile('updateTime')\\n            back(false)\\n            return 'toast://已更新'\\n        }),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, /*{\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n},*/ {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (isIndex && MY_PAGE == 1) eval(thisRULE.preRule)\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { pages: RULE.pages, pageList: RULE.pageList }\\n}, QING_TITLE, RULE.title)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra || {} })\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            }\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        interval = parseInt(readFile('updateInterval') || '1'),\\n        time = parseInt(readFile('updateTime')) || 0,\\n        now = new Date().getTime(),\\n        data = [];\\n    if (time == 0 || interval > 0 && now - time > 1000 * 60 * 60 * 24 * interval) {\\n        // 获取远程数据\\n        try {\\n            data = $.require(\\\"hiker://page/creator\\\");\\n        } catch (e) {}\\n        if(data.length == 0) {\\n            data = JSON.parse(fetch('hiker://files/libs/' + md5(url) + '.js') || '[]')\\n            log('没有获取到更新数据')\\n        } else {\\n            writeFile('hiker://files/libs/' + md5(url) + '.js', JSON.stringify(data));\\n            saveFile('updateTime', now.toString())\\n            log('更新数据已写入本地')\\n        }\\n    } else {\\n        data = JSON.parse(fetch('hiker://files/libs/' + md5(url) + '.js') || '[]')\\n    }\\n    \\n    //data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"生成规则集\",\"path\":\"creator\",\"rule\":\"let appjson = $.require('hiker://page/appJson');\\n\\nfunction randomSort3(arr) {\\n    /*arr.sort(function() {\\n        return Math.random() - 0.5;\\n    });*/\\n    return arr;\\n}\\n\\nlet appconts = appjson.data,\\n    rules = [],\\n    types = { \\\"\\\": \\\"全部\\\" };\\nfor (let i = 0; i < appconts.length; i++) {\\n    let applist = randomSort3(appconts[i].list),\\n        apptype = appconts[i].title /* + applist.length*/ ;\\n    types[apptype] = apptype;\\n    if (apptype.includes(\\\"个人收集\\\")) continue;\\n    for (let j = 0; j < applist.length; j++) {\\n        let apptitle = applist[j].title,\\n            appicon = applist[j].img,\\n            appUrl = applist[j].url,\\n            home_url = \\\"\\\",\\n            find_rule = \\\"\\\",\\n            search_url = \\\"\\\",\\n            searchFind = \\\"\\\",\\n            pages = [],\\n            last_chapter_rule = \\\"\\\",\\n            appUa = \\\"\\\";\\n        //处理重名的\\n        let num = 1,\\n            temp = apptitle;\\n        while (rules.some(cur => cur.title == apptitle)) {\\n            num = num + 1;\\n            apptitle = temp + num;\\n        }\\n        //规则链接和搜索链接\\n        if (/神马|TV/.test(apptype)) {\\n            home_url = \\\"hiker://empty##\\\" + appUrl + \\\"?ac=list&page=fypage\\\";\\n            if (/19jx|293ys|zhaikanys|ji\\\\-ding\\\\-he|phoebe|yunbo\\\\.bxin|lanrentk|hetaoys|pxun|139\\\\.155|fkkdy|056158|aixixi|ruoxinew|feifan123|siqitv/.test(appUrl)) {\\n                search_url = \\\"hiker://empty##\\\" + appUrl + '?ac=list&page=fypage&zm=**';\\n            } else {\\n                search_url = \\\"hiker://empty##\\\" + appUrl + '?ac=list&page=fypage&wd=**';\\n            }\\n        } else {\\n            if (appUrl.includes(\\\"api.php/app\\\")) {\\n                home_url = \\\"hiker://empty##\\\" + appUrl + \\\"index_video?token=\\\";\\n            } else if (appUrl.includes(\\\"xgapp\\\")) {\\n                home_url = \\\"hiker://empty##\\\" + appUrl + \\\"index_video?token=\\\";\\n            } else {\\n                home_url = \\\"hiker://empty##\\\" + appUrl + \\\"/vodPhbAll\\\";\\n            }\\n\\n            if (appUrl.includes('api.php/app')) {\\n                search_url = \\\"hiker://empty##\\\" + appUrl + 'search?pg=fypage&token=&text=**';\\n            } else if (appUrl.includes('xgapp')) {\\n                search_url = \\\"hiker://empty##\\\" + appUrl + 'search?pg=fypage&text=**';\\n            } else {\\n                if (/iopenyun/.test(appUrl)) {\\n                    search_url = \\\"hiker://empty##\\\" + appUrl + '/list?page=fypage&limit=10&wd=**';\\n                } else {\\n                    search_url = \\\"hiker://empty##\\\" + appUrl + '?page=fypage&limit=10&wd=**';\\n                }\\n            }\\n        }\\n        //需要特殊处理的链接\\n        function changeUrl(url) {\\n            let newUrl = url;\\n            if (url.includes(\\\"omofun\\\")) {\\n                newUrl = url + \\\"&csrf=a%2BIKGLunJCZuad%2BxETLrZuBoqhluFCD0dH86E8IENvBzMfBLa6dB8RzoxxIvvBEMeJzJnUSt51FhlPBd4Kr5yhGXlyNvDkJyNMDgDZ1b%2FsjXAeMtj17XteM8puTY2PQnQwYOyj%2FHUCAVRZkrflsk87YG1VeSwnET8TprDD8t6ug%3D@signature=FED4A092D5BBBE18117A3B558EB6461A92A52CF7\\\";\\n            } else if (url.includes(\\\"xinluan\\\")) {\\n                newUrl = url + \\\"&csrf=SREQAPX8tFEKpV2dLDjLZhKk8IxJfDWhN%2BmksWJ%2FkdRVwgUh%2FQkTDZEoQASaAp7HzUix87T%2BPLkAIw6yH%2B6MrvaqJM9rJ5l2b85IQRbBbW%2BDbSYRO8bmTsKdLYDTVtRHhz5nylRWlGUidxHfVyLO9tZUiBk1Y2Awo%2Fzsa2tH2u8%3D@signature=FBC7088C677D297E6BBBC8584A93372DDE10FD96\\\";\\n            } else if (url.includes(\\\"sxbrd\\\")) {\\n                newUrl = url + \\\"&csrf=r2NDLtpS8Euqh%2F%2F8Y96ycOUOKS9ICzNYzyaw5C2UfEgoDFDHX%2Frqj%2BYcLWQzH5%2BR6moUOlwOAoJREtUa376ud74627UDzNQ1sRGdTD8kb36s1eTMemcn8d0i7WJ6k9ih5IP4Ad7fpa6%2F3Dst1joGncyr716dRHDMfcvrs3S29jI%3D@client_name=55WF55yL5b2x6KeG\\\";\\n            }\\n            return newUrl;\\n        }\\n        //请求UA\\n        if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\") || appUrl.includes(\\\"freekan\\\")) {\\n            appUa = \\\"Dart/2.14 (dart:io)\\\";\\n        } else if (/zsb|fkxs|xays|xcys|szys|dxys|ytys|qnys/.test(appUrl)) {\\n            appUa = \\\"Dart/2.15 (dart:io)\\\";\\n        } else if (appUrl.includes(\\\".vod\\\")) {\\n            appUa = \\\"okhttp/4.1.0\\\";\\n        } else {\\n            appUa = \\\"Dalvik/2.1.0\\\"; //TV\\n        }\\n        //首页规则、分类规则、二级规则和视频解析\\n        if (/神马|TV/.test(apptype)) {\\n            find_rule = \\\"js:\\\" + $.toString(function(appUrl, appUa) {\\n                let items = [];\\n                if (MY_PAGE == 1) {\\n                    try {\\n                        let typeJson = JSON.parse(fetch(appUrl + \\\"?ac=flitter\\\"), { headers: { \\\"User-Agent\\\": appUa } });\\n                        for (let key in typeJson) {\\n                            items.push({\\n                                title: key,\\n                                col_type: \\\"flex_button\\\",\\n                                url: $(\\\"hiker://empty##\\\" + appUrl + \\\"?ac=list&page=fypage&class=\\\" + key).rule((typeJson, appUa) => {\\n                                    addListener(\\\"onClose\\\", \\\"clearVar('filter')\\\");\\n                                    let items = [],\\n                                        keys = {},\\n                                        tykeys = [],\\n                                        filter = {},\\n                                        color = \\\"#FA7298\\\";\\n                                    for (let index in typeJson) {\\n                                        if (typeJson[index].values.length == 1) continue;\\n                                        let key = typeJson[index].field,\\n                                            filterName = \\\"全部\\\" + typeJson[index].name;\\n                                        tykeys.push(key);\\n                                        keys[\\\"f\\\" + key] = \\\"\\\";\\n                                        filter[\\\"f\\\" + key] = [filterName].concat(typeJson[index].values);\\n                                    }\\n                                    if (!getVar(\\\"filter\\\", \\\"\\\")) { putVar(\\\"filter\\\", JSON.stringify(keys)) }\\n                                    let temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                    if (MY_PAGE == 1) {\\n                                        for (let item in filter) {\\n                                            for (let index = 0; index < filter[item].length; index++) {\\n                                                items.push({\\n                                                    title: temp[item] == \\\"\\\" ? (index === 0 ? \\\"““””\\\" + filter[item][0].bold().fontcolor(color) : filter[item][index]) : (temp[item] == filter[item][index] ? \\\"““””\\\" + filter[item][index].bold().fontcolor(color) : filter[item][index]),\\n                                                    col_type: \\\"scroll_button\\\",\\n                                                    url: $().lazyRule((des, name) => {\\n                                                        let temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                                        temp[name] = des.indexOf(\\\"全部\\\") != -1 ? \\\"\\\" : des;\\n                                                        putVar(\\\"filter\\\", JSON.stringify(temp));\\n                                                        refreshPage(false);\\n                                                        return \\\"hiker://empty\\\"\\n                                                    }, filter[item][index], item)\\n                                                })\\n                                            }\\n                                            items.push({ col_type: \\\"blank_block\\\" })\\n                                        }\\n                                    }\\n                                    let url = MY_URL.split(\\\"##\\\")[1] + \\\"&\\\" + tykeys.map(cur => cur + \\\"=f\\\" + cur).join(\\\"&\\\");\\n                                    for (let item in temp) {\\n                                        url = url.replace(item, temp[item]);\\n                                    }\\n                                    let rescode = fetch(url, { headers: { \\\"User-Agent\\\": appUa } });\\n                                    if (rescode.indexOf('检测中') != -1) {\\n                                        rescode = fetch(url + '&btwaf' + rescode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                                    }\\n                                    let html = JSON.parse(rescode);\\n                                    try {\\n                                        eval(JSON.parse(fetch('hiker://page/tvlistdata')).rule);\\n                                    } catch (e) {\\n                                        log(\\\"视频列表出错:\\\" + e.message);\\n                                    }\\n                                    setResult(items);\\n                                }, typeJson[key], appUa)\\n                            })\\n                        }\\n                    } catch (e) {\\n                        log(\\\"首页分类出错:\\\" + e.message);\\n                    }\\n                }\\n                try {\\n                    let url = MY_URL.split('##')[1],\\n                        html = JSON.parse(fetch(url));\\n                    eval(JSON.parse(fetch('hiker://page/tvlistdata')).rule);\\n                } catch (e) {\\n                    log(\\\"首页推荐出错:\\\" + e.message);\\n                }\\n                setResult(items);\\n            }, appUrl, appUa)\\n            let rule_tvlistdata = $.toString(function() {\\n                let list = html.data;\\n                for (let i = 0; i < list.length; i++) {\\n                    let { title, pic, nextlink, state } = list[i];\\n                    let url = nextlink.startsWith('http') ? nextlink : appUrl + '?ac=detail&ids=' + nextlink;\\n                    items.push({\\n                        title: title,\\n                        pic_url: pic + '@Referer=',\\n                        desc: state,\\n                        col_type: 'movie_3_marquee',\\n                        url: $(\\\"#immersiveTheme#hiker://empty##\\\" + url).rule(() => {\\n                            try {\\n                                eval(JSON.parse(fetch('hiker://page/tvmovlist')).rule);\\n                            } catch (e) {\\n                                log(\\\"影片详情出错:\\\" + e.message);\\n                                setResult([]);\\n                            }\\n                        })\\n                    });\\n                }\\n            });\\n            let rule_tvmovlist = $.toString(function(appUrl, appUa) {\\n                addListener(\\\"onClose\\\", $.toString((url) => {\\n                    clearVar('now');\\n                    clearVar(url);\\n                }, MY_URL));\\n                let items = [],\\n                    html = getVar(MY_URL, \\\"\\\");\\n                //domin = MY_URL.split(\\\"##\\\")[1].match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n                if (html == \\\"\\\") {\\n                    html = fetch(MY_URL.split(\\\"##\\\")[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                    putVar(MY_URL, html);\\n                }\\n                html = JSON.parse(html);\\n\\n                //简介\\n                let { title, pubtime, trunk, area, type, director, actor, img_url, intro } = html;\\n                items.push({\\n                    title: title + \\\"(\\\" + pubtime + \\\")\\\" + \\\"\\\\n\\\" + area.join(\\\"/\\\") + \\\"/\\\" + type.join(\\\"/\\\") + \\\"/\\\" + trunk,\\n                    desc: \\\"导演:\\\" + director.join(\\\",\\\") + \\\"\\\\n\\\" + \\\"主演:\\\" + actor.join(\\\",\\\"),\\n                    pic_url: img_url,\\n                    url: \\\"hiker://empty\\\",\\n                    col_type: 'movie_1_vertical_pic_blur'\\n                }, {\\n                    title: '剧情简介:',\\n                    desc: intro,\\n                    url: $('hiker://empty#noRecordHistory#').rule((desc) => {\\n                        setResult([{\\n                            title: desc,\\n                            col_type: 'long_text'\\n                        }]);\\n                    }, intro),\\n                    col_type: 'text_1'\\n                });\\n                //断插\\n                let dnen = getMyVar(\\\"dnen\\\", \\\"0\\\");\\n                items.push({\\n                    title: '断插:' + (dnen == '1' ? '““✅””' : '❎'),\\n                    url: $('').lazyRule((dnen) => {\\n                        if (dnen == '1') {\\n                            putMyVar(\\\"dnen\\\", \\\"0\\\");\\n                            refreshPage(false);\\n                            return 'toast://已禁用断插调用!';\\n                        } else {\\n                            putMyVar(\\\"dnen\\\", \\\"1\\\");\\n                            refreshPage(false);\\n                            return 'toast://已开启断插调用!'\\n                        }\\n                    }, dnen),\\n                    col_type: 'text_2'\\n                });\\n                items.push({\\n                    title: '线路配置',\\n                    url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/Route.js');Route.setParse();setResult(d);\\\",\\n                    //url:\\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\\\",\\n                    col_type: 'text_2'\\n                });\\n                //线路列表\\n                let tabs = Object.keys(html.videolist);\\n                if (getVar(\\\"now\\\", \\\"\\\") == \\\"\\\") { putVar(\\\"now\\\", tabs[0]) }\\n                items.push({\\n                    title: \\\"““↓↑””\\\",\\n                    url: \\\"hiker://empty@lazyRule=.js:putVar('appmtvsort', getVar('appmtvsort','1')=='1'?'0':'1');refreshPage(false);'toast://切换成功!'\\\",\\n                    col_type: 'scroll_button'\\n                });\\n                for (let i in tabs) {\\n                    items.push({\\n                        title: getVar(\\\"now\\\") == tabs[i] ? \\\"““””\\\" + tabs[i].bold().fontcolor(\\\"#FA7298\\\") : tabs[i],\\n                        url: \\\"hiker://empty@lazyRule=.js:putVar('now','\\\" + tabs[i] + \\\"');refreshPage(false);'toast://切换成功!'\\\",\\n                        col_type: 'scroll_button'\\n                    })\\n                }\\n                //视频列表\\n                let ptab = getVar(\\\"now\\\"),\\n                    list = html.videolist[ptab];\\n                log('当前线路:' + ptab);\\n                if (getVar('appmtvsort', '1') == '0') {\\n                    list.reverse();\\n                };\\n                for (let j = 0; j < list.length; j++) {\\n                    let srcurl = list[j].url;\\n                    if (/293jx1/.test(srcurl)) {\\n                        srcurl = srcurl.replace('293jx1', 'jx');\\n                    } else if (/8d8q|diliktv|haokanju1|cztv|fit\\\\:8|ppzhu/.test(appUrl)) {\\n                        srcurl = srcurl + '&app=10000&account=272775028&password=qq272775028';\\n                    }\\n                    let title = list[j].title;\\n                    //title = title.match(/(第|\\\\d|-)*(集|话|期)/g) ? title.replace(/第|集|话|期/g, '') : title;\\n                    items.push({\\n                        title: title,\\n                        col_type: \\\"text_4\\\",\\n                        url: eval(JSON.parse(fetch(\\\"hiker://page/lazyParse\\\")).rule)\\n                    });\\n                }\\n                setResult(items);\\n            }, appUrl, appUa);\\n            let lazyParse = $.toString(() => {\\n                let vlink = srcurl;\\n                if (/(url|vid|v)\\\\=/.test(srcurl)) {\\n                    vlink = srcurl.substring(srcurl.search(/(url|vid|v)\\\\=/)).split('=')[1].split('&')[0];\\n                }\\n                let enDn = getMyVar(\\\"dnen\\\", \\\"0\\\"),\\n                    test1 = vlink.search(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) != -1,\\n                    test2 = vlink.search(/LT\\\\-|RongXingVR\\\\-|renrenmi\\\\-|xfy\\\\-|suoyo\\\\.cc|fen\\\\.laodi|ruifenglb|xueren\\\\-/) != -1;\\n                if ((test1 || test2) && enDn == '1') {\\n                    return $('hiker://empty').lazyRule((vlink) => {\\n                        log(\\\"调用断插解析,视频链接:\\\" + vlink);\\n                        eval(\\\"let config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                        eval(fetch(config.cj));\\n                        return aytmParse(vlink);\\n                    }, vlink)\\n                } else {\\n                    return $(\\\"hiker://empty\\\").lazyRule((ptab, srcurl, appUrl) => {\\n                        log(\\\"使用默认解析,视频链接:\\\" + srcurl);\\n                        //动态解析代码开始\\n                        function changeVideoUrl(url) {\\n                            //改变特定地址的Referer\\n                            if (url.includes(\\\"wkfile\\\")) {\\n                                url = url + ';{Referer@https://fantuan.wkfile.com/}';\\n                            } else if (ptab == 'bilibili') {\\n                                url = url + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n                            } else if (ptab == 'mgtv') {\\n                                url = url + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                            } else if (url.includes(\\\"ojbk\\\")) {\\n                                url = url + ';{Referer@https://bak.ojbkjx.com/}';\\n                            }\\n                            //返回视频链接\\n                            if (!url.includes(\\\"http\\\")) {\\n                                throw new Error(\\\"链接不是以http开头(可能加密了)\\\");\\n                            } else {\\n                                if (/\\\\.m3u8/.test(url)) {\\n                                    return cacheM3u8(url);\\n                                } else {\\n                                    return url + '#isVideo=true#';\\n                                }\\n                            }\\n                        }\\n                        try {\\n                            if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos|netease\\\\.com/.test(srcurl) && /http/.test(srcurl) && !/\\\\.html/.test(srcurl) && !/(url|v|vid)\\\\=/.test(srcurl)) {\\n                                if (!/fen\\\\.laodi|ruifenglb|suoyo\\\\.cc/.test(srcurl)) {\\n                                    log(\\\"检测到资源地址可能是视频链接\\\");\\n                                    return changeVideoUrl(srcurl);\\n                                }\\n                            }\\n                            //----分割线----//\\n                            let scode = JSON.parse(fetch(srcurl, {\\n                                headers: {\\n                                    \\\"User-Agent\\\": MOBILE_UA\\n                                },\\n                                redirect: false,\\n                                withStatusCode: true\\n                            }));\\n                            //返回重定向的链接 \\n                            if (scode.statusCode == '302' || scode.statusCode == '301') {\\n                                let redurl = scode.headers.location[0].replace(/\\\\\\\\/g, '');\\n                                log('重定向:' + redurl);\\n                                if (!/(url|vid|v)\\\\=/.test(redurl)) {\\n                                    return changeVideoUrl(redurl);\\n                                }\\n                                /*else if (/\\\\=http/.test(redurl) && /\\\\.m3u8|\\\\.mp4|\\\\.flv/.test(redurl)) {\\n                                    purl = redurl.substring(redurl.indexOf('=http') + 1);\\n                                }*/\\n                                scode.body = fetch(redurl);\\n                            }\\n                            //开始嗅探\\n                            let html = scode.body;\\n                            if (/404 Not Found|备案后可继续访问/.test(html)) {\\n                                throw new Error(\\\"404了\\\");\\n                            } else if (/\\\\<body/.test(html)) {\\n                                return $([\\\"开始视频嗅探\\\", \\\"打开解析网页\\\", \\\"使用内置解析\\\"], 1, \\\"检测到解析为网页数据\\\").select((ptab, srcurl, appUrl) => {\\n                                    if (input == \\\"开始视频嗅探\\\") {\\n                                        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                                        return x5rule(srcurl, srcurl);\\n                                    } else if (input == \\\"打开解析网页\\\") {\\n                                        return \\\"web://\\\" + srcurl;\\n                                    } else if (input == \\\"使用内置解析\\\") {\\n                                        let vlink = srcurl;\\n                                        if (/(url|vid|v)\\\\=/.test(srcurl)) {\\n                                            vlink = srcurl.substring(srcurl.search(/(url|vid|v)\\\\=/)).split('=')[1].split('&')[0];\\n                                        }\\n                                        log(\\\"使用内置解析,视频链接:\\\" + vlink);\\n                                        showLoading(\\\"正在进行解析...\\\");\\n                                        return eval(JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule);\\n                                    }\\n                                }, ptab, srcurl, appUrl)\\n                            } else {\\n                                //log('尝试从json数据获取');\\n                                try {\\n                                    let purl = JSON.parse(html).url;\\n                                    return changeVideoUrl(purl);\\n                                } catch (e) {\\n                                    /*let purl = html.match(/[\\\\'\\\\\\\"]url[\\\\'\\\\\\\"]:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1].replace(/\\\\\\\\/g, '');\\n                                    return changeVideoUrl(purl);*/\\n                                    throw new Error('解析可能加密了');\\n                                }\\n                            }\\n                        } catch (e) {\\n                            log('未能成功获取视频地址:' + e.message);\\n                            let vlink = srcurl;\\n                            if (/(url|vid|v)\\\\=/.test(srcurl)) {\\n                                vlink = srcurl.substring(srcurl.search(/(url|vid|v)\\\\=/)).split('=')[1].split('&')[0];\\n                            }\\n                            log(\\\"尝试使用内置解析,视频链接:\\\" + vlink);\\n                            return eval(JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule);\\n                        }\\n                        //动态解析代码结束\\n                    }, ptab, srcurl, appUrl);\\n                }\\n            });\\n            pages.push({\\n                name: \\\"TV列表\\\",\\n                path: \\\"tvlistdata\\\",\\n                rule: rule_tvlistdata\\n            }, {\\n                name: \\\"TV选集\\\",\\n                path: \\\"tvmovlist\\\",\\n                rule: rule_tvmovlist\\n            }, {\\n                name: \\\"视频解析\\\",\\n                path: \\\"lazyParse\\\",\\n                rule: lazyParse\\n            });\\n        } else {\\n            find_rule = \\\"js:\\\" + $.toString(function(changeUrl, appUrl, appUa) {\\n                let items = [];\\n                //获取分类内容\\n                try {\\n                    let typeJson = [];\\n                    if (appUrl.includes(\\\"api.php/app\\\")) {\\n                        let typeUrl = changeUrl(appUrl + \\\"nav?token=\\\");\\n                        let typcode = request(typeUrl, { headers: { \\\"User-Agent\\\": appUa } });\\n                        if (typcode.indexOf('检测中') != -1) {\\n                            typcode = fetch(typeUrl + '&btwaf' + typcode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                        }\\n                        typeJson = JSON.parse(typcode).list;\\n                    } else if (appUrl.includes(\\\"xgapp\\\")) {\\n                        let typeUrl = changeUrl(appUrl + \\\"nav?token=\\\");\\n                        let typcode = request(typeUrl, { headers: { \\\"User-Agent\\\": appUa } });\\n                        if (typcode.indexOf('检测中') != -1) {\\n                            typcode = fetch(typeUrl + '&btwaf' + typcode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                        }\\n                        typeJson = JSON.parse(typcode).data;\\n                    } else if (appUrl.includes(\\\".vod\\\")) {\\n                        let typeUrl = changeUrl(appUrl + \\\"/types\\\");\\n                        let typcode = request(typeUrl, { headers: { \\\"User-Agent\\\": appUa } });\\n                        if (typcode.indexOf('检测中') != -1) {\\n                            typcode = fetch(typeUrl + '?btwaf' + typcode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                        }\\n                        typeJson = JSON.parse(typcode).data.list;\\n                    }\\n                    //获取分类列表\\n                    for (let i = 0; i < typeJson.length; i++) {\\n                        //分类视频地址\\n                        let tyurl = \\\"\\\",\\n                            typeArray = Object.keys(typeJson[i].type_extend).filter(cur => [\\\"class\\\", \\\"area\\\", \\\"lang\\\", \\\"year\\\"].includes(cur)),\\n                            typeUrl = typeArray.map(cur => cur + \\\"=f\\\" + cur).join(\\\"&\\\");\\n                        if (appUrl.includes('api.php/app')) {\\n                            tyurl = appUrl + 'video?tid=' + typeJson[i].type_id + '&page=fypage&token=&' + typeUrl;\\n                        } else if (appUrl.includes('xgapp')) {\\n                            tyurl = appUrl + 'video?tid=' + typeJson[i].type_id + '&page=fypage&' + typeUrl;\\n                        } else if (appUrl.includes(\\\".vod\\\")) {\\n                            if (/iopenyun/.test(appUrl)) {\\n                                tyurl = appUrl + '/list?type=' + typeJson[i].type_id + '&page=fypage&by=fby&limit=9&' + typeUrl;\\n                            } else {\\n                                tyurl = appUrl + '?type=' + typeJson[i].type_id + '&page=fypage&by=fby&limit=9&' + typeUrl;\\n                            }\\n                        }\\n                        //构建动态分类\\n                        items.push({\\n                            title: typeJson[i].type_name,\\n                            url: $(\\\"hiker://empty##\\\" + tyurl).rule((appUrl, type_extend, changeUrl, appUa) => {\\n                                addListener(\\\"onClose\\\", \\\"clearVar('filter')\\\");\\n                                let items = [];\\n                                if (MY_PAGE == 1) { //动态分类\\n                                    let keys = {},\\n                                        filter = {},\\n                                        filterNames = { class: \\\"类型\\\", area: \\\"地区\\\", lang: \\\"语言\\\", year: \\\"年份\\\", star: \\\"明星\\\", director: \\\"导演\\\", state: \\\"状态\\\", version: \\\"版本\\\" },\\n                                        defaultFilter = {\\n                                            fclass: [\\\"全部类型\\\", \\\"喜剧\\\", \\\"爱情\\\", \\\"恐怖\\\", \\\"动作\\\", \\\"科幻\\\", \\\"剧情\\\", \\\"战争\\\", \\\"警匪\\\", \\\"犯罪\\\", \\\"动画\\\", \\\"奇幻\\\", \\\"武侠\\\", \\\"冒险\\\", \\\"枪战\\\", \\\"悬疑\\\", \\\"惊悚\\\", \\\"经典\\\", \\\"青春\\\", \\\"文艺\\\", \\\"微电影\\\", \\\"古装\\\", \\\"历史\\\", \\\"运动\\\", \\\"农村\\\", \\\"儿童\\\", \\\"网络电影\\\"],\\n                                            farea: [\\\"全部地区\\\", \\\"内地\\\", \\\"香港\\\", \\\"台湾\\\", \\\"美国\\\", \\\"英国\\\", \\\"法国\\\", \\\"日本\\\", \\\"韩国\\\", \\\"德国\\\", \\\"泰国\\\", \\\"印度\\\", \\\"西班牙\\\", \\\"加拿大\\\", \\\"其他\\\"],\\n                                            fyear: [\\\"全部年份\\\", \\\"2022\\\", \\\"2021\\\", \\\"2020\\\", \\\"2019\\\", \\\"2018\\\", \\\"2017\\\", \\\"2016\\\", \\\"2015\\\", \\\"2014\\\", \\\"2013\\\", \\\"2012\\\", \\\"2011\\\", \\\"2010\\\", \\\"2009\\\", \\\"2008\\\", \\\"2007\\\", \\\"2006\\\", \\\"2005\\\", \\\"2004\\\", \\\"2003\\\", \\\"2002\\\", \\\"2001\\\", \\\"2000\\\"],\\n                                            flang: [\\\"全部语言\\\", \\\"国语\\\", \\\"英语\\\", \\\"粤语\\\", \\\"闽南语\\\", \\\"韩语\\\", \\\"日语\\\", \\\"法语\\\", \\\"德语\\\", \\\"其他\\\"]\\n                                        };\\n                                    for (let key in type_extend) {\\n                                        if (![\\\"class\\\", \\\"area\\\", \\\"lang\\\", \\\"year\\\"].includes(key)) continue;\\n                                        keys[\\\"f\\\" + key] = \\\"\\\";\\n                                        keys[\\\"fby\\\"] = \\\"\\\";\\n                                        let filterName = \\\"全部\\\" + filterNames[key];\\n                                        filter[\\\"f\\\" + key] = [filterName].concat(type_extend[key].split(\\\",\\\"));\\n                                        if (filter[\\\"f\\\" + key].length == 2) {\\n                                            filter[\\\"f\\\" + key] = defaultFilter[\\\"f\\\" + key]\\n                                        }\\n                                    }\\n                                    if (!getVar(\\\"filter\\\", \\\"\\\")) { putVar(\\\"filter\\\", JSON.stringify(keys)) }\\n                                    var temp = JSON.parse(getVar(\\\"filter\\\")),\\n                                        color = \\\"#FA7298\\\";\\n                                    for (let item in filter) {\\n                                        for (let index = 0; index < filter[item].length; index++) {\\n                                            items.push({\\n                                                title: temp[item] == \\\"\\\" ? (index === 0 ? \\\"““””\\\" + filter[item][0].bold().fontcolor(color) : filter[item][index]) : (temp[item] == filter[item][index] ? \\\"““””\\\" + filter[item][index].bold().fontcolor(color) : filter[item][index]),\\n                                                col_type: \\\"scroll_button\\\",\\n                                                url: $().lazyRule((des, name) => {\\n                                                    let temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                                    temp[name] = des.indexOf(\\\"全部\\\") != -1 ? \\\"\\\" : des;\\n                                                    putVar(\\\"filter\\\", JSON.stringify(temp));\\n                                                    refreshPage(false);\\n                                                    return \\\"hiker://empty\\\"\\n                                                }, filter[item][index], item)\\n                                            })\\n                                        }\\n                                        items.push({ col_type: \\\"blank_block\\\" })\\n                                    }\\n                                    let by = { 默认顺序: \\\"\\\", 最新: \\\"time\\\", 最热: \\\"hits\\\", 评分: \\\"score\\\" };\\n                                    if (appUrl.indexOf('api.php/app') == -1 && appUrl.indexOf('xgapp') == -1) {\\n                                        for (let item in by) {\\n                                            items.push({\\n                                                title: temp[\\\"fby\\\"] == by[item] ? \\\"““””\\\" + item.bold().fontcolor(color) : item,\\n                                                col_type: \\\"scroll_button\\\",\\n                                                url: $().lazyRule((des) => {\\n                                                    let temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                                    temp[\\\"fby\\\"] = des;\\n                                                    putVar(\\\"filter\\\", JSON.stringify(temp));\\n                                                    refreshPage(false);\\n                                                    return \\\"hiker://empty\\\"\\n                                                }, by[item])\\n                                            })\\n                                        }\\n                                    }\\n                                } else {\\n                                    var temp = JSON.parse(getVar(\\\"filter\\\"));\\n                                }\\n                                let url = MY_URL.split(\\\"##\\\")[1];\\n                                for (let item in temp) {\\n                                    url = url.replace(item, temp[item]);\\n                                }\\n                                url = changeUrl(url);\\n                                let rescode = fetch(url, { headers: { \\\"User-Agent\\\": appUa } });\\n                                if (rescode.indexOf('检测中') != -1) {\\n                                    rescode = fetch(url + '&btwaf' + rescode.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                                }\\n                                let html = JSON.parse(rescode);\\n                                try {\\n                                    eval(JSON.parse(fetch('hiker://page/applistdata', {})).rule);\\n                                } catch (e) {\\n                                    log(\\\"视频列表出错:\\\" + e.message);\\n                                }\\n                                setResult(items);\\n                            }, appUrl, typeJson[i].type_extend, changeUrl, appUa),\\n                            col_type: 'flex_button'\\n                        })\\n                    }\\n                } catch (e) {\\n                    log('首页分类出错:' + e.message);\\n                }\\n                //获取推荐视频列表\\n                try {\\n                    let url = MY_URL.split('##')[1];\\n                    url = changeUrl(url);\\n                    let html = request(url, { headers: { \\\"User-Agent\\\": appUa } });\\n                    if (html.indexOf('检测中') != -1) {\\n                        html = fetch(url + '&btwaf' + html.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n                    }\\n                    html = JSON.parse(html);\\n                    eval(JSON.parse(fetch('hiker://page/appindexdata')).rule);\\n                } catch (e) {\\n                    log('首页推荐出错:' + e.message);\\n                }\\n                setResult(items);\\n            }, changeUrl, appUrl, appUa)\\n\\n            let rule_applistdata = $.toString(function() {\\n                let list = [];\\n                if (appUrl.includes('api.php/app')) {\\n                    list = html.list;\\n                } else if (appUrl.includes('xgapp')) {\\n                    list = html.data;\\n                } else if (appUrl.includes(\\\".vod\\\")) {\\n                    list = html.data.list;\\n                }\\n\\n                for (let i = 0; i < list.length; i++) {\\n                    let { vod_name, vod_pic, vod_id, vod_remarks } = list[i];\\n                    let link = \\\"\\\";\\n                    if (appUrl.includes('api.php/app') || appUrl.includes('xgapp')) {\\n                        link = appUrl + 'video_detail?id=' + vod_id + '&token=';\\n                    } else if (appUrl.includes(\\\".vod\\\")) {\\n                        let date = new Date();\\n                        link = appUrl + '/detail?vod_id=' + vod_id + '&rel_limit=10&key=' + (date.getMonth() + 1) + (date.getDate() < 10 ? '0' + date.getDate() : date.getDate());\\n                    };\\n\\n                    if (/iopenyun/.test(appUrl)) {\\n                        link = appUrl + '/detailID?vod_id=' + vod_id + '&rel_limit=10';\\n                    }\\n\\n                    items.push({\\n                        title: vod_name,\\n                        pic_url: vod_pic + '@Referer=',\\n                        desc: vod_remarks,\\n                        col_type: 'movie_3_marquee',\\n                        url: $(\\\"#immersiveTheme#hiker://empty##\\\" + link).rule(() => {\\n                            try {\\n                                eval(JSON.parse(fetch('hiker://page/appmovlist')).rule);\\n                            } catch (e) {\\n                                log(\\\"影片详情出错:\\\" + e.message);\\n                                setResult([]);\\n                            }\\n                        })\\n                    });\\n                }\\n            })\\n            let rule_appindexdata = $.toString(function() {\\n                let list = [];\\n                if (appUrl.includes('api.php/app')) {\\n                    list = html.list;\\n                } else if (appUrl.includes('xgapp')) {\\n                    list = html.data;\\n                } else if (appUrl.includes(\\\".vod\\\")) {\\n                    list = html.data.list;\\n                }\\n\\n                for (let i = 0; i < list.length; i++) {\\n                    let lists = [],\\n                        typename = \\\"\\\";\\n                    if (appUrl.includes('api.php/app') || appUrl.includes('xgapp')) {\\n                        lists = list[i].vlist;\\n                        typename = list[i].type_name;\\n                    } else if (appUrl.includes(\\\".vod\\\")) {\\n                        lists = list[i].vod_list;\\n                        typename = list[i].vod_type_name;\\n\\n                    }\\n\\n                    items.push({\\n                        title: typename,\\n                        col_type: 'text_1',\\n                        url: \\\"hiker://empty\\\"\\n                    });\\n\\n                    for (let j = 0; j < lists.length; j++) {\\n                        let { vod_name, vod_pic, vod_id, vod_remarks } = lists[j];\\n                        let link = \\\"\\\";\\n                        if (appUrl.includes('api.php/app') || appUrl.includes('xgapp')) {\\n                            link = appUrl + 'video_detail?id=' + vod_id + '&token=&key=';\\n                        } else if (appUrl.includes(\\\".vod\\\")) {\\n                            let date = new Date();\\n                            link = appUrl + '/detail?vod_id=' + vod_id + '&rel_limit=10&key=' + (date.getMonth() + 1) + (date.getDate() < 10 ? '0' + date.getDate() : date.getDate());\\n                        };\\n\\n                        if (/iopenyun/.test(appUrl)) {\\n                            link = appUrl + '/detailID?vod_id=' + vod_id + '&rel_limit=10';\\n                        }\\n\\n                        items.push({\\n                            title: vod_name,\\n                            pic_url: vod_pic + '@Referer=',\\n                            desc: vod_remarks,\\n                            col_type: 'movie_3_marquee',\\n                            url: $(\\\"#immersiveTheme#hiker://empty##\\\" + link).rule(() => {\\n                                try {\\n                                    eval(JSON.parse(fetch('hiker://page/appmovlist')).rule);\\n                                } catch (e) {\\n                                    log(\\\"影片详情出错:\\\" + e.message);\\n                                    setResult([]);\\n                                }\\n                            })\\n                        });\\n                    }\\n                }\\n            })\\n            let rule_appmovlist = $.toString(function(changeUrl, appUrl, appUa) {\\n                addListener(\\\"onClose\\\", $.toString((url) => {\\n                    clearVar('appnow');\\n                    clearVar(url);\\n                }, MY_URL));\\n                let items = [],\\n                    html = getVar(MY_URL, \\\"\\\"),\\n                    data = {};\\n                if (html == \\\"\\\") {\\n                    let url = MY_URL.split(\\\"##\\\")[1];\\n                    url = changeUrl(url);\\n                    html = fetch(url, { headers: { \\\"User-Agent\\\": appUa } });\\n                    putVar(MY_URL, html);\\n                }\\n                if (appUrl.includes(\\\"xgapp\\\")) {\\n                    data = JSON.parse(html).data.vod_info;\\n                } else {\\n                    data = JSON.parse(html).data;\\n                }\\n\\n                //简介\\n                let { vod_name, vod_pic, vod_content, vod_class, vod_remarks, vod_director, vod_actor, vod_area, vod_lang, vod_year } = data;\\n                items.push({\\n                    title: vod_name + '\\\\n' + vod_class + \\\",\\\" + vod_remarks + \\\"\\\\n\\\" + vod_area + \\\"/\\\" + vod_lang + \\\"/\\\" + vod_year,\\n                    desc: \\\"导演:\\\" + vod_director + \\\"\\\\n主演:\\\" + vod_actor,\\n                    pic_url: vod_pic,\\n                    url: \\\"hiker://empty\\\",\\n                    col_type: 'movie_1_vertical_pic_blur'\\n                }, {\\n                    title: '剧情简介:',\\n                    desc: vod_content,\\n                    url: $('hiker://empty#noRecordHistory#').rule((desc) => {\\n                        setResult([{\\n                            title: desc,\\n                            col_type: 'long_text'\\n                        }]);\\n                    }, vod_content),\\n                    col_type: 'text_1'\\n                });\\n                //断插\\n                let dnen = getMyVar(\\\"dnen\\\", \\\"0\\\");\\n                items.push({\\n                    title: '断插:' + (dnen == '1' ? '““✅””' : '❎'),\\n                    url: $('#noLoading#').lazyRule((dnen) => {\\n                        if (dnen == '1') {\\n                            putMyVar(\\\"dnen\\\", \\\"0\\\");\\n                            refreshPage(false);\\n                            return 'toast://已禁用断插调用!';\\n                        } else {\\n                            putMyVar(\\\"dnen\\\", \\\"1\\\");\\n                            refreshPage(false);\\n                            return 'toast://已开启断插调用!'\\n                        }\\n                    }, dnen),\\n                    col_type: 'text_2'\\n                });\\n                items.push({\\n                    title: '线路配置',\\n                    url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/Route.js');Route.setParse();setResult(d);\\\",\\n                    //url: \\\"hiker://page/Route?rule=MyFieldᴰⁿ&type=设置#noRecordHistory#\\\",\\n                    col_type: 'text_2'\\n                });\\n                //线路列表\\n\\n                let conts = [],\\n                    tabs = [];\\n                if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\")) {\\n                    conts = data.vod_url_with_player;\\n                } else {\\n                    conts = data.vod_play_list;\\n                }\\n                if (conts.length < 1) {\\n                    conts = data.vod_play_url.split('$$$');\\n                    tabs = data.vod_play_from.split('$$$');\\n                }\\n                //线路名称\\n                let ptab = \\\"\\\",\\n                    ptabname = \\\"\\\";\\n                if (getVar(\\\"appnow\\\", \\\"\\\") == \\\"\\\") { putVar(\\\"appnow\\\", \\\"0\\\") }\\n                for (let i = 0; i < conts.length; i++) {\\n                    let sptab = \\\"\\\",\\n                        tabname = \\\"\\\";\\n                    if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\")) {\\n                        sptab = conts[i].code ? conts[i].code : tabs[i];\\n                        tabname = conts[i].name || sptab;\\n                    } else {\\n                        sptab = conts[i].from ? conts[i].from : tabs[i];\\n                        tabname = conts[i].player_info ? conts[i].player_info.show : sptab;\\n                    }\\n                    items.push({\\n                        title: getVar(\\\"appnow\\\") == i ? \\\"““””\\\" + tabname.bold().fontcolor(\\\"#FA7298\\\") : tabname,\\n                        url: \\\"hiker://empty#noLoading#@lazyRule=.js:putVar('appnow','\\\" + i + \\\"');refreshPage(false);'toast://切换成功!'\\\",\\n                        col_type: 'scroll_button'\\n                    })\\n                    if (getVar(\\\"appnow\\\") == i) {\\n                        ptab = sptab;\\n                        ptabname = tabname;\\n                    }\\n                }\\n                items.push({\\n                    title: \\\"““↓↑””\\\" + ptabname + \\\"-\\\" + ptab,\\n                    url: \\\"hiker://empty@lazyRule=.js:putVar('appmappsort', getVar('appmappsort','1')=='1'?'0':'1');refreshPage(false);'toast://切换成功!'\\\",\\n                    col_type: 'text_1',\\n                    extra: { lineVisible: false }\\n                });\\n                //链接列表\\n                let list = [],\\n                    index = getVar(\\\"appnow\\\");\\n                if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\")) {\\n                    list = conts[index].url.split(\\\"#\\\");\\n                } else {\\n                    list = conts[index].urls ? conts[index].urls : conts[index].url.split(\\\"#\\\");\\n                };\\n                if (getVar('appmappsort', '1') == '0') {\\n                    list.reverse();\\n                }\\n                //解析接口\\n                let jiek = [];\\n                try {\\n                    if (appUrl.includes(\\\"api.php/app\\\") || appUrl.includes(\\\"xgapp\\\")) {\\n                        jiek.push(conts[index].parse_api || \\\"\\\");\\n                    } else {\\n                        jiek = (conts[index].player_info.parse2 || \\\"\\\").split(\\\",\\\").concat((conts[index].player_info.parse || \\\"\\\").split(\\\",\\\"));\\n                        jiek = jiek.map(cur => cur.replace(\\\"..\\\", \\\".\\\").replace('jsonbs', ''));\\n                    }\\n                } catch (e) {}\\n                jiek = jiek.filter(cur => !!cur);\\n                let jxUrl = jiek[0] || \\\"\\\";\\n                /*if (jxUrl.substring(0, 2) == '\\\\/\\\\/') {\\n                    jxUrl = 'https:' + jxUrl;\\n                }*/\\n                //打印接口\\n                log('\\\\n当前线路:' + ptab + '\\\\n解析列表:' + $.stringify(jiek));\\n                //视频列表\\n                for (let j = 0; j < list.length; j++) {\\n                    let vlink = \\\"\\\",\\n                        title = \\\"\\\";\\n                    if (list[j].url) {\\n                        vlink = list[j].url.replace(/#456#/g, 'http').replace(/#123#/g, '.').replace(/#789#/g, ':');\\n                        title = list[j].name;\\n                    } else {\\n                        vlink = list[j].split(\\\"$\\\")[1];\\n                        title = list[j].split(\\\"$\\\")[0];\\n                    }\\n                    //title = title.match(/(第|\\\\d|-)*(集|话|期)/g) ? title.replace(/第|集|话|期/g, '') : title;\\n                    items.push({\\n                        title: title,\\n                        col_type: \\\"text_4\\\",\\n                        url: eval(JSON.parse(fetch(\\\"hiker://page/lazyParse\\\")).rule)\\n                    });\\n                }\\n                setResult(items);\\n            }, changeUrl, appUrl, appUa);\\n\\n            let lazyParse = $.toString(function() {\\n                let enDn = getMyVar(\\\"dnen\\\", \\\"0\\\"),\\n                    test1 = vlink.search(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) != -1,\\n                    test2 = vlink.search(/LT\\\\-|RongXingVR\\\\-|renrenmi\\\\-|xfy\\\\-|suoyo\\\\.cc|fen\\\\.laodi|ruifenglb|xueren\\\\-/) != -1;\\n                if ((test1 || test2) && enDn == '1') {\\n                    return $('hiker://empty').lazyRule((vlink) => {\\n                        log(\\\"\\\\n调用断插解析,视频链接:\\\" + vlink);\\n                        eval(\\\"let config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                        eval(fetch(config.cj));\\n                        return aytmParse(vlink);\\n                    }, vlink)\\n                } else {\\n                    return $('hiker://empty').lazyRule((ptab, vlink, jxUrl, appUrl) => {\\n                        log(\\\"\\\\n使用默认解析,视频链接:\\\" + vlink);\\n                        //视频链接处理\\n                        function changeVideoUrl(url) {\\n                            //改变特定地址的Referer\\n                            if (url.includes(\\\"wkfile\\\")) {\\n                                url = url + ';{Referer@https://fantuan.wkfile.com/}';\\n                            } else if (ptab == 'bilibili') {\\n                                url = url + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n                            } else if (ptab == 'mgtv') {\\n                                url = url + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                            } else if (url.includes(\\\"ojbk\\\")) {\\n                                url = url + ';{Referer@https://bak.ojbkjx.com/}';\\n                            }\\n                            //返回视频链接\\n                            if (!url.includes(\\\"http\\\")) {\\n                                throw new Error(\\\"链接不是以http开头(可能加密了)\\\");\\n                            } else {\\n                                if (/\\\\.m3u8/.test(url)) {\\n                                    return cacheM3u8(url);\\n                                } else {\\n                                    return url + '#isVideo=true#';\\n                                }\\n                            }\\n                        }\\n                        //动态解析代码开始\\n                        try {\\n                            //处理视频样式的资源链接\\n                            if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos|netease\\\\.com/.test(vlink) && /http/.test(vlink) && !/\\\\.html/.test(vlink)) {\\n                                if (!/fen\\\\.laodi|ruifenglb|suoyo\\\\.cc/.test(vlink)) {\\n                                    log(\\\"检测到资源地址可能是视频链接\\\");\\n                                    return changeVideoUrl(vlink);\\n                                }\\n                            }\\n                            //无可用解析直接报错\\n                            if (!jxUrl || /x\\\\-n\\\\.cc/.test(jxUrl)) {\\n                                throw new Error(\\\"无可用解析\\\");\\n                            }\\n                            //使用解析\\n                            log(\\\"使用解析:\\\" + jxUrl);\\n                            let link = jxUrl + vlink,\\n                                scode = JSON.parse(fetch(link, {\\n                                    headers: {\\n                                        \\\"User-Agent\\\": \\\"Dart/2.13 (dart:io)\\\"\\n                                    },\\n                                    redirect: false,\\n                                    withStatusCode: true\\n                                }));\\n                            //返回重定向的链接 \\n                            if (scode.statusCode == '302' || scode.statusCode == '301') {\\n                                let redurl = scode.headers.location[0].replace(/\\\\\\\\/g, '');\\n                                log('重定向:' + redurl);\\n                                if (!/(url|vid|v)\\\\=/.test(redurl)) {\\n                                    return changeVideoUrl(redurl);\\n                                }\\n                                /*else if (/\\\\=http/.test(redurl) && /\\\\.m3u8|\\\\.mp4|\\\\.flv/.test(redurl)) {\\n                                    purl = redurl.substring(redurl.indexOf('=http') + 1);\\n                                }*/\\n                                scode.body = fetch(redurl);\\n                            }\\n                            //开始嗅探\\n                            let html = scode.body;\\n                            if (/404 Not Found|备案后可继续访问/.test(html)) {\\n                                throw new Error(\\\"404了\\\");\\n                            } else if (/\\\\<body/.test(html)) {\\n                                return $([\\\"开始视频嗅探\\\", \\\"打开解析网页\\\", \\\"使用内置解析\\\"], 1, \\\"检测到解析为网页数据\\\").select((link, ptab, vlink, appUrl) => {\\n                                    if (input == \\\"开始视频嗅探\\\") {\\n                                        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                                        return x5rule(link, link);\\n                                    } else if (input == \\\"打开解析网页\\\") {\\n                                        return \\\"web://\\\" + link;\\n                                    } else if (input == \\\"使用内置解析\\\") {\\n                                        log(\\\"使用内置解析\\\");\\n                                        showLoading(\\\"正在进行解析...\\\");\\n                                        return eval(JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule);\\n                                    }\\n                                }, link, ptab, vlink, appUrl);\\n                            } else {\\n                                //log('尝试从json数据获取');\\n                                try {\\n                                    let purl = JSON.parse(html).url;\\n                                    return changeVideoUrl(purl);\\n                                } catch (e) {\\n                                    /*let purl = html.match(/[\\\\'\\\\\\\"]url[\\\\'\\\\\\\"]:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1].replace(/\\\\\\\\/g, '');\\n                                    return changeVideoUrl(purl);*/\\n                                    throw new Error('解析可能加密了');\\n                                }\\n                            }\\n                        } catch (e) {\\n                            log('\\\\n未能成功获取视频地址:' + e.message + \\\"\\\\n尝试使用规则内置解析\\\");\\n                            return eval(JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule);\\n                        }\\n                        //动态解析代码结束\\n                    }, ptab, vlink, jxUrl, appUrl);\\n                }\\n            });\\n            pages.push({\\n                name: \\\"APP分类列表\\\",\\n                path: \\\"applistdata\\\",\\n                rule: rule_applistdata\\n            }, {\\n                name: \\\"APP首页列表\\\",\\n                path: \\\"appindexdata\\\",\\n                rule: rule_appindexdata\\n            }, {\\n                name: \\\"APP选集\\\",\\n                path: \\\"appmovlist\\\",\\n                rule: rule_appmovlist\\n            }, {\\n                name: \\\"视频解析\\\",\\n                path: \\\"lazyParse\\\",\\n                rule: lazyParse\\n            });\\n        }\\n\\n        let myParse = JSON.parse(fetch(\\\"hiker://page/myParse\\\")).rule;\\n        pages.push({\\n            name: \\\"内置解析\\\",\\n            path: \\\"myParse\\\",\\n            rule: myParse\\n        })\\n\\n        searchFind = \\\"js:\\\" + $.toString(function(changeUrl, apptype, appUrl, appUa) {\\n            let items = [],\\n                search_url = changeUrl(MY_URL.split('##')[1]),\\n                bhtml = \\\"\\\";\\n\\n            bhtml = fetch(search_url, { headers: { \\\"User-Agent\\\": appUa } });\\n\\n            try {\\n                bhtml = bhtml.startsWith('\\\\r\\\\n') ? bhtml.replace('\\\\r\\\\n', '') : bhtml;\\n            } catch (e) {}\\n\\n            if (/btwaf/.test(bhtml)) {\\n                bhtml = fetch(search_url + '&btwaf' + bhtml.match(/btwaf(.*?)\\\\\\\"/)[1], { headers: { \\\"User-Agent\\\": appUa } });\\n            }\\n\\n            let html = JSON.parse(bhtml),\\n                list = [];\\n            if (/神马|TV/.test(apptype)) {\\n                list = html.data;\\n            } else {\\n                if (appUrl.includes('api.php/app')) {\\n                    list = html.list;\\n                } else if (appUrl.includes('xgapp')) {\\n                    list = html.data;\\n                } else {\\n                    list = html.data.list;\\n                }\\n            }\\n\\n            for (let i = 0; i < list.length; i++) {\\n                if (/神马|TV/.test(apptype)) {\\n                    var { title, pic, nextlink: url, state: desc } = list[i];\\n                } else {\\n                    if (appUrl.includes('api.php/app') || appUrl.includes('xgapp')) {\\n                        var { vod_name: title, vod_pic: pic, vod_remarks: desc } = list[i],\\n                            url = appUrl + 'video_detail?id=' + list[i].vod_id + '&token=';\\n                    } else {\\n                        var { vod_name: title, vod_pic: pic, vod_remarks: desc } = list[i];\\n                        if (/iopenyun/.test(appUrl)) {\\n                            var url = appUrl + '/detailID?vod_id=' + list[i].vod_id + '&token=';\\n                        } else {\\n                            var url = appUrl + '/detail?vod_id=' + list[i].vod_id + '&token=';\\n                        }\\n                    }\\n                }\\n\\n                items.push({\\n                    title: title,\\n                    pic_url: pic + '@Referer=',\\n                    desc: desc,\\n                    col_type: 'movie_1_vertical_pic',\\n                    url: $(\\\"#immersiveTheme#hiker://empty##\\\" + url).rule((apptype) => {\\n                        if (/神马|TV/.test(apptype)) {\\n                            eval(JSON.parse(fetch('hiker://page/tvmovlist')).rule);\\n                        } else {\\n                            eval(JSON.parse(fetch('hiker://page/appmovlist')).rule);\\n                        }\\n                    }, apptype)\\n                });\\n            }\\n\\n            setResult(items);\\n        }, changeUrl, apptype, appUrl, appUa)\\n\\n        last_chapter_rule = \\\"js:\\\" + $.toString(function(apptype, appUrl, appUa) {\\n            let chp = [];\\n            try {\\n                let conts = [],\\n                    html = JSON.parse(fetch(MY_URL.split(\\\"##\\\")[1], { headers: { \\\"User-Agent\\\": appUa } }));\\n                if (/神马|TV/.test(apptype)) {\\n                    conts = Object.keys(html.videolist);\\n                } else if (appUrl.includes(\\\"api.php/app\\\")) {\\n                    conts = html.data.vod_url_with_player;\\n                    if (conts.length < 1) {\\n                        conts = html.data.vod_play_url.split('$$$');\\n                    }\\n                } else if (appUrl.includes(\\\"xgapp\\\")) {\\n                    conts = html.data.vod_info.vod_url_with_player;\\n                    if (conts.length < 1) {\\n                        conts = html.data.vod_info.vod_play_url.split('$$$');\\n                    }\\n                } else {\\n                    conts = html.data.vod_play_list;\\n                    if (conts.length < 1) {\\n                        conts = html.data.vod_play_url.split('$$$');\\n                    }\\n                }\\n\\n                let list = [];\\n                for (let i = 0; i < conts.length; i++) {\\n                    if (/神马|TV/.test(apptype)) {\\n                        list = html.videolist[conts[i]];\\n                    } else if (conts[i].urls) {\\n                        list = conts[i].urls;\\n                    } else if (conts[i].url) {\\n                        list = conts[i].url.split(\\\"#\\\");\\n                    } else {\\n                        list = conts[i].split(\\\"#\\\");\\n                    }\\n                    chp.push(list.length);\\n                }\\n            } catch (e) {}\\n            setResult('更新至:' + (Math.max.apply(Math, chp)));\\n        }, apptype, appUrl, appUa);\\n\\n        rules.push({\\n            title: apptitle,\\n            author: getMyVar('remoteUrl'),\\n            type: apptype,\\n            url: home_url,\\n            find_rule: find_rule,\\n            search_url: search_url,\\n            searchFind: searchFind,\\n            pages: JSON.stringify(pages),\\n            last_chapter_rule: last_chapter_rule,\\n            icon: appicon\\n        });\\n    }\\n}\\n/*$.exports = {\\n    rules: rules,\\n    types: types\\n}*/\\n$.exports = rules;\"},{\"col_type\":\"movie_3\",\"name\":\"内置数据\",\"path\":\"ResCode\",\"rule\":\"{\\n    \\\"data\\\": [{\\n        \\\"title\\\": \\\"APP\\\",\\n        \\\"list\\\": [{\\n            \\\"title\\\": \\\"HG影视\\\",\\n            \\\"url\\\": \\\"http://hgyx.vip/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/HGyingshi.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"小极影视\\\",\\n            \\\"url\\\": \\\"http://api.xiaoysw.com/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/xiaoysw.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"雪人资源\\\",\\n            \\\"url\\\": \\\"https://zy.qd234.cn/mogai_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/qd234.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"南府追剧\\\",\\n            \\\"url\\\": \\\"http://iapp.nfuxs.club/dnmb.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/nanfuzhuijumao.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"奈菲迷\\\",\\n            \\\"url\\\": \\\"https://app.netflixmi.com/api.php/tv.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/naifeimi.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"饭后电影\\\",\\n            \\\"url\\\": \\\"http://summ.vip/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/summ.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"侦探影视\\\",\\n            \\\"url\\\": \\\"http://ys.huangguay.com/mogai_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/zhentanys.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"益达影院\\\",\\n            \\\"url\\\": \\\"http://luobu.yss6080.com/mogai_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/yss6080.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"初心影视\\\",\\n            \\\"url\\\": \\\"https://www.18mv.club/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/18mv.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"大熊影视\\\",\\n            \\\"url\\\": \\\"https://dxys2233.com/mogai_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/daxiongzhuiju.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"手指影视\\\",\\n            \\\"url\\\": \\\"http://szys3355.com/mogai_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/szys.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"粉粉影视\\\",\\n            \\\"url\\\": \\\"http://huluxiaindex.huimaojia.com:30130/mogai_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/fenfenyingshi.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"飞捷影视\\\",\\n            \\\"url\\\": \\\"https://www.fj6080.com/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/fj6080.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"暖光影视\\\",\\n            \\\"url\\\": \\\"https://app.bl210.com/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/nuanguang.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"小蜻蜓影视\\\",\\n            \\\"url\\\": \\\"http://3ketv.com/mogai_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/xiaoqingting.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"1080P影视\\\",\\n            \\\"url\\\": \\\"https://1080p.tv/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/1080PTV.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"宅男影院\\\",\\n            \\\"url\\\": \\\"http://www.sexyy.top/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/znyy666.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"影视热剧\\\",\\n            \\\"url\\\": \\\"http://lb.26ys.cn/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/26ys.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"片多儿影视\\\",\\n            \\\"url\\\": \\\"http://221.236.18.12:665/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/meinaikang.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"小草影院\\\",\\n            \\\"url\\\": \\\"http://ygapp.xcys63.com/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/xcys63.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"百讯视频\\\",\\n            \\\"url\\\": \\\"https://z.iopenyun.com:99/app_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/iopenyun.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"瑞丰资源\\\",\\n            \\\"url\\\": \\\"https://ts.yjhan.com:4433/ruifenglb_api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/ruifeng.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"独播社\\\",\\n            \\\"url\\\": \\\"http://35ys.cc/api.php/v1.vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/35ys.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"苍蓝4K\\\",\\n            \\\"url\\\": \\\"https://vip.ruifenglb.com:4433/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/ruifeng.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"看365\\\",\\n            \\\"url\\\": \\\"https://www.kan365.xyz/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/kan365.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"007影视\\\",\\n            \\\"url\\\": \\\"https://www.007ts.cc/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/007ts.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"5060影院\\\",\\n            \\\"url\\\": \\\"https://app.linzhiyuan.xyz/xgapp.php/v1/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/linzhiyuan.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"星空影视\\\",\\n            \\\"url\\\": \\\"https://xkys.tv/xgapp.php/v1/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/xkys.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"饭团影视\\\",\\n            \\\"url\\\": \\\"http://television.wkfile.com/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/fantuan.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"天空影视\\\",\\n            \\\"url\\\": \\\"https://www.tkys.tv/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/tkys.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"抹茶猪\\\",\\n            \\\"url\\\": \\\"https://www.mczdyw.com/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/mczdyw.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"追剧达人\\\",\\n            \\\"url\\\": \\\"http://vipmv.tv/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/zhuijudaren.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"迪迪影院\\\",\\n            \\\"url\\\": \\\"http://dd88.icu:6080/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/dd88.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"影视工场\\\",\\n            \\\"url\\\": \\\"https://www.ik4.cc/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/yingshigongchang.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"火箭影视\\\",\\n            \\\"url\\\": \\\"http://huojian.wchulian.com.cn/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/wcx.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"九合视频\\\",\\n            \\\"url\\\": \\\"https://ptygx.com/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/jiuheshipin.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"我爱电影\\\",\\n            \\\"url\\\": \\\"http://xg.5imv.net/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/5imv.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"琳琅影院\\\",\\n            \\\"url\\\": \\\"https://www.u23c.com/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/linlang.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"555电影\\\",\\n            \\\"url\\\": \\\"http://w7tv.com/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/o8tv.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"京广航影视\\\",\\n            \\\"url\\\": \\\"https://www.jingguanhang.com/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/jingguanghang.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"大鱼TV\\\",\\n            \\\"url\\\": \\\"https://www.dytv123.com/api.php/app/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/dytv.png\\\"\\n        }]\\n    }, {\\n        \\\"title\\\": \\\"TV\\\",\\n        \\\"list\\\": [{\\n            \\\"title\\\": \\\"大师兄TV\\\",\\n            \\\"url\\\": \\\"http://dsxtv.tv.ci/api.php/dsx/vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/dashixiong.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"爱西西TV\\\",\\n            \\\"url\\\": \\\"http://tv.aixixi.vip/api.php/iptv/vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/aixixi.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"冷月影视\\\",\\n            \\\"url\\\": \\\"https://tv.521x5.com/api.php/iptv/vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/521x5.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"小极TV\\\",\\n            \\\"url\\\": \\\"http://api.8d8q.com/mmv/api.php/Chengcheng/vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/8d8q.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"流星雨影视\\\",\\n            \\\"url\\\": \\\"http://phoebe.cf/api.php/iptv/vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/liuxingyu.png\\\"\\n        }, {\\n            \\\"title\\\": \\\"聚多影视\\\",\\n            \\\"url\\\": \\\"http://jdyy.weetai.cn/api.php/iptv/vod/\\\",\\n            \\\"img\\\": \\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/juduo.png\\\"\\n        }]\\n    }]\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"获取app列表\",\"path\":\"appJson\",\"rule\":\"let appfile = \\\"\\\";\\ntry {\\n    let arr = JSON.parse(fetch(\\\"https://egwang186.coding.net/p/egwang186/d/iptv/git/raw/master/js2.0/万物生-首页.txt\\\")).data,\\n        list = arr.find(e => e.title === \\\"APP类\\\").list,\\n        list1 = [],\\n        list2 = [];\\n    for (let item in list) {\\n        let a = list[item],\\n            url = a.url;\\n        if (url.includes('/vodPhbAll')/*url.includes(\\\".vod\\\")*/) {\\n            a.url = url.split(\\\"/vodPhbAll\\\")[0];\\n        } else if (url.includes(\\\"/vod/\\\") || url.includes(\\\"api.php/app\\\") || url.includes(\\\"xgapp\\\")) {\\n            a.url = url.match(/http.*\\\\//)[0];\\n        }\\n        if (url.includes(\\\".vod\\\") || url.includes(\\\"api.php/app\\\") || url.includes(\\\"xgapp\\\")) {\\n            list1.push(a);\\n        } else if (url.includes(\\\"/vod/\\\")) {\\n            list2.push(a);\\n        }\\n    }\\n    appfile = JSON.stringify({\\n        data: [{\\n            title: \\\"APP\\\",\\n            list: list1\\n        }, {\\n            title: \\\"TV\\\",\\n            list: list2\\n        }]\\n    })\\n} catch (e) {}\\n\\nlet appjson = {};\\nif (/egwang/.test(appfile)) {\\n    appjson = JSON.parse(appfile);\\n} else {\\n    log('使用内置数据');\\n    appjson = JSON.parse(JSON.parse(fetch(\\\"hiker://page/ResCode\\\", {})).rule);\\n}\\n\\n$.exports = appjson;\"},{\"col_type\":\"movie_3\",\"name\":\"内置数据2\",\"path\":\"myParse\",\"rule\":\"(() => {\\n    function changeVideoUrl(url) {\\n        //改变特定地址的Referer\\n        if (url.includes(\\\"wkfile\\\")) {\\n            url = url + ';{Referer@https://fantuan.wkfile.com/}';\\n        } else if (ptab == 'bilibili') {\\n            url = url + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n        } else if (ptab == 'mgtv') {\\n            url = url + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n        } else if (url.includes(\\\"ojbk\\\")) {\\n            url = url + ';{Referer@https://bak.ojbkjx.com/}';\\n        }\\n        //返回视频链接\\n        if (!url.includes(\\\"http\\\")) {\\n            throw new Error(\\\"链接不是以http开头(可能加密了)\\\");\\n        } else {\\n            if (/\\\\.m3u8/.test(url)) {\\n                return cacheM3u8(url);\\n            } else {\\n                return url + '#isVideo=true#';\\n            }\\n        }\\n    }\\n    //aes解密\\n    function De(data, token_key, token_iv) {\\n        eval(getCryptoJS());\\n        var key = CryptoJS.enc.Utf8.parse(token_key);\\n        var iv = CryptoJS.enc.Utf8.parse(token_iv);\\n        return CryptoJS.AES.decrypt(data, key, {\\n            iv: iv,\\n            mode: CryptoJS.mode.CBC,\\n            padding: CryptoJS.pad.Pkcs7\\n        }).toString(CryptoJS.enc.Utf8);\\n    };\\n    if (vlink.includes('m3u8.cache.suoyo.cc')) {\\n        let url = JSON.parse(fetch('https://jhpc.manduhu.com/duoduo/api.php', { body: 'url=' + vlink, method: 'POST' })).url;\\n        return changeVideoUrl(De(url, md5('rXjWvXl6'), 'NXbHoWJbpsEOin8b'));\\n    } else if (vlink.includes('ruifenglb')) {\\n        let url = JSON.parse(fetch('http://ts.yjhan.com:8090/api/?key=DSQFgXdmj9xkDyiXdr&url=' + vlink)).url;\\n        return changeVideoUrl(url);\\n        /*let html = fetch('https://tv.yjhan.com:4423/CL4K/?url=' + vlink),\\n            le_token = html.match(/le_token.*=.*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\".*:.*\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, \\\"A42EAC0C2B408472\\\", le_token));*/\\n    } else if (vlink.includes(\\\"xueren-\\\")) {\\n        let html = fetch('https://diaoyong.qd234.cn/?url=' + vlink),\\n            le_token = html.match(/le_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, 'A42EAC0C2B408473', le_token));\\n    } else if (vlink.includes(\\\"netflixmom-\\\")) {\\n        let html = fetch('https://player.4kya.com/?url=' + vlink, { headers: { referer: 'https://netflix.mom' } }),\\n            le_token = html.match(/le_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, '333180B3EF0ED9D0', le_token));\\n    } else if (ptab.includes('nfuxs')) {\\n        let html = fetch('https://api.xkvideo.design/m3u8.php?url=' + vlink),\\n            bt_token = html.match(/bt_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*getVideoInfo\\\\(\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, 'zsdrf880203ghurd', bt_token));\\n    } else if (/qiyi|youku|qq.com|mgtv|bilibili|ixigua|migu|sohu|pptv|le|1905\\\\.com|fun\\\\.tv/.test(vlink)) {\\n        let html = request(\\\"https://jxqd.tkys.tv/dnmsb.php?url=\\\" + vlink),\\n            bt_token = html.match(/bt_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*getVideoInfo\\\\(\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, \\\"7692AA70EEF92B42\\\", bt_token));\\n    } else if (vlink.includes(\\\"LT-\\\")) {\\n        let html = request(\\\"https://jxqd.tkys.tv/dnmsb.php?url=\\\" + vlink),\\n            bt_token = html.match(/bt_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*getVideoInfo\\\\(\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, \\\"7692AA70EEF92B42\\\", bt_token));\\n    } else if (vlink.includes(\\\"renrenmi-\\\")) {\\n        let html = request(\\\"https://jxqd.tkys.tv/dnmsb.php?url=\\\" + vlink),\\n            bt_token = html.match(/bt_token\\\\s*=\\\\s*\\\"(.*)\\\"/)[1],\\n            url = html.match(/\\\"url\\\"\\\\s*:\\\\s*getVideoInfo\\\\(\\\"(.*)\\\"/)[1];\\n        return changeVideoUrl(De(url, \\\"7692AA70EEF92B42\\\", bt_token));\\n    } else if (vlink.includes(\\\"RongXingVR-\\\")) {\\n        let url = JSON.parse(request(\\\"https://vvip.funsline.cn:8866/api/?key=fK6x076k18LU34x02N&url=\\\" + vlink)).url;\\n        return changeVideoUrl(url);\\n    } else if (vlink.includes(\\\"xfy-\\\")) {\\n        let url = JSON.parse(request(\\\"https://vip.xfyun.one/home/api?type=ys&uid=2581923&key=aefiklotwzCEFHJO48&url=\\\" + vlink)).url;\\n        return changeVideoUrl(url);\\n    } else if (vlink.includes(\\\"fen.laodi\\\")) {\\n        let html = fetch(\\\"https://play.tkys.tv/laodi.php/?url=\\\" + vlink),\\n            url = html.match(/vurl\\\\s*=\\\\s*'(.*)'/)[1];\\n        return changeVideoUrl(url);\\n    } else {\\n        return vlink;\\n    }\\n})();\"}]","icon":"https://lanmeiguojiang.com/tubiao/more/175.png"},{"last_chapter_rule":"js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikchapter();","title":"香情影视","author":"香雅情","version":7,"type":"all","url":"hiker://files/rules/xyq/hikermovie.json","col_type":"icon_4_card","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikhmrule();","searchFind":"js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hiksearch();","search_url":"hiker://empty$$$hiker://files/rules/xyq/hikermovie.json$$$**$$$fypage$$$","titleColor":"#fff20c00","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikhmerj();","sdetail_col_type":"movie_1","sdetail_find_rule":"js:\neval(fetch('hiker://files/rules/xyq/hikermovie.js'));hikseaerji();","ua":"mobile","preRule":"//设置更新间隔时间,单位为整数天。\nvar uptime = 2;\n\nfunction uprulefile() {\n    var rulejs = fetch('https://code.aliyun.com/lzk23559/CloudRule/raw/master/hikermovie.js', {});\n    if (rulejs.search(/lazyRule/) == -1) {\n        rulejs = fetch('https://codeberg.org/lzk23559/cloudrule/raw/branch/master/hikermovie.js', {});\n    }\n    if (rulejs.search(/lazyRule/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikermovie.js\", rulejs);\n    }\n    var rulejson = fetch('https://code.aliyun.com/lzk23559/CloudRule/raw/master/hikermovie.json', {});\n    if (rulejson.search(/\\\"vodhref\\\"/) == -1) {\n        rulejson = fetch('https://codeberg.org/lzk23559/cloudrule/raw/branch/master/hikermovie.json', {});\n    }\n    if (rulejson.search(/\\\"vodhref\\\"/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikermovie.json\", rulejson);\n    }\n    if (rulejs.search(/lazyRule/) != -1 && rulejson.search(/\\\"vodhref\\\"/) != -1) {\n        writeFile(\"hiker://files/rules/xyq/hikerupdate.txt\", new Date() + '');\n        confirm({title:'提示', content:'自动更新完成'});\n    } else {\n        confirm({title:'提示', content:'自动更新失败'});\n    }\n}\n\n\n\n//检测是否有写入时间与规则的js插件文件\nif (fileExist(\"hiker://files/rules/xyq/hikerupdate.txt\") && fileExist(\"hiker://files/rules/xyq/hikermovie.js\") && fileExist(\"hiker://files/rules/xyq/hikermovie.json\")) {\n    //计算时间间隔\n    var start = new Date(fetch(\"hiker://files/rules/xyq/hikerupdate.txt\", {}));\n    var nowt = new Date();\n    var D_T = nowt.getTime() - start.getTime();\n    var D_D = D_T / (1000 * 3600 * 24);\n    var tdif = parseInt(D_D) + '';\n    //log(tdif);\n    //默认间隔超过设置天数就取一次云端文件\n    if (tdif >= uptime || tdif < 0) {\n        uprulefile();\n    }\n} else {\n    //如果少一个文件就自动取云端文件\n    uprulefile();\n}\n\n\n\n//执行需要预处理的站点\nvar lac = fetch('hiker://files/rules/xyq/hikermovie.js');\n//log(lac.length);\nif (lac.search(/lazyRule/) != -1) {\n    eval(lac);\n    hikerpre();\n} else {\n    //如果本地文件不对将尝试自修复\n    uprulefile();\n    setError('规则修复完成，如有问题请反馈。')\n}","pages":"[]","icon":"https://codeberg.org/lzk23559/PublicRule/raw/branch/master/xqys.png"},{"last_chapter_rule":"js:\neval(JSON.parse(fetch('hiker://page/chapter', {})).rule);","title":"APP影视(P)","author":"香雅情","version":13,"type":"all","url":"hiker://empty","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar items = [];\nvar self = JSON.parse(getRule()).title;\nvar setjson = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {}));\nvar ssmd = setjson.ssmode;\nvar ssxc = setjson.sscount;\nvar locver = MY_RULE.version;\n\nitems.push({\n    title: '🔍设置' + '(' + (ssmd == 1 ? '聚' + ssxc : '列') + ')',\n    //title : '🔍设置'+'('+ssxc+')',\n    url: $('hiker://empty').rule((locver) => {\n        eval(JSON.parse(fetch('hiker://page/setting', {})).rule);\n    }, locver),\n    col_type: 'flex_button'\n});\n\nitems.push({\n    title: '资源网采集',\n    url: 'hiker://home@资源网采集.xyq||https://haikuoshijie.cn/topic/6033',\n    col_type: 'flex_button'\n});\nitems.push({\n    title: '香情影视',\n    url: 'hiker://home@香情影视||https://mp.weixin.qq.com/s/XpUI3F1nBvlNgHXvY71t0g',\n    col_type: 'flex_button'\n});\nitems.push({\n    title: \"搜索\",\n    url: $.toString(() => {\n        var link = 'hiker://empty#noRecordHistory#$$$' + input + '$$$fypage$$$';\n        //log(link);\n        return $(link).rule(() => {\n            $.require('hiker://page/sear');\n        });\n    }),\n    extra: {\n        onChange: \"putVar('xyqappystext',input)\",\n        titleVisible: true\n    },\n    desc: \"请输入搜索关键词\",\n    col_type: \"input\"\n});\n\nvar ssyq = ['资源网采集搜@@资源网采集.xyq', '香情影视搜@@香情影视'];\nif (self !== 'APP影视(P)') {\n    items.push({\n        title: self + '搜',\n        url: $(\"#noLoading#\").lazyRule(rule => 'hiker://search?s=' + getVar('xyqappystext') + '&rule=' + rule, self),\n        col_type: 'flex_button'\n    });\n} else {\n    for (var yq in ssyq) {\n        var kj = ssyq[yq].split('@@');\n        items.push({\n            title: kj[0],\n            url: $(\"#noLoading#\").lazyRule(rule => 'hiker://search?s=' + getVar('xyqappystext') + '&rule=' + rule, kj[1]),\n            col_type: \"flex_button\"\n        });\n    }\n}\nitems.push({\n    title: '茶杯狐搜',\n    url: $('hiker://empty#x#fypage@-1@*24@#x#').rule(() => {\n        var res = {};\n        var d = [];\n        var spl = MY_URL.split('#x#');\n        //var lin = 'https://api2.jackeriss.com/api/v1/search/?text=' + spl[1] + '&type=0&from=' + spl[2] + '&size=20';\n        var lin = 'https://api.jackeriss.com/api/v1/search/?text=' + getVar('xyqappystext') + '&type=0&from=' + spl[1] + '&size=24';\n        var pn = spl[1] / 24 + 1;\n        var urlo = JSON.parse(request(lin, {}));\n        var urlt = JSON.parse(fetch(lin.replace('type=0', 'type=1'), {}));\n        //log(urlo);\n        if (urlo.resources.length < 1 && urlt.resources.length < 1) {\n            d.push({\n                title: '当前关键字  ' + getVar('xyqappystext') + '  无搜索结果',\n                col_type: 'text_center_1'\n            });\n        }\n        if (urlo.resources.length > 0) {\n            d.push({\n                title: '♥当前第' + pn + '页',\n                col_type: 'text_center_1'\n            });\n\n            for (var i = 0; i < urlo.resources.length; i++) {\n                var title = urlo.resources[i].text.replace(/\\<.*?\\>/g, '');\n                var url = urlo.resources[i].url;\n                var desc = urlo.resources[i].website;\n                d.push({\n                    title: title.replace(getVar('xyqappystext'), '““' + getVar('xyqappystext') + '””') + '  ' + desc + '  在线',\n                    url: url,\n                    //desc: '在线搜索结果',\n                    col_type: 'text_1'\n                });\n            }\n        }\n\n        if (urlt.resources.length > 0) {\n            for (var j = 0; j < urlt.resources.length; j++) {\n                var title = urlt.resources[j].text.replace(/\\<.*?\\>/g, '');\n                var url = urlt.resources[j].url;\n                var desc = urlt.resources[j].website;\n                d.push({\n                    title: title.replace(getVar('xyqappystext'), '““' + getVar('xyqappystext') + '””') + '  ' + desc + '  下载',\n                    url: url,\n                    //desc: '下载搜索结果',\n                    col_type: 'text_1'\n                });\n            }\n        }\n        res.data = d;\n        setResult(res);\n    }),\n    col_type: \"flex_button\"\n});\n/*\ntry {\n    var appfile = fetchCache('https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/APP.json', 24);\n} catch (e) {\n    appfile = '';\n}\nif (/emory/.test(appfile)) {\n    //log('当前加载的是缓存数据');\n    var html = JSON.parse(appfile);\n} else {\n    log('当前加载的是内置数据');\n    var html = JSON.parse(JSON.parse(fetch('hiker://page/ResCode', {})).rule);\n};\n*/\nvar remfile=fetchCache('https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/rule/app.txt',24);\nif (/\\=http/.test(remfile)) {\n    eval(JSON.parse(fetch('hiker://page/conver', {})).rule);\n    remfile = JSON.stringify(newfile);\n}\n//log(remfile);\nvar html = JSON.parse(remfile);\nvar conts = html.data;\nfor (var i = 0; i < conts.length; i++) {\n    var list = conts[i].list;\n    var tytit = conts[i].title;\n    items.push({\n        title: tytit + ' ' + [list.length],\n        url: 'hiker://empty',\n        col_type: 'text_1'\n    });\n\n    for (var j = 0; j < list.length; j++) {\n        var title = list[j].title;\n        var turl = list[j].url;\n        var img = list[j].img;\n        var litit = list[j].murl;\n        if (/\\/vod\\//i.test(turl)) {\n            var url = 'hiker://empty$$' + litit + '$$' + turl + '$$?ac=list&class=&page=fypage&area=&type=&start=$$';\n        } else {\n            if (turl.indexOf('api.php/app/') != -1) {\n                var url = 'hiker://empty$$' + litit + '$$' + turl + '$$index_video?token=$$';\n            } else if (turl.indexOf('xgapp.php/v1/') != -1) {\n                var url = 'hiker://empty$$' + litit + '$$' + turl + '$$index_video?token=$$';\n            } else {\n                var url = 'hiker://empty$$' + litit + '$$' + turl + '$$/vodPhbAll$$';\n            }\n        }\n        items.push({\n            title: title,\n            url: url,\n            pic_url: img,\n            col_type: 'icon_round_small_4'\n        });\n    }\n}\nsetResult({\n    data: items\n});","searchFind":"js:\n$.require('hiker://page/sear');","search_url":"hiker://empty$$$**$$$fypage$$$","titleColor":"","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"js:\nvar res = {};\nvar items = [];\nvar typet = MY_URL.split('$$')[1];\nvar murl = MY_URL.split('$$')[2];\nvar turl = murl + MY_URL.split('$$')[3];\n\nif (/\\/vod\\//.test(turl)) {\n    var pg = MY_URL.match(/page\\=([\\d]*)/)[1];\n    if (pg == 1) {\n        //var typt = ('电影&连续剧&综艺&动漫').split('&');\n        //var typl = ('movie&tvplay&tvshow&comic').split('&');\n        var typl = Object.keys(JSON.parse(fetch(murl + '?ac=flitter', {})));\n\n        for (var i = 0; i < typl.length; i++) {\n            var tyurl = murl + '?ac=list&class=' + typl[i] + '&page=fypage&area=&type=&start=';\n            items.push({\n                title: typl[i],\n                url: $(tyurl).rule((murl) => {\n                    var res = {};\n                    var items = [];\n                    var murl = murl;\n                    var html = JSON.parse(getResCode());\n                    eval(JSON.parse(fetch('hiker://page/tvlistdata', {})).rule);\n                    res.data = items;\n                    setHomeResult(res);\n                }, murl),\n                col_type: 'flex_button'\n            })\n        }\n        items.push({\n            col_type: 'line'\n        });\n    }\n\n    try {\n        var html = JSON.parse(fetch(turl));\n        eval(JSON.parse(fetch('hiker://page/tvlistdata', {})).rule);\n    } catch (e) {}\n} else {\n    if (/dijiaxia/.test(murl)) {\n        murl = 'http://www.dijiaxia.com/api.php/app/'\n    }\n    try {\n        if (murl.search(/api.php\\/app/) != -1) {\n\n            var typcode = request(murl + \"nav?token=\", {\n                headers: {\n                    \"User-Agent\": \"Dart/2.14 (dart:io)\"\n                }\n            });\n            if (typcode.indexOf('检测中') != -1) {\n                typcode = fetch(murl + \"nav?token=\" + '&btwaf' + typcode.match(/btwaf(.*?)\\\"/)[1], {});\n            }\n            var typec = JSON.parse(typcode).list;\n\n        } else if (murl.search(/xgapp.php\\/v1/) != -1) {\n\n            var typcode = request(murl + \"nav?token=\", {\n                headers: {\n                    \"User-Agent\": \"Dart/2.14 (dart:io)\"\n                }\n            });\n            if (typcode.indexOf('检测中') != -1) {\n                typcode = fetch(murl + \"nav?token=\" + '&btwaf' + typcode.match(/btwaf(.*?)\\\"/)[1], {});\n            }\n            var typec = JSON.parse(typcode).data;\n\n        } else {\n            if (murl.search(/mogai_api/) != -1) {\n                var typcode = request(murl + \"/types\", {\n                    headers: {\n                        \"User-Agent\": \"Dart/2.14 (dart:io)\"\n                    }\n                });\n            } else {\n                var typcode = request(murl + \"/types\", {\n                    headers: {\n                        \"User-Agent\": \"okhttp/4.1.0\"\n                    }\n                });\n            }\n            if (typcode.indexOf('检测中') != -1) {\n                typcode = fetch(murl + \"/types\" + '?btwaf' + typcode.match(/btwaf(.*?)\\\"/)[1], {});\n            }\n            var typec = JSON.parse(typcode).data.list;\n\n        }\n        var typet = \"\",\n            typel = \"\";\n        for (var j = 0; j < typec.length; j++) {\n            typet += typec[j].type_name;\n            typel += typec[j].type_id;\n            if (j < typec.length - 1) {\n                typet += \"&\";\n                typel += \"&\";\n            }\n        }\n        var typt = typet.split('&');\n        var typl = typel.split('&');\n\n        for (var i = 0; i < typt.length; i++) {\n            if (murl.indexOf('api.php/app/') != -1) {\n                if (/fantuan/.test(murl)) {\n                    var tyurl = 'https://fantuan.wkfile.com/api.php/app/video?pg=fypage&tid=' + typl[i] + '&class=&area=&lang=&year=&token=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\n                } else {\n                    var tyurl = murl + 'video?pg=fypage&tid=' + typl[i] + '&class=&area=&lang=&year=&token=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\n                }\n            } else if (murl.indexOf('xgapp.php/v1/') != -1) {\n                var tyurl = murl + 'video?pg=fypage&tid=' + typl[i] + '&class=&area=&lang=&year=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\n            } else {\n                if (/iopenyun/.test(murl)) {\n                    var tyurl = murl + '/list?type=' + typl[i] + '&class=&lang=&area=&year=&by=&page=fypage&limit=9;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}'\n                } else if (murl.search(/mogai_api/) != -1) {\n                    var tyurl = murl + '?type=' + typl[i] + '&class=&lang=&area=&year=&by=&page=fypage&limit=9;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}'\n                } else {\n                    var tyurl = murl + '?type=' + typl[i] + '&class=&lang=&area=&year=&by=&page=fypage&limit=9;get;utf-8;{User-Agent@okhttp/4.1.0}'\n                }\n            }\n            items.push({\n                title: typt[i],\n                url: $(tyurl).rule((murl) => {\n                    var res = {};\n                    var items = [];\n                    var murl = murl;\n                    var rescode = getResCode();\n                    if (rescode.indexOf('检测中') != -1) {\n                        rescode = fetch(MY_URL + '&btwaf' + rescode.match(/btwaf(.*?)\\\"/)[1], {});\n                    }\n                    var html = JSON.parse(rescode);\n                    eval(JSON.parse(fetch('hiker://page/applistdata', {})).rule);\n\n                    res.data = items;\n                    setHomeResult(res);\n                }, murl),\n                col_type: 'flex_button'\n            })\n        }\n        items.push({\n            col_type: 'line'\n        });\n    } catch (e) {}\n\n\n    try {\n        if (murl.search(/mogai_api/) != -1) {\n            var html = request(turl, {\n                headers: {\n                    \"User-Agent\": \"Dart/2.14 (dart:io)\"\n                }\n            });\n        } else {\n            var html = request(turl, {\n                headers: {\n                    \"User-Agent\": \"okhttp/4.1.0\"\n                }\n            });\n        }\n        if (html.indexOf('检测中') != -1) {\n            html = fetch(turl + '&btwaf' + html.match(/btwaf(.*?)\\\"/)[1], {});\n        }\n        var html = JSON.parse(html);\n        //log(html);\n        //if (murl.indexOf('xgapp.php/v1/') != -1) {\n        eval(JSON.parse(fetch('hiker://page/appindexdata', {})).rule);\n        //} else {\n        //log(html);\n        //eval(JSON.parse(fetch('hiker://page/applistdata', {})).rule);\n        //}\n    } catch (e) {}\n\n}\n\nres.data = items;\nsetHomeResult(res);","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"if (!fileExist('hiker://files/rules/xyq/appmset.json')) {\n    let set = `{\"ssmode\":\"0\",\"sscount\":\"5\",\"enDn\":\"0\"}`;\n    writeFile(\"hiker://files/rules/xyq/appmset.json\", set);\n}\nvar ruleset = fetch('hiker://files/rules/xyq/appmset.json', {});\nif (!JSON.parse(ruleset).enDn) {\n    let set = ruleset.replace('\\\"\\}', '\\\"\\,\\\"enDn\\\"\\:\\\"0\\\"\\}');\n    writeFile(\"hiker://files/rules/xyq/appmset.json\", set);\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"搜索\",\"path\":\"sear\",\"rule\":\"var res = {};\\nvar items = [];\\n//设置搜索线程\\nvar ssmode = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).ssmode;\\nvar key = MY_URL.split('$$$')[1];\\n//setError(le);\\nif (ssmode == '0') {\\n    setPageTitle(key + ' 的搜索结果')\\n};\\n/*try {\\n    var appfile = fetchCache('https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/APP.json', 24);\\n} catch (e) {\\n    appfile = '';\\n}*/\\nvar remfile = fetchCache('https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/rule/app.txt',24);\\nif (/\\\\=http/.test(remfile)) {\\n    eval(JSON.parse(fetch('hiker://page/conver', {})).rule);\\n    remfile = JSON.stringify(newfile);\\n}\\nvar html = JSON.parse(remfile);\\n\\n/*\\nif (/emory/.test(appfile)) {\\n    var html = JSON.parse(appfile);\\n} else {\\n    log('当前加载的是内置数据');\\n    var html = JSON.parse(JSON.parse(fetch('hiker://page/ResCode', {})).rule);\\n};\\n*/\\nvar dlist = html.data;\\n\\nif (ssmode == '1' || MY_TYPE == 'home') {\\n    for (var l = 0; l < dlist.length; l++) {\\n        var list = dlist[l].list;\\n        var tytit = dlist[l].title;\\n        items.push({\\n            title: MY_TYPE == \\\"home\\\" ? \\\"点击查看 \\\" + tytit + \\\" 分类 ““\\\" + key + \\\"”” 的聚搜结果\\\" : \\\"点击查看 \\\" + tytit + \\\" 分类 \\\" + key + \\\" 的聚搜结果\\\",\\n            url: \\\"hiker://page/ss2\\\",\\n            col_type: 'text_1',\\n            extra: {\\n                list: list,\\n                tytit: tytit,\\n                url: 'hiker://empty$$$' + key + '$$$fypage$$$'\\n            }\\n        });\\n\\n    } //for i\\n}; //end mode 1\\n\\nif (ssmode == '0' || MY_TYPE == 'home') {\\n    for (var i = 0; i < dlist.length; i++) {\\n        var list = dlist[i].list;\\n        var tytit = dlist[i].title;\\n\\n        items.push({\\n            title: MY_TYPE == \\\"home\\\" ? \\\" 选择一个 \\\" + dlist[i].title + \\\" 项目查看 ““\\\" + key + \\\"”” 的搜索结果\\\" : \\\" 选择一个 \\\" + dlist[i].title + \\\" 项目查看 \\\" + key + \\\" 的搜索结果\\\",\\n            col_type: 'text_1'\\n        });\\n\\n        for (var j = 0; j < list.length; j++) {\\n            var link = list[j].url;\\n            var litit = list[j].murl;\\n            if (/\\\\/vod\\\\//.test(link)) {\\n                if (/19jx|293ys|zhaikanys|ji\\\\-ding\\\\-he|phoebe|yunbo\\\\.bxin|lanrentk|hetaoys|pxun|139\\\\.155|fkkdy|056158|aixixi|ruoxinew|feifan123|siqitv/.test(link)) {\\n                    var hmurl = link + '?ac=list&zm=' + key + '&page=fypage';\\n                } else {\\n                    var hmurl = link + '?ac=list&wd=' + key + '&page=fypage';\\n                }\\n            } else {\\n                if (/dijiaxia/.test(link)) {\\n                    link = 'http://www.dijiaxia.com/api.php/app/'\\n                };\\n                if (link.indexOf('api.php/app/') != -1) {\\n                    var hmurl = link + 'search?pg=fypage&text=' + key + '&token=';\\n                } else if (link.indexOf('xgapp.php/v1/') != -1) {\\n                    var hmurl = link + 'search?pg=fypage&text=' + key;\\n                } else {\\n                    if (/iopenyun/.test(link)) {\\n                        var hmurl = link + '/list?page=fypage&limit=10&wd=' + key;\\n                    } else {\\n                        var hmurl = link + '?page=fypage&limit=10&wd=' + key;\\n                    }\\n                }\\n            }\\n            items.push({\\n                title: list[j].title,\\n                img: list[j].img,\\n                url: $('hiker://empty#x#' + hmurl + '#x#' + link + '#x#' + litit + '#x#' + key + '#x#').rule(() => {\\n                    $.require('hiker://page/searerj');\\n                }),\\n                col_type: 'icon_round_small_4'\\n                //col_type: 'text_3'\\n                //link:link,\\n                //type: i\\n            });\\n\\n        } //for j\\n\\n\\n    } //for i\\n\\n} //end mode 0\\n\\n\\nres.data = items;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"APP分类列表\",\"path\":\"applistdata\",\"rule\":\"if (html.list) {\\n    var list = html.list;\\n} else if (html.data && html.data.list) {\\n    var list = html.data.list;\\n} else {\\n    var list = html.data;\\n}\\n//log(list);\\nfor (var i = 0; i < list.length; i++) {\\n    var title = list[i].vod_name;\\n    var img = list[i].vod_pic;\\n    var url = list[i].vod_id;\\n    var desc = list[i].vod_remarks;\\n    var nowDate = new Date();\\n    var month = nowDate.getMonth() + 1 < 10 ? \\\"0\\\" + (nowDate.getMonth() + 1) : nowDate.getMonth() + 1;\\n    var day = nowDate.getDate() < 10 ? \\\"0\\\" + nowDate.getDate() : nowDate.getDate();\\n    var dateStr = month + '' + day;\\n    if (html.list) {\\n        var link = murl + 'video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n    } else if (html.data && html.data.list) {\\n        if (murl.search(/mogai_api/) != -1) {\\n            var link = murl + '/detail?key=' + dateStr + '&vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n        } else {\\n            var link = murl + '/detail?key=' + dateStr + '&vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@okhttp/4.1.0}';\\n        }\\n    } else {\\n        var link = murl + 'video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n    };\\n    if (/fantuan/.test(murl)) {\\n        var link = 'https://fantuan.wkfile.com/api.php/app/video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n    } else if (/iopenyun/.test(murl)) {\\n        var link = murl + '/detailID?vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n    } else if (/dijiaxia/.test(murl)) {\\n        var link = 'http://www.dijiaxia.com/api.php/app/video_detail?id=' + url;\\n    }\\n    items.push({\\n        title: title,\\n        pic_url: img + '@Referer=',\\n        url: $(link).rule(() => {\\n            var res = {};\\n            var items = [];\\n            items.push({\\n                title: '',\\n                desc: '255&&float',\\n                url: '',\\n                col_type: 'x5_webview_single'\\n            });\\n            refreshX5WebView('');\\n            var html = JSON.parse(getResCode());\\n            var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n            try {\\n                eval(JSON.parse(fetch('hiker://page/appmovlist', {})).rule);\\n            } catch (e) {}\\n            res.data = items;\\n            setHomeResult(res);\\n        }),\\n        desc: desc,\\n        col_type: 'movie_3_marquee'\\n    });\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"TV列表解析\",\"path\":\"tvlistdata\",\"rule\":\"var list = html.data;\\nfor (var i = 0; i < list.length; i++) {\\n    var title = list[i].title;\\n    var img = list[i].pic;\\n    var url = list[i].nextlink;\\n    var desc = list[i].state;\\n    url = url.startsWith('http') ? url : murl + '?ac=detail&ids=' + url;\\n    items.push({\\n        title: title,\\n        pic_url: img + '@Referer=',\\n        url: $(url).rule(() => {\\n            var res = {};\\n            var items = [];\\n            var html = JSON.parse(getResCode());\\n            var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n            items.push({\\n                title: '',\\n                desc: '255&&float',\\n                url: '',\\n                col_type: 'x5_webview_single'\\n            });\\n            refreshX5WebView('');\\n            try {\\n            eval(JSON.parse(fetch('hiker://page/tvmovlist', {})).rule);\\n            } catch (e) {}\\n            res.data = items;\\n            setHomeResult(res);\\n        }),\\n        desc: desc,\\n        col_type: 'movie_3_marquee'\\n    });\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"APP简介与选集\",\"path\":\"appmovlist\",\"rule\":\"if (html.data.vod_url_with_player) {\\n    var conts = html.data.vod_url_with_player;\\n    if (conts.length < 1) {\\n        conts = html.data.vod_play_url.split('$$$');\\n        var tabs = html.data.vod_play_from.split('$$$');\\n    }\\n} else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n    var conts = html.data.vod_info.vod_url_with_player;\\n    if (conts.length < 1) {\\n        conts = html.data.vod_info.vod_play_url.split('$$$');\\n        var tabs = html.data.vod_info.vod_play_from.split('$$$');\\n    }\\n} else {\\n    var conts = html.data.vod_play_list;\\n    if (conts.length < 1) {\\n        conts = html.data.vod_play_url.split('$$$');\\n        var tabs = html.data.vod_play_from.split('$$$');\\n    }\\n}\\n\\n//log(html);\\n\\nvar thumb = html.data.vod_info ? html.data.vod_info.vod_pic : html.data.vod_pic;\\nvar des = html.data.vod_info ? html.data.vod_info.vod_content : html.data.vod_content;\\nitems.push({\\n    title: '剧情简介：',\\n    desc: des,\\n    pic_url: thumb,\\n    url: $('hiker://empty#noRecordHistory#').rule((des) => {\\n        setResult([{\\n            title: des,\\n            col_type: 'long_text'\\n        }]);\\n    }, des),\\n    col_type: 'movie_1_vertical_pic'\\n});\\neval(JSON.parse(fetch('hiker://page/dnplugin', {})).rule);\\n\\nitems.push({\\n    title: '““排序””',\\n    url: \\\"hiker://empty@lazyRule=.js:putMyVar('appmappsort', getMyVar('appmappsort','1')=='1'?'0':'1');refreshPage(false);'toast://切换成功！'\\\",\\n    col_type: 'scroll_button'\\n});\\nvar title = MY_URL;\\nfor (var k = 0; k < conts.length; k++) {\\n    //setError(list.length);\\n    if (html.data.vod_url_with_player) {\\n        var ptab = conts[k].code ? conts[k].code : tabs[k];\\n    } else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n        var ptab = conts[k].code ? conts[k].code : tabs[k];\\n    } else {\\n        var ptab = conts[k].from ? conts[k].from : tabs[k];\\n    }\\n    items.push({\\n        title: (getMyVar(title, '0') == k ? '👉🏻' : '') + ptab,\\n        url: `hiker://empty@lazyRule=.js:putMyVar('` + title + \\\"', '\\\" + k + `');refreshPage();'toast://切换成功！'`,\\n        col_type: 'scroll_button'\\n    });\\n\\n}\\n\\n\\n\\nvar jiek = '';\\n//for (var i = 0; i < conts.length; i++) {\\nif (getMyVar('appmappsort', '1') == '1') {\\n    if (conts[getMyVar(title, '0')].urls) {\\n        var list = conts[getMyVar(title, '0')].urls;\\n    } else if (conts[getMyVar(title, '0')].url) {\\n        var list = conts[getMyVar(title, '0')].url.split(\\\"#\\\");\\n    } else {\\n        var list = conts[getMyVar(title, '0')].split(\\\"#\\\");\\n    };\\n} else {\\n    if (conts[getMyVar(title, '0')].urls) {\\n        var list = conts[getMyVar(title, '0')].urls.reverse();\\n    } else if (conts[getMyVar(title, '0')].url) {\\n        var list = conts[getMyVar(title, '0')].url.split(\\\"#\\\").reverse();\\n    } else {\\n        var list = conts[getMyVar(title, '0')].split(\\\"#\\\").reverse();\\n    }\\n};\\n//setError(list.length);\\nif (html.data.vod_url_with_player) {\\n    var ptab = conts[getMyVar(title, '0')].code ? conts[getMyVar(title, '0')].code : tabs[getMyVar(title, '0')];\\n} else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n    var ptab = conts[getMyVar(title, '0')].code ? conts[getMyVar(title, '0')].code : tabs[getMyVar(title, '0')];\\n} else {\\n    var ptab = conts[getMyVar(title, '0')].from ? conts[getMyVar(title, '0')].from : tabs[getMyVar(title, '0')];\\n}\\n/*\\n    items.push({\\n        title: ptab + ' 🔗' + [i + 1] + '/' + [conts.length] + \\\"““↓↑””\\\",\\n        url: \\\"hiker://empty@lazyRule=.js:putVar('appmappsort', getVar('appmappsort','1')=='1'?'0':'1');refreshPage(false);'toast://切换成功！'\\\",\\n        col_type: 'scroll_button'\\n    });*/\\n\\nfor (var j = 0; j < list.length; j++) {\\n    if (conts[getMyVar(title, '0')].urls) {\\n        var vlink = list[j].url.replace(/#456#/g, 'http').replace(/#123#/g, '.').replace(/#789#/g, ':');\\n        var title = list[j].name;\\n    } else {\\n        var vlink = list[j].split(\\\"$\\\")[1];\\n        var title = list[j].split(\\\"$\\\")[0];\\n    }\\n    try {\\n        if (html.data.vod_url_with_player) {\\n            var jiek = conts[getMyVar(title, '0')].parse_api;\\n        } else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n            var jiek = conts[getMyVar(title, '0')].parse_api;\\n        } else {\\n            if (conts[getMyVar(title, '0')].player_info.parse2 && (conts[getMyVar(title, '0')].player_info.parse2).indexOf(\\\"=\\\") != -1) {\\n                var jiek = (conts[getMyVar(title, '0')].player_info.parse2).replace(/\\\\.\\\\./g, \\\".\\\").split(',')[0].replace('jsonbs', '');\\n            } else if (conts[getMyVar(title, '0')].player_info.parse && (conts[getMyVar(title, '0')].player_info.parse).indexOf(\\\"=\\\") != -1) {\\n                var jiek = (conts[getMyVar(title, '0')].player_info.parse).replace(/\\\\.\\\\./g, \\\".\\\").split(',')[0];\\n            } else {\\n                var jiek = \\\"\\\";\\n            }\\n            //setError(jiek);                \\n        }\\n    } catch (e) {}\\n    //jiek拼接\\n    if (jiek != '' && jiek != null) {\\n        if (jiek.substring(0, 4) == 'http') {\\n            jiek = jiek;\\n        } else if (jiek.substring(0, 2) == '\\\\/\\\\/') {\\n            jiek = 'https:' + jiek;\\n        }\\n    } else {\\n        jiek = \\\"\\\";\\n    }\\n    //对失效接口进行替换\\n    if (/cokemv/.test(myurl) && /cokeqie|xin|90mm/.test(ptab)) {\\n        jiek = 'https://player.90mm.me/play.php?url=';\\n    } else if (/json\\\\.m3u8\\\\.tv|www\\\\.x-n\\\\.cc/.test(jiek)) {\\n        jiek = 'https://jx.m3u8.tv/jiexi/?url=';\\n    } else if (/cjt521/.test(myurl)) {\\n        jiek = conts[getMyVar(title, '0')].player_info.parse;\\n    } else if (jiek.indexOf('jpg.hou.lu/jm/za/index.php') != -1) {\\n        jiek = 'http://vip.mengx.vip/home/api?type=ys&uid=3249696&key=aefqrtuwxyEFHKNOQY&url=';\\n    } else if (ptab == 'renrenmi' && jiek.search(/jhdyw/) != -1) {\\n        jiek = 'http://www.1080kan.cc/jiexi/rrmi.php?url=';\\n    } else if (ptab == 'fqfilm' && jiek.search(/jhdyw/) != -1) {\\n        jiek = 'http://www.1080kan.cc/jiexi/fq.php?url=';\\n    } else if (ptab == 'rrsp' && jiek.search(/jhdyw/) != -1) {\\n        jiek = 'http://www.1080kan.cc/jiexi/rr.php?url=';\\n    } else if (/miaoparty/.test(ptab) && myurl.search(/fun4k/) != -1) {\\n        jiek = 'https://www.fun4k.com/aplayer/?url=';\\n    } else if (/jhyun\\\\.php/.test(jiek)) {\\n        jiek = jiek.replace('http://svip.jhyun.jx.cn:1234/jhyun.php?url=', 'https://api.jhdyw.vip/?url=');\\n    };\\n    //打印接口\\n    try {\\n        if (j == '0') {\\n            if (html.data.vod_url_with_player) {\\n                log('\\\\n线路：' + ptab + '\\\\n视频：' + vlink + '\\\\n' + '解析接口：\\\\n' + jiek);\\n            } else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n                log('\\\\n线路：' + ptab + '\\\\n视频：' + vlink + '\\\\n' + '解析接口：\\\\n' + jiek);\\n            } else {\\n                if (conts[getMyVar(title, '0')].player_info.parse2 && (conts[getMyVar(title, '0')].player_info.parse2).indexOf(\\\"=\\\") != -1) {\\n                    log('\\\\n线路：' + ptab + '\\\\n视频：' + vlink + '\\\\n' + '解析接口：\\\\n' + conts[getMyVar(title, '0')].player_info.parse2.replace(/\\\\.\\\\./g, \\\".\\\").replace(/\\\\,/g, \\\"\\\\n\\\\n\\\"));\\n                } else if (conts[getMyVar(title, '0')].player_info.parse && (conts[getMyVar(title, '0')].player_info.parse).indexOf(\\\"=\\\") != -1) {\\n                    log('\\\\n线路：' + ptab + '\\\\n视频：' + vlink + '\\\\n' + '解析接口：\\\\n' + conts[getMyVar(title, '0')].player_info.parse.replace(/\\\\.\\\\./g, \\\".\\\").replace(/\\\\,/g, \\\"\\\\n\\\\n\\\"));\\n                } else {\\n                    log('\\\\n线路：' + ptab + '\\\\n视频：' + vlink + '\\\\n' + '解析接口：\\\\n' + jiek);\\n                }\\n                //setError(jiek);                \\n            }\\n        }\\n    } catch (e) {}\\n    //声明链接\\n    var link = jiek + vlink;\\n    /*\\n    if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos/.test(vlink) && /http/.test(vlink)) {\\n        link = vlink;\\n    }\\n    */\\n    //log(link);\\n    title = title.match(/(第|\\\\d|-)*(集|话|期)/g) ? title.replace(/第|集|话|期/g, '') : title;\\n    if (list.length <= 4) {\\n        var clt = 'text_2';\\n    } else {\\n        var clt = isNaN(title) ? 'flex_button' : 'text_5'\\n    };\\n    items.push({\\n        title: title,\\n        url: $('hiker://empty').lazyRule((ptab, link, myurl, vlink) => {\\n                function openurl(resurl) {\\n                    if (resurl.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) && resurl.search(/html|bilibili|ixigua/) != -1) {\\n                        //html网页调用断插解析\\n                        var enDn = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n                        if (enDn == '1') {\\n                            log('调用断插解析html');\\n                            eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                            eval(fetch(config.cj));\\n                            return aytmParse(resurl);\\n                        } else {\\n                            return resurl\\n                        };\\n                    } else if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos|netease\\\\.com/.test(resurl) && /http/.test(resurl) && !/\\\\.html/.test(resurl) && !/\\\\=http/.test(resurl) && ptab != 'duoduozy') {\\n                        if (/wkfile/.test(resurl)) {\\n                            return resurl + ';{Referer@https://fantuan.wkfile.com/}'\\n                        } else {\\n                            return /\\\\=/.test(resurl) ? resurl.split('=')[1] : resurl + '#isVideo=true#';\\n                        }\\n                    } else {\\n                        //调用断插通用函数解析\\n                        var enDn = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n                        if (enDn == '1') {\\n                            log('调用断插通用函数解析\\\\n' + ptab + '(通用函数)');\\n                            eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                            eval(fetch(config.cj));\\n                            var name = ptab + '(通用函数)';\\n                            return ParseS[name](resurl, myurl);\\n\\n                        } else if (ptab == 'duoduozy') {\\n                            eval(getCryptoJS());\\n\\n                            function De(word) {\\n                                var a = CryptoJS.enc.Utf8.parse(md5('rXjWvXl6'))\\n                                var t = CryptoJS.enc.Utf8.parse('NXbHoWJbpsEOin8b')\\n                                return CryptoJS.AES.decrypt(word, a, {\\n                                    iv: t,\\n                                    mode: CryptoJS.mode.CBC,\\n                                    padding: CryptoJS.pad.Pkcs7\\n                                }).toString(CryptoJS.enc.Utf8)\\n                            };\\n                            //var ddzy = 'adHuRo0dcuHoM163L1y4' + base64Encode(srcurl).slice(10);\\n                            //https://bo.dd520.cc/xplay/api.php\\n                            //https://bo.dd520.cc/xmplayer/api.php                                                       \\n                            var ddwy = fetch('https://jhpc.manduhu.com/duoduo/api.php', {\\n                                headers: {\\n                                    \\\"User-Agent\\\": MOBILE_UA\\n                                },\\n                                body: 'url=' + resurl,\\n                                method: 'POST'\\n                            });\\n                            //log(ddwy);\\n                            return De(JSON.parse(ddwy).url);\\n                        } else if (/miaoparty/.test(ptab)) {\\n                            requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                            return x5rule('https://www.fun4k.com/aplayer/?url=' + resurl);\\n                        } else {\\n                            return resurl\\n                        };\\n                    }\\n                };\\n                \\n                try {\\n                    var enDn = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n                    if (enDn == '1' && vlink.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) && vlink.search(/html|bilibili|ixigua/) != -1) {\\n                        log('已开启断插，将调用断插解析html');\\n                        eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                        eval(fetch(config.cj));\\n                        return aytmParse(vlink);\\n                    };\\n                } catch (e) {}\\n                \\n                var srcurl = link;\\n                //log(srcurl);\\n                //动态解析代码开始\\n                try {\\n                    //处理指定视频与线路\\n                    if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos|netease\\\\.com/.test(srcurl) && /http/.test(srcurl) && !/\\\\.html/.test(srcurl) && !/\\\\=http/.test(srcurl)) {\\n                        if (/wkfile/.test(srcurl)) {\\n                            return srcurl + ';{Referer@https://fantuan.wkfile.com/}'\\n                        } else {\\n                            return /\\\\=/.test(srcurl) ? srcurl.split('=')[1] : srcurl + '#isVideo=true#';\\n                        }\\n                    } else if (srcurl.indexOf(\\\"/share/\\\") != -1) {\\n                        try {\\n                            var link = srcurl.split(\\\"/share\\\")[0];\\n                            var fc = fetch(srcurl, {}).replace(\\\"var purl\\\", \\\"var main\\\");\\n                            if (fc.indexOf(\\\"main\\\") != -1) {\\n                                var mat = fc.match(/var main.*?;/)[0];\\n                                eval(mat);\\n                                var play = (main.indexOf(\\\"http\\\") != -1 ? main : link + main);\\n                            } else {\\n                                var main = fc.match(/url:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1];\\n                                var play = (main.indexOf(\\\"http\\\") != -1 ? main : link + main)\\n                            };\\n                            return play;\\n                        } catch (e) {\\n                            return 'x5WebView://' + (srcurl)\\n                        }\\n\\n                    } else if (/983vip/.test(srcurl)) {\\n                        return JSON.parse(fetch(srcurl, {\\n                            headers: {\\n                                \\\"User-Agent\\\": MOBILE_UA\\n                            },\\n                            redirect: false,\\n                            withHeaders: true\\n                        })).headers.location[0];\\n                    } else if (/x\\\\-n\\\\.cc|nhdz666/.test(srcurl) && /\\\\.html|bilibili/.test(srcurl)) {\\n                        return openurl(vlink);\\n                    }\\n                    //处理指定视频和线路结束\\n                    //----分割线----//\\n                    var scode = JSON.parse(fetch(srcurl, {\\n                        headers: {\\n                            \\\"User-Agent\\\": \\\"okhttp/4.1.0\\\"\\n                        },\\n                        redirect: false,\\n                        withStatusCode: true\\n                    }));\\n                    //log(scode);\\n                    if (scode.statusCode == '302' || scode.statusCode == '301') {\\n                        //打开解析有302重定向的链接\\n                        var redurl = scode.headers.location[0].replace(/\\\\\\\\/g, '');\\n                        if (/\\\\=http/.test(redurl) && /html|bilibili|key\\\\=/.test(redurl)) {\\n                            return JSON.parse(fetch(redurl, {})).url;\\n                        } else if (/\\\\=http/.test(redurl) && /\\\\.m3u8|\\\\.mp4|\\\\.flv/.test(redurl)) {\\n                            return redurl.substring(redurl.indexOf('=http') + 1);\\n                        } else if (/http/.test(redurl) && /key\\\\=|uid\\\\=/.test(redurl)) {\\n                            return JSON.parse(fetch(redurl, {})).url;\\n                        } else {\\n                            return redurl\\n                        }\\n                    } else {\\n                        //var html = request(srcurl);\\n                        var html = scode.body;\\n                        //log(html);\\n                        if (/404 Not Found|备案后可继续访问/.test(html)) {\\n                            return openurl(vlink);\\n                        } else if (/\\\\<body/.test(html)) {\\n                            log('尝试非JSON接口网页解析');\\n                            requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                            return x5rule(srcurl, srcurl);\\n                            //return openurl(srcurl);\\n                        } else {\\n                            //json解析的取链接\\n                            var purl = html.match(/[\\\\'\\\\\\\"]url[\\\\'\\\\\\\"]:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1].replace(/\\\\\\\\/g, '');\\n                            //log(purl);\\n                            if (/http/.test(purl)) {\\n                                if (ptab == 'bilibili') {\\n                                    return purl + ';{Referer@https://www.bilibili.com/&&User-Agent@Mozilla/5.0}';\\n                                } else if (ptab == 'mgtv') {\\n                                    return purl + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                                } else if (/ojbk/.test(purl)) {\\n                                    return purl + ';{Referer@https://bak.ojbkjx.com/}';\\n                                } else {\\n                                    return unescape(purl)\\n                                };\\n                            } else {\\n                                //非http开头的打开原链接                                                                \\n                                return openurl(vlink)\\n                            }\\n                        }\\n                    }\\n                } catch (e) {\\n                    //报错判断处理\\n                    log('执行报错跳转处理');\\n                    /*if (srcurl.substring(0, 2) == '\\\\/\\\\/') {\\n                        return openurl('https:' + srcurl);\\n                    } else if (/\\\\=http/.test(srcurl) && /\\\\.html|bilibili/.test(srcurl)) {\\n                        //return srcurl.split('=')[1];\\n                        return openurl(srcurl.substring(srcurl.indexOf('=http') + 1));\\n                    } else {*/\\n                    return openurl(vlink)\\n                    //return 'x5WebView://'+srcurl\\n                    //}\\n                }\\n                //动态解析代码结束\\n            },\\n            ptab,\\n            link,\\n            myurl,\\n            vlink),\\n        col_type: clt\\n    });\\n}\\n//}\"},{\"col_type\":\"movie_3\",\"name\":\"TV简介与选集\",\"path\":\"tvmovlist\",\"rule\":\"var tabs = Object.keys(html.videolist);\\nvar thumb = html.img_url;\\nitems.push({\\n    title: '剧情简介：',\\n    desc: html.intro,\\n    pic_url: thumb,\\n    url: $('hiker://empty#noRecordHistory#').rule((des) => {\\n        setResult([{\\n            title: des,\\n            col_type: 'long_text'\\n        }]);\\n    }, html.intro),\\n    col_type: 'movie_1_vertical_pic'\\n});\\neval(JSON.parse(fetch('hiker://page/dnplugin', {})).rule);\\n\\nitems.push({\\n    title: '““排序””',\\n    url: \\\"hiker://empty@lazyRule=.js:putMyVar('appmtvsort', getMyVar('appmtvsort','1')=='1'?'0':'1');refreshPage(false);'toast://切换成功！'\\\",\\n    col_type: 'scroll_button'\\n});\\nvar gva = MY_URL;\\nfor (var k = 0; k < tabs.length; k++) {\\n    var ptab = tabs[k];\\n    items.push({\\n        title: (getMyVar(gva, '0') == k ? '👉🏻' : '') + ptab,\\n        url: `hiker://empty@lazyRule=.js:putMyVar('` + gva + \\\"', '\\\" + k + `');refreshPage();'toast://切换成功！'`,\\n        col_type: 'scroll_button'\\n    });\\n\\n}\\n\\n//for (var i = 0; i < tabs.length; i++) {\\nif (getMyVar('appmtvsort', '1') == '1') {\\n    var list = html.videolist[tabs[getMyVar(gva, '0')]];\\n} else {\\n    var list = html.videolist[tabs[getMyVar(gva, '0')]].reverse();\\n};\\n\\nfor (var j = 0; j < list.length; j++) {\\n    var srcurl = list[j].url;\\n    if (/293jx1/.test(srcurl)) {\\n        srcurl = srcurl.replace('293jx1', 'jx');\\n    } else if (/8d8q|diliktv|haokanju1|cztv|fit\\\\:8|ppzhu/.test(myurl)) {\\n        srcurl = srcurl + '&app=10000&account=272775028&password=qq272775028';\\n    }\\n    var title = list[j].title;\\n    title = title.match(/(第|\\\\d|-)*(集|话|期)/g) ? title.replace(/第|集|话|期/g, '') : title;\\n    if (list.length <= 4) {\\n        var clt = 'text_2';\\n    } else {\\n        var clt = isNaN(title) ? 'flex_button' : 'text_5'\\n    };\\n    items.push({\\n        title: title,\\n        url: $('hiker://empty').lazyRule((ptab, srcurl, myurl) => {\\n            function openurl(resurl) {\\n                if (resurl.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) && resurl.search(/html|bilibili/) != -1) {\\n                    var enDn = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n                    if (enDn == '1') {\\n                        log('调用断插解析');\\n                        eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                        eval(fetch(config.cj));\\n                        return aytmParse(resurl);\\n                    } else {\\n                        return resurl\\n                    };\\n                } else if (/\\\\=LT\\\\-/.test(resurl)) {\\n                    log('调用断插ltnb通用解析');\\n                    eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                    eval(fetch(config.cj));\\n                    var name = 'ltnb(通用函数)';\\n                    return ParseS[name](resurl.substring(resurl.indexOf('=LT-') + 1));\\n                } else {\\n                    return resurl\\n                }\\n            };\\n            \\n            try {\\n                var enDn = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\n                if (enDn == '1' && srcurl.match(/youku|mgtv|ixigua|qq.com|qiyi|migu|bilibili|sohu|pptv|le|1905.com/) && srcurl.search(/html|bilibili|ixigua/) != -1) {\\n                    log('调用断插解析html');\\n                    eval(\\\"var config =\\\" + fetch(\\\"hiker://files/cache/MyParseSet.json\\\"));\\n                    eval(fetch(config.cj));\\n                    return aytmParse(srcurl.substring(srcurl.indexOf('=http') + 1));\\n                };\\n            } catch (e) {}\\n            \\n            //log(srcurl);\\n            //动态解析代码开始\\n            try {\\n                if (/\\\\.m3u8|\\\\.mp4|obj\\\\/tos/.test(srcurl) && /http/.test(srcurl)) {\\n                    return /\\\\=/.test(srcurl) ? srcurl.split('=')[1] : srcurl + '#isVideo=true#';\\n                } else if (srcurl.indexOf(\\\"/share/\\\") != -1) {\\n                    try {\\n                        var link = srcurl.split(\\\"/share\\\")[0];\\n                        var fc = fetch(srcurl, {}).replace(\\\"var purl\\\", \\\"var main\\\");\\n                        if (fc.indexOf(\\\"main\\\") != -1) {\\n                            var mat = fc.match(/var main.*?;/)[0];\\n                            eval(mat);\\n                            var play = (main.indexOf(\\\"http\\\") != -1 ? main : link + main);\\n                        } else {\\n                            var main = fc.match(/url:.*?[\\\\'\\\\\\\"](.*?)[\\\\'\\\\\\\"]/)[1];\\n                            var play = (main.indexOf(\\\"http\\\") != -1 ? main : link + main)\\n                        };\\n                        return play;\\n                    } catch (e) {\\n                        return 'x5WebView://' + (srcurl)\\n                    }\\n                } else if (ptab == 'alizy') {\\n                    var purl = fetch('https://foubin.com/jiexi.php?url=' + srcurl, {}).match(/\\\\\\\"url\\\\\\\":\\\\\\\"(.*?)\\\\\\\"/)[1];\\n                    return purl;\\n                } else if (/19jx\\\\.vip|nfyingshi/.test(srcurl)) {\\n                    var purl = JSON.parse(fetch(srcurl.replace('http://', 'https://'), {\\n                        headers: {\\n                            \\\"User-Agent\\\": MOBILE_UA\\n                        },\\n                        redirect: false,\\n                        withHeaders: true\\n                    })).headers.location[0];\\n                    if (/titan.mgtv/.test(purl)) {\\n                        return purl + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                    } else if (/obj\\\\/tos/.test(purl)) {\\n                        return purl + '#isVideo=true#';\\n                    } else {\\n                        return purl\\n                    };\\n                }\\n                /*else if (/zhaikanys/.test(srcurl)) {\\n                                       var purl = JSON.parse(fetch(srcurl + '&app=10003&account=272775028&password=qq272775028', {\\n                                           headers: {\\n                                               \\\"User-Agent\\\": MOBILE_UA\\n                                           },\\n                                           redirect: false,\\n                                           withHeaders: true\\n                                       })).headers.location[0];\\n                                       if (/titan.mgtv/.test(purl)) {\\n                                           return purl + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                                       } else if (/obj\\\\/tos/.test(purl)) {\\n                                           return purl + '#isVideo=true#';\\n                                       } else {\\n                                           return purl\\n                                       };\\n                                   }*/\\n\\n                //----分割线----//\\n                var scode = JSON.parse(fetch(srcurl, {\\n                    headers: {\\n                        \\\"User-Agent\\\": MOBILE_UA\\n                    },\\n                    redirect: false,\\n                    withStatusCode: true\\n                }));\\n                //log(scode);\\n                if (scode.statusCode == '302' || scode.statusCode == '301') {\\n                    var purl = scode.headers.location[0].replace(/\\\\\\\\/g, '');\\n                } else {\\n                    //var html = request(srcurl);\\n                    var html = scode.body;\\n                    //log(html);\\n                    if (/404 Not Found|备案后可继续访问|不存在/.test(html) || html == '') {\\n                        return openurl(srcurl.substring(srcurl.indexOf('=http') + 1));\\n                    } else if (/\\\\\\\"url\\\\\\\"\\\\:\\\\\\\"http/.test(html)) {\\n                        var purl = html.match(/\\\\\\\"url\\\\\\\":\\\\\\\"(.*?)\\\\\\\"/)[1].replace(/\\\\\\\\/g, '');\\n                    } else if (html.startsWith('{')) {\\n                        var purl = srcurl.substring(srcurl.indexOf('=http') + 1);\\n                    } else {\\n                        //var purl = srcurl\\n                        requireCache('https://code.aliyun.com/lzk23559/PublicRule/raw/master/x5rule.js', 24);\\n                        return x5rule(srcurl, srcurl);\\n                        //return 'x5WebView://'+(srcurl) \\n                    }\\n                };\\n                //log(purl);\\n                if (/titan.mgtv/.test(purl)) {\\n                    return purl + '#isVideo=true#' + ';{Referer@www.mgtv.com&&User-Agent@Mozilla/5.0}';\\n                } else if (/obj\\\\/tos/.test(purl)) {\\n                    return purl + '#isVideo=true#';\\n                } else {\\n                    return purl\\n                };\\n\\n            } catch (e) {\\n                if (srcurl.substring(0, 2) == '\\\\/\\\\/') {\\n                    return openurl('https:' + srcurl);\\n                } else if (/\\\\=http/.test(srcurl) && /\\\\.html|bilibili/.test(srcurl)) {\\n                    //return srcurl.split('=')[1];\\n                    return openurl(srcurl.substring(srcurl.indexOf('=http') + 1));\\n                } else {\\n                    return openurl(srcurl)\\n                }\\n            }\\n            //动态解析代码结束\\n        }, ptab, srcurl, myurl),\\n        col_type: clt\\n    });\\n}\\n//}\"},{\"col_type\":\"movie_3\",\"name\":\"列表模式搜索二级\",\"path\":\"searerj\",\"rule\":\"var res = {};\\nvar items = [];\\nvar nowDate = new Date();\\nvar month = nowDate.getMonth() + 1 < 10 ? \\\"0\\\" + (nowDate.getMonth() + 1) : nowDate.getMonth() + 1;\\nvar day = nowDate.getDate() < 10 ? \\\"0\\\" + nowDate.getDate() : nowDate.getDate();\\nvar dateStr = month + '' + day;\\nvar spl = getResCode().split('#x#');\\nvar typet = spl[3];\\nvar tdomin = spl[2];\\nvar key = spl[4];\\n\\nif (/vipmv/.test(tdomin)) {\\n    var bhtml = request(spl[1]);\\n} else {\\n    var bhtml = fetch(spl[1], {\\n        headers: {\\n            \\\"User-Agent\\\": tdomin.indexOf(\\\"mogai_api\\\") != -1 ? \\\"Dart/2.14 (dart:io)\\\" : \\\"okhttp/4.1.0\\\"\\n        }\\n    });\\n}\\ntry {\\n    bhtml = bhtml.startsWith('\\\\r\\\\n') ? bhtml.replace('\\\\r\\\\n', '') : bhtml;\\n} catch (e) {}\\nif (/btwaf/.test(bhtml)) {\\n    /*\\n                items.push({\\n                    title:'有宝塔验证，点击访问原网页',\\n                    url: spl[1] + `@lazyRule=.js:input.split(';')[0]`,\\n                    col_type: 'text_1'\\n                });\\n                */\\n\\n    bhtml = fetch(spl[1] + '&btwaf' + bhtml.match(/btwaf(.*?)\\\\\\\"/)[1], {});\\n\\n}\\n\\nif (bhtml == \\\"\\\" || bhtml == null || bhtml.substring(0, 5) == 'error' || !bhtml.startsWith('{')) {\\n    items.push({\\n        title: '未搜索到相关资源，点击访问原网页',\\n        url: spl[1] + `@lazyRule=.js:input.split(';')[0]`,\\n        col_type: 'text_1'\\n    });\\n} else if (bhtml.length < 80) {\\n    items.push({\\n        title: '返回数据不完整，点击访问原网页',\\n        url: spl[1] + `@lazyRule=.js:input.split(';')[0]`,\\n        col_type: 'text_1'\\n    });\\n} else {\\n    var html = JSON.parse(bhtml);\\n    //log(spl[1]);\\n    if (html.list) {\\n        var list = html.list;\\n    } else if (html.data.list) {\\n        var list = html.data.list;\\n    } else if (html.data) {\\n        var list = html.data;\\n    }\\n\\n    if (list.length < 1) {\\n        items.push({\\n            title: '未搜索到，点击访问原网页',\\n            url: spl[1] + `@lazyRule=.js:input.split(';')[0]`,\\n            col_type: 'text_1'\\n        });\\n    } else {\\n        for (var i = 0; i < list.length; i++) {\\n\\n            if (/\\\\/vod\\\\//.test(tdomin)) {\\n                var title = list[i].title;\\n                var pic = list[i].pic;\\n                //var vid=tdomin+'/detail?vod_id='+list[i].nextlink+'&rel_limit=10';\\n                var vid = list[i].nextlink;\\n                var rem = list[i].state;\\n                //var con=list[i].state;\\n            } else {\\n                if (tdomin.indexOf('api.php/app/') != -1) {\\n                    var title = list[i].vod_name;\\n                    var pic = list[i].vod_pic;\\n                    if (/fantuan/.test(tdomin)) {\\n                        var vid = 'https://fantuan.wkfile.com/api.php/app/video_detail?id=' + list[i].vod_id + '&token=';\\n                    } else {\\n                        var vid = tdomin + 'video_detail?id=' + list[i].vod_id + '&token=';\\n                    }\\n                    var rem = list[i].vod_remarks;\\n                    //var con=list[i].type.type_des;\\n                } else if (tdomin.indexOf('xgapp.php/v1/') != -1) {\\n                    var title = list[i].vod_name;\\n                    var pic = list[i].vod_pic;\\n                    var vid = tdomin + 'video_detail?id=' + list[i].vod_id;\\n                    var rem = list[i].vod_remarks;\\n                    //var con=list[i].type.type_des;\\n                } else {\\n                    var title = list[i].vod_name;\\n                    var pic = list[i].vod_pic;\\n                    if (/iopenyun/.test(tdomin)) {\\n                        var vid = tdomin + '/detailID?vod_id=' + list[i].vod_id + '&token=';\\n                    } else {\\n                        var vid = tdomin + '/detail?key=' + dateStr + '&vod_id=' + list[i].vod_id + '&token=';\\n                    }\\n                    var rem = list[i].vod_remarks;\\n                    //var con=list[i].type.type_des;\\n                }\\n            }\\n\\n            items.push({\\n                title: title.replace(key, '““' + key + '””'),\\n                pic_url: pic + '@Referer=',\\n                url: $(tdomin.indexOf(\\\"mogai_api\\\") != -1 ? vid + ';get;utf-8;{User-Agent@Dart/2.14 (dart:io)}' : vid + ';get;utf-8;{User-Agent@okhttp/4.1.0}').rule((tdomin) => {\\n                    var res = {};\\n                    var items = [];\\n                    var html = JSON.parse(getResCode());\\n                    items.push({\\n                        title: '',\\n                        desc: '255&&float',\\n                        url: '',\\n                        col_type: 'x5_webview_single'\\n                    });\\n                    refreshX5WebView('');\\n                    var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n                    if (/\\\\/vod\\\\//.test(tdomin)) {\\n                        eval(JSON.parse(fetch('hiker://page/tvmovlist', {})).rule);\\n                    } else {\\n                        eval(JSON.parse(fetch('hiker://page/appmovlist', {})).rule);\\n                    }\\n                    res.data = items;\\n                    setHomeResult(res);\\n                }, tdomin),\\n                //content:rem,\\n                desc: rem,\\n                col_type: 'movie_1_vertical_pic'\\n            });\\n        } //for i\\n    } //else list.length\\n}\\n\\nres.data = items;\\nsetHomeResult(res);\"},{\"col_type\":\"movie_3\",\"name\":\"APP首页列表\",\"path\":\"appindexdata\",\"rule\":\"if (html.list) {\\n    var list = html.list;\\n} else if (html.data && html.data.list) {\\n    var list = html.data.list;\\n} else {\\n    var list = html.data;\\n}\\n\\nfor (var i = 0; i < list.length; i++) {\\n    if (list[i].vod_list) {\\n        var lists = list[i].vod_list;\\n        var typename = list[i].vod_type_name;\\n    } else {\\n        var lists = list[i].vlist;\\n        var typename = list[i].type_name\\n    }\\n    items.push({\\n        title: typename,\\n        col_type: 'text_1'\\n\\n    });\\n\\n    for (var j = 0; j < lists.length; j++) {\\n        var title = lists[j].vod_name;\\n        var img = lists[j].vod_pic;\\n        var url = lists[j].vod_id;\\n        var desc = lists[j].vod_remarks;\\n        var nowDate = new Date();\\n        var month = nowDate.getMonth() + 1 < 10 ? \\\"0\\\" + (nowDate.getMonth() + 1) : nowDate.getMonth() + 1;\\n        var day = nowDate.getDate() < 10 ? \\\"0\\\" + nowDate.getDate() : nowDate.getDate();\\n        var dateStr = month + '' + day;\\n        if (html.list) {\\n            var link = murl + 'video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n        } else if (html.data && html.data.list) {\\n            if (murl.search(/mogai_api/) != -1) {\\n                var link = murl + '/detail?key=' + dateStr + '&vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n            } else {\\n                var link = murl + '/detail?key=' + dateStr + '&vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@okhttp/4.1.0}';\\n            }\\n        } else {\\n            var link = murl + 'video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n        };\\n        if (/fantuan/.test(murl)) {\\n            var link = 'https://fantuan.wkfile.com/api.php/app/video_detail?id=' + url + '&token=;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n        } else if (/iopenyun/.test(murl)) {\\n            var link = murl + '/detailID?vod_id=' + url + '&rel_limit=10;get;utf-8;{User-Agent@Dart/2.14 (dart:io)}';\\n        } else if (/dijiaxia/.test(murl)) {\\n            var link = 'http://www.dijiaxia.com/api.php/app/video_detail?id=' + url;\\n        }\\n        items.push({\\n            title: title,\\n            pic_url: img + '@Referer=',\\n            url: $(link).rule(() => {\\n                var res = {};\\n                var items = [];\\n                items.push({\\n                    title: '',\\n                    desc: '255&&float',\\n                    url: '',\\n                    col_type: 'x5_webview_single'\\n                });\\n                refreshX5WebView('');\\n                var html = JSON.parse(getResCode());\\n                var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n                try {\\n                    eval(JSON.parse(fetch('hiker://page/appmovlist', {})).rule);\\n                } catch (e) {}\\n                res.data = items;\\n                setHomeResult(res);\\n            }),\\n            desc: desc,\\n            col_type: 'movie_3_marquee'\\n        });\\n    }\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"断念插件调用\",\"path\":\"dnplugin\",\"rule\":\"var dnen = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).enDn;\\nitems.push({\\n    title: '断插：' + (dnen == '1' ? '““✅””' : '❎'),\\n    url: $('').lazyRule((dnen) => {\\n        if (dnen == '1') {\\n            var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace('\\\\\\\"enDn\\\\\\\":\\\\\\\"1\\\\\\\"', '\\\\\\\"enDn\\\\\\\":\\\\\\\"0\\\\\\\"');\\n            writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n            refreshPage(false);\\n            return 'toast://已禁用断插调用！';\\n        } else {\\n            var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace('\\\\\\\"enDn\\\\\\\":\\\\\\\"0\\\\\\\"', '\\\\\\\"enDn\\\\\\\":\\\\\\\"1\\\\\\\"');\\n            //log(fileUrl);\\n            writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n            refreshPage(false);\\n            return 'toast://已开启断插调用！'\\n        }\\n    }, dnen),\\n    col_type: 'text_3'\\n});\\nif (dnen == '1') {\\n    items.push({\\n        title: '线路配置',\\n        url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/Route.js');Route.setParse();setResult(d);\\\",\\n        col_type: 'text_3'\\n    });\\n    items.push({\\n        title: '解析管理',\\n        url: \\\"hiker://empty#noRecordHistory#@rule=js:this.d=[];require('https://gitea.com/AI957/Hiker/raw/m/v/jxItem.js');jxItem.jxList();setResult(d)\\\",\\n        col_type: 'text_3'\\n    });\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"设置页代码\",\"path\":\"setting\",\"rule\":\"var d = [];\\nvar setjson = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {}));\\nvar ssmd = setjson.ssmode;\\nvar ssxc = setjson.sscount;\\nd.push({\\n    title: '搜索设置',\\n    col_type: 'text_center_1'\\n});\\nd.push({\\n    title: '当前：' + '(' + (ssmd == 1 ? '聚合结果' : '引擎列表') + ')',\\n    url: $('hiker://empty').lazyRule(() => {\\n        var md = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).ssmode;\\n\\n        if (md == 1) {\\n            var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace('\\\\\\\"ssmode\\\\\\\":\\\\\\\"1\\\\\\\"', '\\\\\\\"ssmode\\\\\\\":\\\\\\\"0\\\\\\\"');\\n            writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n            back(true);\\n            return 'toast://切换为搜索引擎列表单选模式成功！';\\n        } else {\\n            var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace('\\\\\\\"ssmode\\\\\\\":\\\\\\\"0\\\\\\\"', '\\\\\\\"ssmode\\\\\\\":\\\\\\\"1\\\\\\\"');\\n            //log(fileUrl);\\n            writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n            back(true);\\n            return 'toast://切换为聚合搜索模式成功！'\\n        }\\n    }),\\n    col_type: 'text_2'\\n})\\nd.push({\\n    title: '搜索超时(' + '' + getItem('apptimout', '')+')',\\n    url: \\\"input://\\\" + '3000' + \\\"////请设置超时时间，1000为一秒。.js:var num = parseInt(input).toString();if (num == 'NaN'||num<1000) {'toast://输入的值好像不正确。';} else {setItem('apptimout', num);refreshPage();'toast://设置成功。'}\\\",\\n    col_type: 'text_2'\\n});\\n\\nd.push({\\n    title: '搜索线程' + '(' + ssxc + ')',\\n    url: \\\"input://\\\" + JSON.stringify({\\n        value: \\\"5\\\",\\n        hint: \\\"请输入一个整数数字，推荐最大不要超过15。\\\",\\n        js: $.toString(() => {\\n            var num = parseInt(input).toString();\\n            if (num == 'NaN' || num < 1) {\\n                return 'toast://输入的值好像不正确。';\\n            } else {\\n                var fileUrl = fetch(\\\"hiker://files/rules/xyq/appmset.json\\\", {}).replace(/\\\\\\\"sscount\\\\\\\":\\\\\\\"[\\\\d]*\\\\\\\"/, '\\\\\\\"sscount\\\\\\\":\\\\\\\"' + num + '\\\\\\\"');\\n                writeFile(\\\"hiker://files/rules/xyq/appmset.json\\\", fileUrl);\\n                back(true);\\n                return 'toast://保存设置搜索线程完成！'\\n            }\\n        }),\\n    }),\\n    col_type: 'text_2'\\n});\\n\\nd.push({\\n    title: '更新相关',\\n    col_type: 'text_center_1'\\n});\\nd.push({\\n    title: '检测更新',\\n    url: $('').lazyRule((locver) => {\\n        try {\\n            var remf = fetchCache('https://codeberg.org/lzk23559/cloudrule/raw/branch/master/appmovie.txt', 24);\\n        } catch (e) {\\n            remf = '';\\n        }\\n        if (/￥base64/.test(remf)) {\\n            var remv = JSON.parse(base64Decode(remf.split('@')[2])).version;\\n        } else if (/￥home_rule￥/.test(remf)) {\\n            var remv = JSON.parse(remf.split('￥home_rule￥')[1]).version;\\n        };\\n        if (/￥home_rule/.test(remf)) {\\n            log('远程版本：' + remv);\\n            log('本地版本：' + locver);\\n            if (locver != remv) {\\n                putVar('appnver', remf);\\n                refreshPage();\\n                return 'toast://有新版本，点导入更新可更新规则。';\\n            } else {\\n                return 'toast://暂无新版本，24小时内检测无效。'\\n            };\\n        } else {\\n            return 'toast://检测更新失败，可能云端抽风了。'\\n        }\\n    }, locver),\\n    col_type: 'text_2'\\n});\\nif (getVar('appnver')) {\\n    d.push({\\n        title: '导入更新',\\n        url: $('').lazyRule(() => {\\n            return getVar('appnver');\\n        }),\\n        col_type: 'text_2'\\n    });\\n}\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"最新章节\",\"path\":\"chapter\",\"rule\":\"var chp = [];\\ntry {\\n    var html = JSON.parse(getResCode());\\n    if (html.videolist) {\\n        var conts = Object.keys(html.videolist);\\n    } else if (html.data.vod_url_with_player) {\\n        var conts = html.data.vod_url_with_player;\\n        if (conts.length < 1) {\\n            conts = html.data.vod_play_url.split('$$$');\\n        }\\n    } else if (html.data.vod_info && html.data.vod_info.vod_url_with_player) {\\n        var conts = html.data.vod_info.vod_url_with_player;\\n        if (conts.length < 1) {\\n            conts = html.data.vod_info.vod_play_url.split('$$$');\\n        }\\n    } else {\\n        var conts = html.data.vod_play_list;\\n        if (conts.length < 1) {\\n            conts = html.data.vod_play_url.split('$$$');\\n        }\\n    }\\n\\n    for (var i = 0; i < conts.length; i++) {\\n        if (html.videolist) {\\n            var list = html.videolist[conts[i]];\\n        } else if (conts[i].urls) {\\n            var list = conts[i].urls;\\n        } else if (conts[i].url) {\\n            var list = conts[i].url.split(\\\"#\\\");\\n        } else {\\n            var list = conts[i].split(\\\"#\\\");\\n        }\\n        chp.push(list.length);\\n    }\\n} catch (e) {}\\n//log(Math.max.apply(Math,chp));\\nsetResult('更新至:' + (Math.max.apply(Math, chp)));\"},{\"col_type\":\"movie_3\",\"name\":\"分类搜索\",\"path\":\"ss2\",\"rule\":\"js:\\nvar items = [];\\nvar Data = [];\\nvar nowDate = new Date();\\nvar month = nowDate.getMonth() + 1 < 10 ? \\\"0\\\" + (nowDate.getMonth() + 1) : nowDate.getMonth() + 1;\\nvar day = nowDate.getDate() < 10 ? \\\"0\\\" + nowDate.getDate() : nowDate.getDate();\\nvar dateStr = month + '' + day;\\n//取搜索线程设置\\nvar ssxc = JSON.parse(fetch('hiker://files/rules/xyq/appmset.json', {})).sscount;\\n//设置超时时间，越小越快，单位毫秒\\nvar timeou = getItem('apptimout', '3000');\\nvar key = MY_URL.split('$$$')[1];\\nvar num = MY_URL.split('$$$')[2];\\nvar le = parseInt(num * ssxc);\\nvar Tit = [];\\nlet list = MY_PARAMS.list;\\nlet tytit = MY_PARAMS.tytit;\\nlet pageid = \\\"__app\\\" + num;\\ntry {\\n    for (var j = le - ssxc; j < le; j++) {\\n        if (j < list.length) {\\n            var link = list[j].url;\\n            var litit = list[j].murl;\\n            if (/\\\\/vod\\\\//i.test(link)) {\\n                if (/19jx|293ys|zhaikanys|ji\\\\-ding\\\\-he|phoebe|yunbo\\\\.bxin|lanrentk|hetaoys|pxun|139\\\\.155|fkkdy|056158|aixixi|ruoxinew|feifan123|siqitv/.test(link)) {\\n                    var hmurl = link + '?ac=list&zm=' + key + '&page=1';\\n                } else {\\n                    var hmurl = link + '?ac=list&wd=' + key + '&page=1';\\n                }\\n            } else {\\n                if (/dijiaxia/.test(link)) {\\n                    link = 'http://www.dijiaxia.com/api.php/app/'\\n                };\\n                if (link.indexOf('api.php/app/') != -1) {\\n                    var hmurl = link + 'search?pg=1&text=' + key + '&token=';\\n                } else if (link.indexOf('xgapp.php/v1/') != -1) {\\n                    var hmurl = link + 'search?pg=1&text=' + key;\\n                } else {\\n                    if (/iopenyun/.test(link)) {\\n                        var hmurl = link + '/list?page=fypage&limit=10&wd=' + key;\\n                    } else {\\n                        var hmurl = link + '?page=1&limit=10&wd=' + key;\\n                    }\\n                }\\n            }\\n            //Data.push({url: hmurl,options: {headers: {\\\"User-Agent\\\": \\\"Dart/2.14 (dart:io)\\\"},timeout: timeou}});\\n            Data.push({\\n                url: hmurl,\\n                options: {\\n                    headers: {\\n                        \\\"User-Agent\\\": link.indexOf(\\\"mogai_api\\\") != -1 ? \\\"Dart/2.14 (dart:io)\\\" : \\\"okhttp/4.1.0\\\"\\n                    },\\n                    timeout: timeou\\n                }\\n            });\\n            Tit.push({\\n                tit: list[j].title,\\n                link: link,\\n                typnm: litit\\n            });\\n        } //if\\n    } //for j\\n} catch (e) {}\\nif (Data.length <= 0) {\\n    setResult([]);\\n} else {\\n    items.push({\\n        title: \\\"正在加载中第\\\" + MY_PAGE + \\\"页，进度：1/\\\" + Data.length,\\n        url: \\\"\\\",\\n        col_type: \\\"text_center_1\\\",\\n        desc: \\\"\\\",\\n        pic_url: \\\"\\\",\\n        extra: {\\n            id: pageid\\n        }\\n    });\\n    setResult(items);\\n    let tasks = [];\\n\\n    for (let k in Data) {\\n        let it = Data[k];\\n        tasks.push({\\n            func: function(param) {\\n                let d = [];\\n                let html = fetch(param.it.url, param.it.options);\\n                //log(html);\\n                try {\\n                    html = html.substring(0, 2) == '\\\\r\\\\n' ? html.replace('\\\\r\\\\n', '') : html;\\n                } catch (e) {}\\n                if (/btwaf/.test(html)) {\\n                    html = fetch(param.it.url + '&btwaf' + html.match(/btwaf(.*?)\\\\\\\"/)[1], {});\\n                }\\n                if (html == \\\"\\\" || html == null || html.substring(0, 5) == 'error' || !html.startsWith('{')) {\\n                    return null;\\n                } else if (html.length < 80) {\\n                    return null\\n                } else {\\n                    html = JSON.parse(html);\\n                    //log(html);\\n                    var typet = param.tit.typnm;\\n                    var tdomin = param.tit.link;\\n                    if (html.list) {\\n                        var list = html.list;\\n                    } else if (html.data.list) {\\n                        var list = html.data.list;\\n                    } else if (html.data) {\\n                        var list = html.data;\\n                    } else {\\n                        var list = [];\\n                    }\\n                    if (list.length < 1) {\\n                        return null;\\n                    } else {\\n                        for (var i = 0; i < list.length; i++) {\\n                            if (/\\\\/vod\\\\//.test(tdomin)) {\\n                                var title = list[i].title;\\n                                var pic = list[i].pic;\\n                                var vid = list[i].nextlink;\\n                                var rem = list[i].state;\\n                            } else {\\n                                if (tdomin.indexOf('api.php/app/') != -1) {\\n                                    var title = list[i].vod_name;\\n                                    var pic = list[i].vod_pic;\\n                                    if (/fantuan/.test(tdomin)) {\\n                                        var vid = 'https://fantuan.wkfile.com/api.php/app/video_detail?id=' + list[i].vod_id + '&token=';\\n                                    } else {\\n                                        var vid = tdomin + 'video_detail?id=' + list[i].vod_id + '&token=';\\n                                    }\\n                                    var rem = list[i].vod_remarks;\\n                                    //var con=list[i].type.type_des;\\n                                } else if (tdomin.indexOf('xgapp.php/v1/') != -1) {\\n                                    var title = list[i].vod_name;\\n                                    var pic = list[i].vod_pic;\\n                                    var vid = tdomin + 'video_detail?id=' + list[i].vod_id;\\n                                    var rem = list[i].vod_remarks;\\n                                    //var con=list[i].type.type_des;\\n                                } else {\\n                                    var title = list[i].vod_name;\\n                                    var pic = list[i].vod_pic;\\n                                    if (/iopenyun/.test(tdomin)) {\\n                                        var vid = tdomin + '/detailID?vod_id=' + list[i].vod_id + '&token=';\\n                                    } else {\\n                                        var vid = tdomin + '/detail?key=' + dateStr + '&vod_id=' + list[i].vod_id + '&token=';\\n                                    }\\n                                    var rem = list[i].vod_remarks;\\n                                    //var con=list[i].type.type_des;\\n                                }\\n\\n                            }\\n                            //var con=list[i].state;\\n                            //log(vid);\\n                            d.push({\\n                                title: MY_TYPE == \\\"home\\\" ? title.replace(key, '““' + key + '””') + '\\\\n' + rem : title + rem,\\n                                pic_url: pic + '@Referer=',\\n                                url: $(tdomin.indexOf(\\\"mogai_api\\\") != -1 ? vid + ';get;utf-8;{User-Agent@Dart/2.14 (dart:io)}' : vid + ';get;utf-8;{User-Agent@okhttp/4.1.0}').rule((tdomin) => {\\n                                    var res = {};\\n                                    var items = [];\\n                                    var html = JSON.parse(getResCode());\\n                                    items.push({\\n                                        title: '',\\n                                        desc: '255&&float',\\n                                        url: '',\\n                                        col_type: 'x5_webview_single'\\n                                    });\\n                                    var myurl = MY_URL.match(/([\\\\S]*?:\\\\/\\\\/[\\\\S]*?)\\\\//)[1];\\n                                    if (/\\\\/vod\\\\//.test(tdomin)) {\\n                                        eval(JSON.parse(fetch('hiker://page/tvmovlist', {})).rule);\\n                                    } else {\\n                                        eval(JSON.parse(fetch('hiker://page/appmovlist', {})).rule);\\n                                    }\\n\\n                                    res.data = items;\\n                                    setHomeResult(res);\\n                                },tdomin),\\n                                //content: rem,\\n                                desc: tytit + ' => ' + param.tit.tit,\\n                                col_type: 'movie_1_vertical_pic'\\n                            });\\n                        } //for i\\n                    } //if list.length\\n                    return d;\\n                }\\n            },\\n            param: {\\n                it: it,\\n                tit: Tit[k]\\n            },\\n            id: \\\"task\\\"\\n        })\\n    }\\n\\n    batchExecute(tasks, {\\n        func: function(param, id, error, result) {\\n            //log(\\\"listener: \\\" + (result || []).length)\\n            param.i = param.i + 1;\\n            if (result) {\\n                for (let it of result) {\\n                    param.j = param.j + 1;\\n                    addItemBefore(pageid, {\\n                        title: it.title,\\n                        desc: it.desc,\\n                        url: it.url,\\n                        pic_url: it.pic_url,\\n                        col_type: 'movie_1_vertical_pic',\\n                        extra: {\\n                            id: \\\"__app\\\" + MY_PAGE + \\\"@\\\" + param.j\\n                        }\\n                    })\\n                }\\n\\n            }\\n            if (param.i >= param.all) {\\n                deleteItem(pageid)\\n            } else {\\n                updateItem({\\n                    title: \\\"正在加载第\\\" + MY_PAGE + \\\"页，进度：\\\" + (param.i + 1) + \\\"/\\\" + param.all,\\n                    url: \\\"\\\",\\n                    col_type: \\\"text_center_1\\\",\\n                    desc: \\\"\\\",\\n                    pic_url: \\\"\\\",\\n                    extra: {\\n                        id: pageid\\n                    }\\n                })\\n            }\\n        },\\n        param: {\\n            all: Data.length,\\n            i: 0,\\n            j: -1\\n        }\\n    })\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"数据转换\",\"path\":\"conver\",\"rule\":\"//js:\\n//rem(res);\\nvar 记录 = [];\\nvar 输入条目 = remfile.match(/.+=http.+/g);\\nfor (var j in 输入条目) {\\n    var title = 输入条目[j].split('@')[1].split('=')[0];\\n    var url = 输入条目[j].split('=')[1].split('#')[0];\\n    var img = 输入条目[j].split('#')[1];\\n    if (img.indexOf(\\\"http\\\") != -1) {\\n        var img = img;\\n    } else if (img == \\\"\\\") {\\n        var img = \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/通用图标.png\\\"\\n    } else {\\n        var img = \\\"https://inmemory.coding.net/p/InMemory/d/MBrowser/git/raw/master/AppFile/AppIcon/\\\" + img + \\\".png\\\";\\n    }\\n    if (url.search(/api\\\\.php\\\\/.*?\\\\/vod/) != -1) {\\n        var murl = \\\"q:TV影视\\\";\\n    } else {\\n        var murl = \\\"q:APP影视\\\";\\n    }\\n    if (输入条目[j].split('@')[0] != \\\"\\\") {\\n        var type = 输入条目[j].split('@')[0];\\n    } else if (url.indexOf(\\\"api.php/app\\\") != -1 || url.indexOf(\\\"xgapp\\\") != -1) {\\n        var type = \\\"小龟\\\";\\n    } else if (url.indexOf(\\\".vod\\\") != -1) {\\n        var type = \\\"萝卜/白菜/木白/绿豆\\\";\\n    } else if (url.search(/api\\\\.php\\\\/.+?\\\\/vod\\\\//) != -1) {\\n        var type = \\\"神马\\\";\\n    }\\n    记录.push({\\n        title: title,\\n        url: url,\\n        img: img,\\n        murl: murl,\\n        type: type\\n    });\\n}\\n//if (_.read(filename)) {\\n//var 新记录 = JSON.parse(_.read(filename));\\n//} else {\\nvar 新记录 = [];\\n//}\\nfor (var i in 记录) {\\n    var 当前条目 = [];\\n    当前条目.push(记录[i]);\\n    if (新记录.length == 0) {\\n        新记录.push({\\n            title: 记录[i].type,\\n            list: 当前条目\\n        });\\n    } else {\\n    let res = 新记录.some(item => {\\n        //判断类型，有就添加到当前项\\n        if (item.title == 记录[i].type) {\\n            item.list = 当前条目.concat(item.list.filter(d => d.url != 记录[i].url));\\n            return true\\n        }\\n    });\\n    if (!res) {\\n        //如果没找相同类型添加一个类型\\n        新记录.push({\\n            title: 记录[i].type,\\n            list: 当前条目\\n        });\\n    }\\n    }\\n}\\nvar newfile = {};\\nnewfile.data = 新记录;\\n//log(remfile);\"}]","icon":"https://codeberg.org/lzk23559/PublicRule/raw/branch/master/appmov.png"},{"last_chapter_rule":"","title":"轻合集.爱是用心","author":"轻合集生成器","version":103,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', 'find:'),\n    types = { 'all': '聚合', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '图集', 'news': '资讯', 'tool': '工具', 'other': '其它' }\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow.startsWith('find:')) {\n                    let filterKey = typeShow.slice(5)\n                    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n                } else rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n\nel.push(typeShow.startsWith('find:') ? {\n    title: '““””' + ('全部' + (typeShow[5] ? '[' + typeShow.slice(5) + ']' : '')).bold().fontcolor('#12b668'),\n    url: $(typeShow.slice(5), '查找小程序关键词').input(() => {\n        putMyVar('typeShow', 'find:' + input)\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n} : {\n    title: '全部',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('typeShow', 'find:')\n        refreshPage(false)\n        return '再次点击【全部】可查找小程序'\n    }),\n    col_type: 'scroll_button'\n})\nfor (let k in types)\n    if (rules.find((v) => v.type == k))\n        el.push({\n            title: '““””' + (k == typeShow ? types[k].bold().fontcolor('#12b668') : types[k]),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow.startsWith('find:')) {\n    let filterKey = typeShow.slice(5)\n    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n} else rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/^(https?:\\/\\/.+?)(?:#|\\?|\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', 'find:')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow.startsWith('find:')) {\n                let filterKey = typeShow.slice(5)\n                if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n            } else rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=1302407216')\n// \n/*\n*/","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteCache(url)\\n            back(false)\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = $('#noLoading#').lazyRule((i)=>{\\n                let data = $.require('hiker://page/dataLoad?rule=' + getMyVar('myCollection'))(true)\\n                return 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            }, i)\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (MY_PAGE == 1) {\\n    let loaded = getMyVar(MY_RULE.title + \\\"@pre\\\")\\n    if (!loaded || isIndex) {\\n        eval(thisRULE.preRule)\\n        putMyVar(MY_RULE.title + \\\"@pre\\\", \\\"1\\\")\\n    }\\n}\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title, url) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { title:title, url: url, pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, MY_RULE.title, MY_RULE.url)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            if(!v.extra) v.extra = {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra })\\n\\n            if (typeof v.url != 'string' || ['rule', 'pics', 'toast', 'input', 'confirm', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || v.extra.rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = Object.assign({}, v.extra, {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            })\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"}]","icon":"http://q1.qlogo.cn/g?b=qq&nk=1302407216&s=640"},{"last_chapter_rule":"","title":"轻合集.家娃","author":"轻合集生成器","version":103,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', 'find:'),\n    types = { 'all': '聚合', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '图集', 'news': '资讯', 'tool': '工具', 'other': '其它' }\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow.startsWith('find:')) {\n                    let filterKey = typeShow.slice(5)\n                    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n                } else rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n\nel.push(typeShow.startsWith('find:') ? {\n    title: '““””' + ('全部' + (typeShow[5] ? '[' + typeShow.slice(5) + ']' : '')).bold().fontcolor('#12b668'),\n    url: $(typeShow.slice(5), '查找小程序关键词').input(() => {\n        putMyVar('typeShow', 'find:' + input)\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n} : {\n    title: '全部',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('typeShow', 'find:')\n        refreshPage(false)\n        return '再次点击【全部】可查找小程序'\n    }),\n    col_type: 'scroll_button'\n})\nfor (let k in types)\n    if (rules.find((v) => v.type == k))\n        el.push({\n            title: '““””' + (k == typeShow ? types[k].bold().fontcolor('#12b668') : types[k]),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow.startsWith('find:')) {\n    let filterKey = typeShow.slice(5)\n    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n} else rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/^(https?:\\/\\/.+?)(?:#|\\?|\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', 'find:')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow.startsWith('find:')) {\n                let filterKey = typeShow.slice(5)\n                if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n            } else rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=41703636')\n// \n/*\n*/","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteCache(url)\\n            back(false)\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = $('#noLoading#').lazyRule((i)=>{\\n                let data = $.require('hiker://page/dataLoad?rule=' + getMyVar('myCollection'))(true)\\n                return 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            }, i)\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (MY_PAGE == 1) {\\n    let loaded = getMyVar(MY_RULE.title + \\\"@pre\\\")\\n    if (!loaded || isIndex) {\\n        eval(thisRULE.preRule)\\n        putMyVar(MY_RULE.title + \\\"@pre\\\", \\\"1\\\")\\n    }\\n}\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title, url) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { title:title, url: url, pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, MY_RULE.title, MY_RULE.url)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            if(!v.extra) v.extra = {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra })\\n\\n            if (typeof v.url != 'string' || ['rule', 'pics', 'toast', 'input', 'confirm', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || v.extra.rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = Object.assign({}, v.extra, {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            })\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"}]","icon":"http://q1.qlogo.cn/g?b=qq&nk=41703636&s=640"},{"last_chapter_rule":"","title":"用心资源网采","author":"道长&爱是用心","version":5,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\n//关闭自定义分类？\nconst defaultDisTabModify = true;\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', '');\nlet disTabModify = readFile('disTabModify');\nif(disTabModify===''){\n    saveFile('disTabModify', defaultDisTabModify+'');\n    disTabModify = defaultDisTabModify;\n}else if(/true|false/.test(disTabModify)){\n    disTabModify = JSON.parse(disTabModify);\n}\n//log('关闭自定义分类？'+disTabModify);\nconst {color,small,unique2} = $.require(\"hiker://page/tools?rule=\"+ QING_TITLE);\n\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow,disTabModify) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)();\n                if (disTabModify&&typeShow) {\n                    rules = rules.filter((v) => v.type === typeShow);\n                }else if(!disTabModify){\n                    typeNow = typeShow || '全部';\n                    if(typeNow==='其他'){\n                        rules = rules.filter((v) => !v.sort_url);\n                    }else if(typeNow!=='全部'){\n                        rules = rules.filter((v) => v.sort_url===typeNow);\n                    }\n                }\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow,disTabModify),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)();\n\nif(disTabModify) {\n    types = { '': '全部', 'all': '聚合', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '图集', 'news': '资讯', 'tool': '工具', 'other': '其它' };\n    for (let k in types) {\n        if (!k || rules.find((v) => v.type === k)) {\n            let title = '““””' + (k === typeShow ? types[k].bold().fontcolor('#12b668') : types[k]);\n            let cnt = rules.filter(it => !k || it.type === k).length;\n            el.push({\n                title: title + ' ' + color(cnt, '#ff7000'),\n                url: k === typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                    putMyVar('typeShow', k)\n                    refreshPage(false)\n                    return 'hiker://empty'\n                }, k),\n                col_type: 'scroll_button'\n            })\n        }\n    }\n\n    if (typeShow) {\n        rules = rules.filter((v) => v.type === typeShow);\n    }\n}else{\n    types = rules.map(it => it.sort_url || \"其他\");\n    types.unshift('全部');\n    types = unique2(types);\n    typeNow = typeShow || '全部';\n    for (let k in types) {\n        let its = types[k];\n        let title = '““””' + (its === typeNow ? its.bold().fontcolor('#12b668') : its);\n        let cnt;\n        if (its === '全部') {\n            cnt = rules.length\n        } else if (its === '其他') {\n            cnt = rules.filter(it => !it.sort_url).length;\n        } else {\n            cnt = rules.filter(it => it.sort_url === its).length;\n        }\n        el.push({\n            title: title + ' ' + color(cnt, '#ff7000'),\n            url: its === typeNow ? 'hiker://empty' : $('#noLoading#').lazyRule((its) => {\n                putMyVar('typeShow', its);\n                refreshPage(false)\n                return 'hiker://empty'\n            }, its),\n            col_type: 'scroll_button'\n        })\n    }\n    if(typeNow==='其他'){\n        rules = rules.filter((v) => !v.sort_url);\n    }else if(typeNow!=='全部'){\n        rules = rules.filter((v) => v.sort_url===typeNow);\n    }\n}\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule);\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/(https?:\\/\\/.+?)(?:\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n});\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const defaultDisTabModify = false; //默认禁用自定义分类关闭.就是开启自定义\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', '');\n            let disTabModify = readFile('disTabModify');\n            if(disTabModify===''){\n                saveFile('disTabModify', defaultDisTabModify+'');\n                disTabModify = defaultDisTabModify;\n            }else if(/true|false/.test(disTabModify)){\n                disTabModify = JSON.parse(disTabModify);\n            }\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)();\n            if (disTabModify&&typeShow) {\n                rules = rules.filter((v) => v.type === typeShow);\n            }else if(!disTabModify){\n                typeNow = typeShow || '全部';\n                if(typeNow==='其他'){\n                    rules = rules.filter((v) => !v.sort_url);\n                }else if(typeNow!=='全部'){\n                    rules = rules.filter((v) => v.sort_url===typeNow);\n                }\n            }\n            return JSON.stringify(rules)\n        })\n    }\n}]);","search_url":"hiker://empty?keyword=**","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title);\n//putMyVar('remoteUrl', 'http://hiker.nokia.press/hikerule/rulelist.json?id=4306');\nputMyVar('remoteUrl', 'https://fhw1.coding.net/p/tv/d/TV/git/raw/master/yxzywc.json');","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()');\\nsetPageTitle('⚙ 轻合集设置 ⚙');\\nconst defaultDisTabModify = false; //默认禁用自定义分类关闭.就是开启自定义\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://')){\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            }\\n            deleteCache(url);\\n            back(false);\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disTabModify = readFile('disTabModify'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用');\\nif(disTabModify===''){\\n    saveFile('disTabModify', defaultDisTabModify+'');\\n    disTabModify = defaultDisTabModify;\\n}else if(/true|false/.test(disTabModify)){\\n    disTabModify = JSON.parse(disTabModify);\\n}\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n},  {\\n    title: '  💠 分类自定义: ' + (disTabModify ? '否' : '是') + '  ',\\n    url: $('#noLoading#').lazyRule((disTabModify) => {\\n        saveFile('disTabModify', disTabModify ? 'false' : 'true');\\n        putMyVar('typeShow', '');\\n        refreshPage();\\n        return 'hiker://empty'\\n    }, disTabModify),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n            .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (MY_PAGE == 1) {\\n    let loaded = getMyVar(thisRULE.title + \\\"@pre\\\", \\\"no\\\")\\n    if (\\\"yes\\\" != loaded || isIndex) {\\n        eval(thisRULE.preRule)\\n        putMyVar(thisRULE.title + \\\"@pre\\\", \\\"yes\\\")\\n    }\\n}\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, RULE.title)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra || {} })\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            }\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"},{\"name\":\"仓库工具\",\"path\":\"tools\",\"rule\":\"js:\\n$.exports.range = function(m, n) {\\n    return Math.floor(Math.random() * (m - n + 1) + n);\\n}\\n$.exports.color = function(text, color) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””<font color='\\\" + color + \\\"'>\\\" + text + \\\"</font>\\\";\\n}\\nfunction htmlTag(tag, text) {\\n    text += \\\"\\\";\\n    if (text.indexOf(\\\"““””\\\") === 0) {\\n        text.replace(\\\"““””\\\", \\\"\\\");\\n    }\\n    return \\\"““””\\\" + \\\"<\\\" + tag + \\\">\\\" + text + \\\"</\\\" + tag + \\\">\\\";\\n\\n}\\n\\nfunction getNowFormatDate() {\\n            let date = new Date();\\n            let seperator1 = \\\"-\\\";\\n            let seperator2 = \\\":\\\";\\n            let month = date.getMonth() + 1;\\n            let strDate = date.getDate();\\n            let strHours = date.getHours();\\n            let strMinutes = date.getMinutes();\\n            let strSeconds = date.getSeconds()+1;\\n            if (month >= 1 && month <= 9) {\\n                month = \\\"0\\\" + month\\n            }\\n            if (strDate >= 0 && strDate <= 9) {\\n                strDate = \\\"0\\\" + strDate\\n            }\\n            if (strHours >= 0 && strHours <= 9) {\\n                strHours = \\\"0\\\" + strHours\\n            }\\n            if (strMinutes >= 0 && strMinutes <= 9) {\\n                strMinutes = \\\"0\\\" + strMinutes\\n            }\\n            if (strSeconds >= 0 && strSeconds <= 9) {\\n                strSeconds = \\\"0\\\" + strSeconds\\n            }\\n            //let currentdate = date.getFullYear() + seperator1 + month + seperator1 + strDate + \\\" \\\" + strHours + seperator2 + strMinutes + seperator2 + strSeconds;\\n            let currentdate = (date.getFullYear()-2020)+''+ month +''+ strDate +''+ strHours+'' + strMinutes +''+ Math.ceil(strSeconds/7);\\n            return parseInt(currentdate)\\n        }\\n$.exports.getNowFormatDate = getNowFormatDate;\\n$.exports.htmlTag = htmlTag;\\n$.exports.small = function(text) {\\n    return htmlTag(\\\"small\\\", text);\\n}\\n$.exports.unique2 = function unique2(array){\\n    return Array.from(new Set(array));\\n}\\n$.exports.strDeal = function strDeal(str){\\n    str = str.split('');\\n    str = str.filter(e => (e >= 0 && e <= 9) || (e >= 'a' && e <= 'z') || (e >= 'A' && e <= 'Z') || (e >= '\\\\u4e00' && e <= '\\\\u9fa5'));\\n    str = str.join('');\\n    return str\\n}\"}]","icon":"http://q1.qlogo.cn/g?b=qq&nk=1302407216&s=640"},{"last_chapter_rule":"","title":"轻合集.蓝莓","author":"轻合集生成器","version":103,"type":"all","url":"hiker://empty","col_type":"icon_round_small_4","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', 'find:'),\n    types = { 'all': '聚合', 'video': '视频', 'music': '音频', 'live': '直播', 'cartoon': '漫画', 'read': '阅读', 'picture': '图集', 'news': '资讯', 'tool': '工具', 'other': '其它' }\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow.startsWith('find:')) {\n                    let filterKey = typeShow.slice(5)\n                    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n                } else rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n\nel.push(typeShow.startsWith('find:') ? {\n    title: '““””' + ('全部' + (typeShow[5] ? '[' + typeShow.slice(5) + ']' : '')).bold().fontcolor('#12b668'),\n    url: $(typeShow.slice(5), '查找小程序关键词').input(() => {\n        putMyVar('typeShow', 'find:' + input)\n        refreshPage(false)\n        return 'hiker://empty'\n    }),\n    col_type: 'scroll_button'\n} : {\n    title: '全部',\n    url: $('#noLoading#').lazyRule(() => {\n        putMyVar('typeShow', 'find:')\n        refreshPage(false)\n        return '再次点击【全部】可查找小程序'\n    }),\n    col_type: 'scroll_button'\n})\nfor (let k in types)\n    if (rules.find((v) => v.type == k))\n        el.push({\n            title: '““””' + (k == typeShow ? types[k].bold().fontcolor('#12b668') : types[k]),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow.startsWith('find:')) {\n    let filterKey = typeShow.slice(5)\n    if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n} else rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title, url: urlParam.shift(),\n            class_name: v.class_name, class_url: v.class_url,\n            area_name: v.area_name, area_url: v.area_url,\n            year_name: v.year_name, year_url: v.year_url,\n            sort_name: v.sort_name, sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/^(https?:\\/\\/.+?)(?:#|\\?|\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: { title: v.title },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)","searchFind":"js:\nsetResult([{\n    title: \"点我开始轻合集•视界聚搜\",\n    url: \"hiker://search?s=\" + getParam(\"keyword\"),\n    extra: {\n        rules: $.toString(() => {\n            const QING_TITLE = getMyVar('myCollection'),\n                typeShow = getMyVar('typeShow', 'find:')\n            let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n            if (typeShow.startsWith('find:')) {\n                let filterKey = typeShow.slice(5)\n                if (filterKey) rules = rules.filter((v) => v.title.includes(filterKey))\n            } else rules = rules.filter((v) => v.type == typeShow)\n            return JSON.stringify(rules)\n        })\n    }\n}])\n","search_url":"hiker://empty?keyword=**","group":"①轻合集","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"auto","preRule":"putMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', 'http://hiker.nokia.press/hikerule/dev/json_list?name=2579949378')\n// \n/*\n*/","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection'),\\n    url = getMyVar('remoteUrl')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('#noLoading#').lazyRule((url) => {\\n            if (url.startsWith('hiker://') || url.startsWith('file://'))\\n                return 'toast://仓库为本地文件，不会进行缓存，本功能也无效'\\n            deleteCache(url)\\n            back(false)\\n            return 'toast://已更新'\\n        }, url),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = disableCustom ? '导入海阔' : getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        input = parseInt(input)\\n        if(Number.isNaN(input)) input = 1\\n        else if(input < 1) input = 0\\n        saveFile('updateInterval', input.toString())\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? ['导入海阔'] : ['启用/禁用', '重新排序', '更改图标', '导入海阔']).forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n});\\nif(editMode == '导入海阔') el.push({\\n    title: '全部导入',\\n    url: '海阔视界￥home_rule_url￥' + (url.startsWith('hiker://') || url.startsWith('file://') ? url : 'hiker://files/libs/' + md5(url) + '.js'),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n(disableCustom ? data : JSON.parse(readFile('customData') || '[]')).forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = $('#noLoading#').lazyRule((i)=>{\\n                let data = $.require('hiker://page/dataLoad?rule=' + getMyVar('myCollection'))(true)\\n                return 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            }, i)\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nconst QING_TITLE = getMyVar('myCollection')\\nlet myCollection_el = [],\\n    { RULE, isIndex, pageTitle } = MY_PARAMS,\\n    thisRULE = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nif (isIndex) {\\n    RULE = thisRULE\\n} else {\\n    RULE.pages = thisRULE.pages\\n}\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.pages = RULE.pages\\nMY_RULE.pageList = JSON.parse(MY_RULE.pages || '[]')\\nMY_RULE.title = RULE.title\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(thisRULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (MY_PAGE == 1) {\\n    let loaded = getMyVar(MY_RULE.title + \\\"@pre\\\")\\n    if (!loaded || isIndex) {\\n        eval(thisRULE.preRule)\\n        putMyVar(MY_RULE.title + \\\"@pre\\\", \\\"1\\\")\\n    }\\n}\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\n// 正文解析通用变量\\nlet assignLazyRule = $.toString((QING_TITLE, title, url) => {\\n    let RULE = $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n    return { title:title, url: url, pages: RULE.pages, pageList: JSON.parse(RULE.pages || '[]') }\\n}, QING_TITLE, MY_RULE.title, MY_RULE.url)\\nfunction genMyRule() {\\n    let rule = Object.assign({}, MY_RULE)\\n    delete rule.last_chapter_rule\\n    delete rule.preRule\\n    delete rule.pageList\\n    delete rule.pages\\n    return rule\\n}\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) { return rule }\\n}\\nfunction genExUrl(url) {\\n    url = url.split(';')\\n    return url.shift() + ';' + paramHandle(url, thisRULE.ua, MY_RULE.url)\\n}\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            if(!v.extra) v.extra = {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n            let MY__RULE = Object.assign(genMyRule(), { params: v.extra })\\n\\n            if (typeof v.url != 'string' || ['rule', 'pics', 'toast', 'input', 'confirm', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || v.extra.rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = (subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url) || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = Object.assign({}, v.extra, {\\n                url: genExUrl(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            })\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) { return '' }\\n            }),\\n            res = {\\n                title: title, url: url,\\n                desc: desc, img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + assignLazyRule + ');' + res.url.slice(reIndex + 4)\\n            } else  if (detailFindRule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: Object.assign(genMyRule(), { detail_find_rule: detailFindRule }),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: genExUrl(url),\\n                    RULE: genMyRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = []\\n        if(interval == 0) interval = -1\\n        try { remoteData = JSON.parse(fetchCache(url, 24 * interval, {timeout:50000})) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && thisRULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(thisRULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"}]","icon":"http://q1.qlogo.cn/g?b=qq&nk=2579949378&s=640"}]