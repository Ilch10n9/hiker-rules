[{"rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html,'body&&tbody[id]');\n\nfor(var i=1;i<list.length+1;i++){\nd.push({\ntitle: (i)+ '. ' +parseDomForHtml(list[i-1],'.xst&&Text'),\nurl:'x5://https://www.52pojie.cn/'+parseDomForHtml(list[i-1],'a&&href'),\ncol_type: 'text_1'});\n}\n\r\nres.data = d;\nsetHomeResult(res);","title":"吾爱破解","url":"https://www.52pojie.cn/forum.php?mod=guide&view=hot&page=fypage"},{"interceptor":"","rule":"js:\nsetResult([{\n    url: MY_URL.split(\"##\")[1],\n    col_type: \"x5_webview_single\",\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true\n    }\n}])","title":"Poki游戏","url":"hiker://empty##https://poki.cn"},{"interceptor":"","rule":"js:(\n() => {\n    var d = [];\n    d.push({title: \"\", url: MY_URL.split(\"##\")[1], col_type: \"x5_webview_single\", desc: \"100%&&float\", pic_url: \"\", extra: {floatVideo: true, canBack: true, js: $.toString(() => {\n        try {\n            if (document.title && document.title.length) {\n                let r = $$$().lazyRule((t) => {\n                    setPageTitle(t);\n                }\n                , document.title);\n                fy_bridge_app.parseLazyRule(r);\n            }\n        }\n        catch (e) {\n            fy_bridge_app.log(e.toString());\n        }\n    }\n    ), blockRules: [\".gif\", \"/ad/\"]}});\n    setResult(d);\n}\n)()","title":"茶杯狐","url":"hiker://empty##https://cupfox.app/"},{"interceptor":"","pages":"","rule":"js:(\n() => {\n    var d = [];\n    d.push({title: \"\", url: MY_URL.split(\"##\")[1], col_type: \"x5_webview_single\", desc: \"100%&&float\", pic_url: \"\", extra: {floatVideo: true, canBack: true, js: $.toString(() => {\n        try {\n            if (document.title && document.title.length) {\n                let r = $$$().lazyRule((t) => {\n                    setPageTitle(t);\n                }\n                , document.title);\n                fy_bridge_app.parseLazyRule(r);\n            }\n        }\n        catch (e) {\n            fy_bridge_app.log(e.toString());\n        }\n    }\n    ), blockRules: [\".gif\", \"/ad/\"]}});\n    setResult(d);\n}\n)()","title":"白嫖者","ua":"mobile","url":"hiker://empty##https://www.bpzhe.com/"},{"interceptor":"","pages":"","rule":"js:(\n() => {\n    var d = [];\n    d.push({title: \"\", url: MY_URL.split(\"##\")[1], col_type: \"x5_webview_single\", desc: \"100%&&float\", pic_url: \"\", extra: {floatVideo: true, canBack: true, js: $.toString(() => {\n        try {\n            if (document.title && document.title.length) {\n                let r = $$$().lazyRule((t) => {\n                    setPageTitle(t);\n                }\n                , document.title);\n                fy_bridge_app.parseLazyRule(r);\n            }\n        }\n        catch (e) {\n            fy_bridge_app.log(e.toString());\n        }\n    }\n    ), blockRules: [\".gif\", \"/ad/\"]}});\n    setResult(d);\n}\n)()","title":"电影狗","ua":"mobile","url":"hiker://empty##https://www.dianyinggou.com/"},{"interceptor":"//www.grab4k.com/down/","rule":"js:\nif (MY_URL.startsWith(\"hiker://empty##\")) {\n    setResult([{\n        url: MY_URL.split(\"##\")[1],\n        col_type: \"x5_webview_single\",\n        desc: \"float&&100%\",\n        extra: {\n            canBack: true,\n            floatVideo: true\n        }\n    }])\n} else {\n    var d = [];\n    var html = getResCode();\n    var list = pdfa(html, '.module-row-one&&.module-row-info');\n    var content = pdfh(html, \".video-info-content&&Text\");\n    var desc = pdfh(html, \".video-info-items,1&&Text\");\n    var pic = pdfh(html, \".video-cover&&img&&data-src\");\n    d.push({\n        title: pdfh(html, \".video-info-items,2&&Text\"),\n        desc: desc,\n        pic_url: pic+'@Referer=',\n        url: pic,\n        col_type: 'movie_1_vertical_pic'\n    });\n    d.push({\n        title: content,\n        col_type: 'long_text'\n    });\n    d.push({\n        title: '‘‘磁链列表’’',\n        col_type: 'text_center_1'\n    });\n    for (var list of list) {\n        d.push({\n            title: '‘‘’’<font color= \"#3eaf7c\">' + pdfh(list, \"h4&&Text\") + '</front>',\n            url: pdfh(list, \".module-row-shortcuts&&a&&href\"),\n            col_type: 'text_1'\n        });\n    }\n    d.push({\n        col_type: 'big_big_blank_block'\n    });\n    setResult(d);\n}","title":"Grab4k","url":"hiker://empty##https://www.grab4k.com"},{"interceptor":"//mayi4k.com/vod/down/","rule":"js:\nvar d = [];\n\nlet 列表 = 'body&&.sort-list'\nlet 子列表 = '.module-row-one&&.module-row-info'\nlet 选集名 = '.module-row-title&&Text'\nlet 选集链 = '.btn-pc&&href'\n\nlet 片名 = 'h1&&Text'\nlet 类型 = '.video-info-aux&&Text'\nlet 导演 = '.video-info-items,0&&Text'\nlet 主演 = '.video-info-items,1&&Text'\nlet 更新 = '.video-info-items,2&&Text'\nlet 状态 = '.video-info-items,2&&Text'\nlet 图片 = '.lazyload&&data-src'\nlet 简介 = '.vod_content&&Text'\n\nlet 推荐列表 = '.module-items&&.module-item'\nlet 推荐名 = 'a&&title'\nlet 推荐更 = '.module-item-text&&Text'\nlet 推荐图 = '.lazy&&data-src'\nlet 推荐链 = 'a&&href'\n\n\n\nlet html = getResCode();\nlet Color = \"#f13b66a\";\nlet Color1 = \"#098AC1\";\nlet Color2 = \"#19B89D\";\nlet Colorbs = function() {\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n};\n\ntry {\n    let conts = pdfa(html, 列表);\n    var lists = [];\n    for (let i in conts) {\n        lists.push(pdfa(conts[i], 子列表))\n    }\n} catch (e) {};\n\ntry {\n    var 名 = pdfh(html, 片名).replace(/电影|电视剧|纪录片|动漫|B站/g, '')\n    var 类 = '类型：' + pdfh(html, 类型).replace(/\\/|分类：|电影|连续剧|动漫|类型：/g, '')\n    var 导 = '导演：' + pdfh(html, 导演).replace(/\\/|导演：/g, ' ')\n    var 主 = '主演：' + pdfh(html, 主演).replace(/\\/|主演：|演员：/g, ' ')\n    var 更 = '更新：' + pdfh(html, 更新).replace(/\\/|更新：|更新:|状态：|状态:/g, ' ')\n    var 状 = '状态：' + pdfh(html, 状态).replace(/\\/|状态：|状态:|更新：|更新:/g, ' ')\n    var 图 = pd(html, 图片)\n    var 介 = pdfh(html, 简介).replace(/　|展开|收起|详情：|[收起部分]|概要 :|©豆瓣/g, '')\n} catch (e) {};\n\nlet titles = 导.substring(0, 16) + '\\n' + 主.substring(0, 16) + '\\n' + 更.substring(0, 16);\nlet descs = '片名：' + 名 + '\\n' + 类 + '\\n' + '\\n' + 导 + '\\n' + 主 + '\\n' + '\\n' + 更 + '\\n' + 状 + '\\n' + '\\n' + '剧情简介：' + '\\n' + 介;\n\nd.push({\n    title: '‘‘’’<b><font color=\"#b0e0e6\">' + titles + '</font></b>',\n    desc: '‘‘’’<b><b><font color=\"#708090\">简介：</b>' + '<font color=\"#778899\">' + 介.substr(0, 40) + '...</font><small><font color=\"#996666\">查看详情</font></font></small></b>',\n    pic_url: 图,\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, descs),\n    col_type: 'movie_1_vertical_pic',\n    extra: {\n        gradient: true\n    }\n});\n\nfor (let i = 0; i < 8; i++) {\n    d.push({\n        col_type: \"blank_block\"\n    })\n}\n\nfunction setLists(lists, index) {\n    d.push({\n        col_type: 'line_blank'\n    })\n}\n\nif (getMyVar('zf', 'f') == 'f') {\n    var sx = '‘‘’’<font color=\"#33ccff\">排序</font>' + '<font color=\"#33ccff\">↡</font>' + '<font color=\"#ff4c00\">↟</font>';\n} else {\n    var sx = '‘‘’’<font color=\"#33ccff\">排序</font>' + '<font color=\"#ff4c00\">↡</font>' + '<font color=\"#33ccff\">↟</font>';\n}\n\nfunction setLists(lists, index) {\n    d.push({\n        title: '‘‘’’<span style=\"color:' + Color2 + '\">磁力链接' + \"<small><font color='grey'>\" + '\\t\\t共 ' + lists[index].length + ' 条' +\n            \"</font></small>\" + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + sx,\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('zf', 'f') == 'z') {\n                putMyVar('zf', 'f');\n            } else {\n                putMyVar('zf', 'z');\n            }\n            refreshPage(true);\n            return '#noHistory#hiker://empty'\n        }),\n        col_type: 'text_center_1'\n    })\n\n    if (getMyVar('zf', 'f') == 'f') {\n        var list = lists[index].reverse();\n    } else {\n        var list = lists[index];\n    };\n\n    try {\n        for (let j = 0; j < list.length; j++) {\n            let jm = pdfh(list[j], 选集名).replace(/magnet.*/g, '');\n            let urll = pdfh(list[j], 选集链);\n            if (urll.match(/ed2k|Better/)) {\n                var url = \"download://\" + urll\n            } else {\n                var url = urll.replace(/.*\\]|.*】|.*盘\\：|.*接：|提取码.*/g, '');\n            }\n            d.push({\n                title: jm,\n                url: url,\n                col_type: 'text_center_1',\n                extra: {\n                    id: url,\n                    blockRules: ['.css', '.gif', '.jpg', '.jpeg', '.png', '.ico', '.svg', 'cnzz', 'google', 'xn--*:*', 'hm.baidu.com', '/ads/*.js', '.m3u8', '.mp4'],\n                    jsLoadingInject: true\n                }\n            });\n        }\n    } catch (e) {\n        d.push({\n            title: '暂无片源',\n            url: MY_URL,\n            col_type: 'text_center_1'\n        });\n    }\n};\n\nsetLists(lists, getMyVar(MY_URL, '0'));\n\nd.push({\n    col_type: 'big_blank_block'\n});\nd.push({\n    col_type: 'big_blank_block'\n});\nd.push({\n    col_type: 'big_blank_block'\n});\nd.push({\n    col_type: 'big_blank_block'\n});\n\nif (getMyVar('yn', 'no') == 'no') {\n    var kg = '‘‘’’<font color=\"#33cccc\">相关影视推荐 ▴</font>';\n} else {\n    var kg = '‘‘’’<font color=\"#33cccc\">相关影视推荐 ▾</font>';\n}\n\nd.push({\n    title: kg,\n    url: $('#noLoading#').lazyRule(() => {\n        if (getMyVar('yn', 'no') == 'yes') {\n            putMyVar('yn', 'no');\n        } else {\n            putMyVar('yn', 'yes');\n        }\n        refreshPage(true);\n        return '#noHistory#hiker://empty'\n    }),\n    col_type: 'text_1'\n})\n\nif (getMyVar('yn', 'no') == 'no') {\n    d.push({\n        title: '““””<small><font color=#20b2aa>数据资源收集于网络，软件不提供任何资源！</font></small>',\n        desc: '““””<small><font color=#ff7f50>本规则仅限学习与交流，请导入后24小时内删除，请勿传播！</font></small>',\n        url: MY_URL,\n        col_type: 'text_center_1'\n    });\n} else {\n    var tui = pdfa(html, 推荐列表);\n}\n\nfor (let i in tui) {\n    try {\n        d.push({\n            title: pdfh(tui[i], 推荐名),\n            desc: pdfh(tui[i], 推荐更),\n            pic_url: pd(tui[i], 推荐图),\n            url: $(pd(tui[i], 推荐链) + \"#immersiveTheme#\").rule(() => {\n                require('hiker://page/蚂蚁4K');\n            }),\n            col_type: 'movie_3_marquee'\n        });\n    } catch (e) {};\n};\n\nd.push({\n    title: '<br>',\n    col_type: 'rich_text'\n});\n\nlet conts = pdfa(html, 列表)[0];\nlet list = pdfa(conts, 子列表);\nlet title = pdfh(list[list.length - 1], 选集名);\n\nsetLastChapterRule('js:' + $.toString((title) => {\n    setResult('更新：' + title);\n}, title));\n\nsetResult(d);\n\n//by随风整合\n//二级模板","title":"蚂蚁4K"},{"interceptor":"","rule":"js:\nvar d = [];\nd.push({\n    title: \"\",\n    url: MY_URL.split(\"##\")[1],\n    col_type: \"x5_webview_single\",\n    desc: \"100%&&float\",\n    pic_url: \"\",\n    extra: {\n        floatVideo: true,\n        canBack: true,\n        js: $.toString(() => {\n            try {\n                if (document.title && document.title.length) {\n                    let r = $$$().lazyRule((t) => {\n                        setPageTitle(t);\n                    }, document.title);\n                    fy_bridge_app.parseLazyRule(r);\n                }\n            } catch (e) {\n                fy_bridge_app.log(e.toString());\n            }\n        }),\n        blockRules: ['.gif', '/ad/']\n    }\n});\n\nsetResult(d);","title":"达达龟","url":"hiker://empty##http://www.dadagui.com"},{"interceptor":"https://www\\.52bdys\\.com/.*/.*\\.htm$","rule":"js:\nvar items = [];\nif (MY_URL.includes(\"hiker://empty##\")) {\n    var d = [];\n    d.push({\n        title: \"\",\n        url: MY_URL.split(\"##\")[1],\n        col_type: \"x5_webview_single\",\n        desc: \"100%&&float\",\n        pic_url: \"\",\n        extra: {\n            floatVideo: true,\n            canBack: true,\n            js: $.toString(() => {\n                try {\n                    if (document.title && document.title.length) {\n                        let r = $$$().lazyRule((t) => {\n                            setPageTitle(t);\n                        }, document.title);\n                        fy_bridge_app.parseLazyRule(r);\n                    }\n                } catch (e) {\n                    fy_bridge_app.log(e.toString());\n                }\n            }),\n            blockRules: ['.gif', '/ad/']\n        }\n    });\n    setResult(d);\n} else {\n    //MY_URL = MY_URL.split(\"##\")[1]\n    var html = fetch(MY_URL, {\n        headers: {\n            \"User-Agent\": PC_UA\n        }\n    });\nlet t = pdfh(html, \"head&&title&&Text\");\nsetPageTitle(t);\n    if (html.includes('secondary')) {\n        items.push({\n            title: '在线播放',\n            col_type: 'text_1'\n        });\n        var plist = parseDomForArray(html, 'body&&.secondary');\n\n        var col_type = parseDomForHtml(plist[0], 'a&&Text').length > 5 ? 'text_2' : 'text_4';\n        for (let i in plist) {\n            items.push({\n                title: parseDomForHtml(plist[i], 'a&&Text'),\n                url: 'x5://' + parseDom(plist[i], 'a&&href'),\n                col_type: col_type,\n                extra: {\n                    blockRules: ['baidu.com', 'google', 'srgwxvm.cn', 'aliys.net', '/images/close.png', '/wwpic/51986_tU3e8L-mTtuXB6L_1650902996/0']\n                }\n            });\n        }\n    };\n\n    if (html.includes('id=\"download-list')) {\n        items.push({\n            title: '下载地址(磁力/电驴)',\n            col_type: 'text_1'\n        });\n        var mid = parseDomForHtml(html, '#reply-form&&input&&value');\n        var json = JSON.parse(request('https://www.52bdys.com/downloadInfo/list?mid=' + mid, {\n            headers: {\n                \"Referer\": \"https://www.52bdys.com\"\n            }\n        }));\n        for (let i in json) {\n            items.push({\n                title: json[i].downloadCategory.name,\n                url: json[i].url,\n                col_type: 'text_3'\n            });\n        }\n    };\n\n    if (html.includes('id=\"torrent-list')) {\n        items.push({\n            title: '种子列表',\n            col_type: 'text_1'\n        });\n        var trlist = parseDomForArray(html, '#torrent-list&&.item');\n        for (let i in trlist) {\n            items.push({\n                title: parseDomForHtml(trlist[i], 'a&&Text'),\n                url: parseDom(trlist[i], 'a&&href') + \";{Referer@\" + MY_URL + \"}\",\n                col_type: 'text_center_1'\n            });\n        }\n    };\n    setResult(items);\n}","title":"哔嘀","url":"hiker://empty##https://www.52bdys.com/"},{"interceptor":"","rule":"js:\nvar d = [];\nd.push({\n    title: \"播放\",\n    url: $.toString(() => {\n        return input;\n    }),\n    col_type: \"input\",\n    desc: \"请输入链接\",\n    pic_url: \"\"\n});\nd.push({\n    title: \"““””<small>支持磁力、电驴、种子、FTP、HTTP、RTMP等多种格式</small>\",\n    url: \"hiker://empty\",\n    col_type: \"text_center_1\"\n});\n\nsetResult(d);","title":"磁力云播","url":"hiker://empty"},{"interceptor":"","rule":"js:\nvar html = getResCode();\nvar list = parseDomForArray(html, '.articleContent&&p');\nvar items = [];\nitems.push({\n    title: '““””<h4>' + parseDomForHtml(html, '.articleTitle&&h2&&Text') + '</h4>' + parseDomForHtml(html, '.articleAuthorName&&Text'),\n    url: MY_URL,\n    col_type: 'text_center_1'\n})\nitems.push({\n    title: (list.join(\"<br>\")).replace(/<p>/g, \"<br>\").replace(/<\\/p>/g, \"\"),\n    url: '',\n    col_type: 'rich_text',\n    extra: {\n        click: true\n    }\n});\nitems.push({\n    title: \"再来一篇\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        refreshPage(true);\n        return \"hiker://empty\"\n    }),\n    col_type: \"text_center_1\"\n});\n\nsetResult({\n    data: items\n});","title":"每日一文","ua":"mobile","url":"https://meiriyiwen.com/random/iphone;get;utf-8;{Host@meiriyiwen.com}"},{"interceptor":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"目录\",\"path\":\"catalogue\",\"rule\":\"js:\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet readTheme = getItem('readTheme', 'false') == 'true' ? '#readTheme#' : '',\\n    fullTheme = getItem('fullTheme', 'true') == 'true' ? '#fullTheme#' : '',\\n    url = MY_PARAMS.href,\\n    data_list = JSON.parse(request(url, {\\n        headers: headers\\n    })).data_list;\\n\\nlet d = [];\\nd.push({\\n    title: data_list.title + \\\"\\\\n\\\" + data_list.qishu,\\n    desc: \\\"““””\\\" + \\\"点我查看往期期刊\\\".bold().big(),\\n    img: data_list.img,\\n    col_type: 'movie_1_vertical_pic_blur',\\n    url: \\\"hiker://page/history\\\",\\n    extra: {\\n        href: \\\"https://api.lifves.com/magazine/history?mag_id=\\\" + data_list.mag_id,\\n        title: data_list.title,\\n        img: data_list.img\\n    }\\n})\\nd.push({\\n    title: '目录'.big().bold(),\\n    col_type: 'rich_text'\\n})\\n\\nlet stroge = {};\\nfor (let i in data_list.ml) {\\n    let list = data_list.ml[i].list;\\n    for (let j in list) {\\n        stroge[list[j].title] = \\\"https://api.lifves.com/magazine/read?read_id=\\\" + list[j].read_id;\\n    }\\n}\\nsaveFile('stroge', JSON.stringify(stroge));\\nlet star = Object.keys(stroge);\\n\\nfor (let i in data_list.ml) {\\n    let item = data_list.ml[i];\\n    d.push({\\n        title: '““””<strong>▶' + item.title + '</strong>',\\n        col_type: 'text_1',\\n        url: \\\"hiker://empty\\\",\\n        extra: {\\n            lineVisible: false\\n        }\\n    })\\n\\n    item.list.forEach(e => {\\n        let index = star.indexOf(e.title);\\n        d.push({\\n            title: '““””&nbsp;&nbsp;&nbsp;&nbsp;•' + e.title,\\n            col_type: 'text_1',\\n            url: 'hiker://page/text' + fullTheme + readTheme,\\n            extra: {\\n                lineVisible: false,\\n                href: \\\"https://api.lifves.com/magazine/read?read_id=\\\" + e.read_id,\\n                index: index\\n            }\\n        })\\n    })\\n}\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"获取请求头\",\"path\":\"getHeaders\",\"rule\":\" function random_char(t) {\\n     for (var n = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'], i = '', e = 0; e < t; e++) {\\n         var o = Math.ceil(35 * Math.random())\\n         i += n[o]\\n     }\\n     return i\\n }\\n\\n function getSecretdate() {\\n     var t = parseInt((new Date()).getTime() / 1e3)\\n     var n = random_char(32)\\n     var i = 'timestamp=' + t + '&nonce=' + n\\n     return i\\n }\\n\\n\\n var secretdate = getSecretdate()\\n var secreted = md5(secretdate + 'apilifves5201314')\\n\\n var headers = {\\n     'Secret-Date': secretdate,\\n     'Secreted': secreted,\\n     \\\"Content-Type\\\": \\\"application/json;charset=utf-8\\\"\\n }\"},{\"col_type\":\"movie_3\",\"name\":\"往期期刊\",\"path\":\"history\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"year\\\")');\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet d = [],\\n    {\\n        href: url,\\n        title: name,\\n        img\\n    } = MY_PARAMS,\\n    collection = JSON.parse(readFile('collection') || '{}'),\\n    isCollected = !!(collection[name] && collection[name].url == url),\\n    data_list = JSON.parse(request(url, {\\n        headers: headers\\n    })).data_list;\\nsetPageTitle(name);\\nsetLastChapterRule('js:' + $.toString(() => {\\n    eval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\n    let url = MY_PARAMS.href,\\n        data_list = JSON.parse(request(url, {\\n            headers: headers\\n        })).data_list,\\n        data = data_list[0].data[0].qishu;\\n    setResult('最新：' + data);\\n}));\\nd.push({\\n    title: isCollected ? '♥已收藏' : '♡添加收藏',\\n    url: $().lazyRule((is, url, name, img) => {\\n        let collection = JSON.parse(readFile('collection') || '{}');\\n        if (is) {\\n            delete collection[name];\\n            saveFile('collection', JSON.stringify(collection));\\n            refreshPage();\\n            return 'toast://已取消收藏'\\n        } else {\\n            collection[name] = {\\n                url: url,\\n                img: img\\n            };\\n            saveFile('collection', JSON.stringify(collection));\\n            refreshPage();\\n            return 'toast://已添加收藏'\\n        }\\n    }, isCollected, url, name, img),\\n    col_type: \\\"scroll_button\\\",\\n});\\n\\nlet data = {},\\n    now = getVar('year', String(data_list[0].year));\\nfor (let list of data_list) {\\n    if (now == list.year) data = list.data;\\n    d.push({\\n        title: '““””' + (list.year == now ? '<font color=red>' + list.year + '</font>' : list.year),\\n        col_type: 'scroll_button',\\n        url: $().lazyRule((year) => {\\n            putVar('year', String(year));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, list.year)\\n    });\\n}\\nfor (let item of data) {\\n    d.push({\\n        title: item.qishu,\\n        url: 'hiker://page/catalogue#immersiveTheme#',\\n        img: item.img,\\n        extra: {\\n            href: \\\"https://api.lifves.com/magazine/book?mag_id=\\\" + item.mag_id + \\\"&qishu=\\\" + item.qishu\\n        }\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"文章\",\"path\":\"text\",\"rule\":\"js:\\naddListener('onClose', $.toString(() => {\\n    clearVar('texthref');\\n    clearVar('texttitle');\\n    clearVar('textindex');\\n}));\\nlet click = getItem('click', 'true'),\\n    fontsize = parseInt(getItem('fontsize', String(17))),\\n    indent = parseInt(getItem('indent', String(7))),\\n    indents = '';\\nfor (let i = 0; i < indent; i++) {\\n    indents += '&nbsp;';\\n}\\nlet stroge = JSON.parse(readFile('stroge')),\\n    star = Object.keys(stroge);\\n\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet index = parseInt(getVar('textindex') || MY_PARAMS.index),\\n    href = getVar('texthref', '') || MY_PARAMS.href,\\n    data_list = JSON.parse(request(href, {\\n        headers: headers\\n    })).data_list;\\n\\nlet d = [];\\nd.push({\\n    title: '““””<h2>' + data_list.title + '</h2>',\\n    col_type: 'text_center_1',\\n    url: \\\"http://qk.demo.lifves.com/book/read/\\\" + data_list.mag_id + \\\"/\\\" + data_list.qishu + \\\"/\\\" + data_list.read_id,\\n    extra: {\\n        lineVisible: false\\n    }\\n}, {\\n    title: data_list.content.replace(/\\\\>[a-zA-Z0-9+=\\\\-\\\\/]*\\\\</g, '><').replace(/(\\\\<p\\\\>\\\\s*)+\\\\</g,'<').replace(/\\\\<p\\\\>/g, '<p>' + indents),\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: fontsize,\\n        click: click\\n    }\\n})\\nif (index != 0) {\\n    let title = star[index - 1];\\n    let href = stroge[title];\\n    d.push({\\n        title: '上一篇:' + title,\\n        col_type: 'text_center_1',\\n        url: $('hiker://empty#noLoading#').lazyRule((href, title, index) => {\\n            putVar('texthref', href);\\n            putVar('texttitle', title);\\n            putVar('textindex', String(index - 1));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, href, title, index),\\n        extra: {\\n            href: href,\\n            lineVisible: false\\n        }\\n    })\\n}\\nif (index != star.index) {\\n    let title = star[index + 1];\\n    let href = stroge[title];\\n    d.push({\\n        title: '下一篇:' + title,\\n        col_type: 'text_center_1',\\n        url: $('hiker://empty#noLoading#').lazyRule((href, title, index) => {\\n            putVar('texthref', href);\\n            putVar('texttitle', title);\\n            putVar('textindex', String(index + 1));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, href, title, index),\\n        extra: {\\n            href: href,\\n            lineVisible: false\\n        }\\n    })\\n}\\nfor (let i = 0; i < 10; i++) {\\n    d.push({\\n        col_type: 'blank_block'\\n    })\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"设置页\",\"path\":\"setting\",\"rule\":\"js:\\nlet d = [];\\nlet fontsize = parseInt(getItem('fontsize', String(17)));\\nlet indent = parseInt(getItem('indent', String(7)));\\nlet indents = '';\\nfor (let i = 0; i < indent; i++) {\\n    indents += '&nbsp;';\\n}\\nlet readTheme = getItem('readTheme','false');\\nlet fullTheme = getItem('fullTheme', 'true');\\nlet click = getItem('click', 'true');\\n\\nd.push({\\n    title: '阅读模式' + (readTheme == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: readTheme == 'true' ? $('hiker://empty#noLoading#').lazyRule(() => {\\n        setItem('readTheme', 'false');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }) :$('注意：开启阅读模式后,全屏模式设置和字号设置将不起作用！').confirm(() => {\\n        setItem('readTheme', 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    })\\n})\\nd.push({\\n    title: '全屏模式' + (fullTheme == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: $('hiker://empty#noLoading#').lazyRule((i) => {\\n        setItem('fullTheme', i == 'true' ? 'false' : 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, fullTheme)\\n})\\nd.push({\\n    title: '点击翻页' + (click == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: $('hiker://empty#noLoading#').lazyRule((i) => {\\n        setItem('click', i == 'true' ? 'false' : 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, click)\\n})\\n\\nd.push({\\n    title: '调整字号'.big().bold(),\\n    col_type: 'rich_text'\\n})\\nd.push({\\n    title: '字号➕',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('fontsize', String(s + 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, fontsize)\\n}, {\\n    title: '字号➖',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('fontsize', String(s - 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, fontsize)\\n})\\n\\nd.push({\\n    col_type: 'line'\\n})\\n\\nd.push({\\n    title: '调整缩进'.big().bold(),\\n    col_type: 'rich_text'\\n})\\nd.push({\\n    title: '缩进➕',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('indent', String(s + 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, indent)\\n}, {\\n    title: '缩进➖',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('indent', String(s - 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, indent)\\n})\\n\\nd.push({\\n    col_type: 'line'\\n})\\n\\nd.push({\\n    title: '预览'.big() + '(字号:' + fontsize + ',缩进:' + indent + ')',\\n    col_type: 'rich_text'\\n}, {\\n    title: '<p>小棉袄帅吗?</p><p>小棉袄怎么这么帅？</p><p>小棉袄真是超超超超超超超超级帅!!!!帅炸了好不好？举世颜无双!!!!</p>'.replace(/\\\\<p\\\\>/g, '<p>' + indents),\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: fontsize\\n    }\\n})\\nsetResult(d);\"}]","rule":"js:\nlet d = [];\nlet now = getItem('now', '推荐期刊');\nif (MY_PAGE == 1) {\n    let arr = ['推荐期刊', '热门期刊', '直播', '收藏'];\n    for (let it of arr) {\n        d.push({\n            title: now == it ? '““””' + it.fontcolor('red') : it,\n            col_type: 'scroll_button',\n            url: $('#noLoading#').lazyRule((it) => {\n                setItem(\"now\", it);\n                refreshPage();\n                return 'hiker://empty';\n            }, it)\n        })\n    }\n    d.push({\n        title: '规则设置',\n        col_type: 'scroll_button',\n        url: 'hiker://page/setting'\n    });\n}\nif (now == '直播') {\n    eval(JSON.parse(fetch(\"hiker://page/getHeaders\")).rule);\n    let zb_list = JSON.parse(request(\"https://api.lifves.com/magazine/source\", {\n            headers: headers\n        })).data_list.live_source_list,\n        select_list = zb_list.select_list,\n        source_list = zb_list.source_list,\n        select_zb = getItem('select_zb', select_list[0].value);\n    if (MY_PAGE == 1) {\n        d.push({\n            col_type: \"blank_block\"\n        });\n        for (let obj of select_list) {\n            d.push({\n                title: obj.value == select_zb ? '““””' + obj.label.fontcolor('red') : obj.label,\n                url: $('#noLoading#').lazyRule((e) => {\n                    setItem('select_zb', e);\n                    refreshPage();\n                    return 'hiker://empty'\n                }, obj.value),\n                col_type: \"scroll_button\"\n            });\n        }\n        for (let it of source_list[select_zb].list) {\n            d.push({\n                title: it.title,\n                url: $().lazyRule((tag) => {\n                    eval(JSON.parse(fetch(\"hiker://page/getHeaders\")).rule);\n                    let list = JSON.parse(request('http://api.lifves.com/video/getLiveSourceLink?tag=' + tag, {\n                            headers: headers\n                        })).data_list,\n                        urls = list.map(v => v.href);\n                    return JSON.stringify({\n                        urls: urls\n                    });\n                }, it.tag),\n                col_type: \"icon_4_card\",\n                desc: it.sub_title,\n                pic_url: it.img\n            });\n        }\n    }\n} else if (now == '推荐期刊' || now == '热门期刊') {\n    eval(JSON.parse(fetch(\"hiker://page/getHeaders\")).rule);\n    let category_id = now == \"推荐期刊\" ? 0 : 1,\n        qk_list = JSON.parse(request(\"https://api.lifves.com/magazine/more?category_id=\" + category_id + \"&page=\" + MY_PAGE, {\n            headers: headers\n        })).data_list;\n    for (let i in qk_list) {\n        let it = qk_list[i];\n        d.push({\n            title: it.title,\n            desc: it.qishu,\n            img: it.img,\n            col_type: 'movie_3',\n            url: 'hiker://page/catalogue#immersiveTheme#',\n            extra: {\n                href: 'https://api.lifves.com/magazine/book?mag_id=' + it.mag_id + '&qishu=' + it.qishu,\n            }\n        });\n    }\n} else if (now == '收藏') {\n    if (MY_PAGE == 1) {\n        let collection = JSON.parse(readFile('collection') || '{}');\n        for (let i in collection) {\n            let it = collection[i];\n            d.push({\n                title: i,\n                col_type: 'movie_3',\n                img: it.img,\n                url: 'hiker://page/history',\n                extra: {\n                    href: it.url,\n                    title: i,\n                    img: it.img\n                }\n            })\n        }\n    }\n}\nsetResult(d);","title":"期刊杂志demo","ua":"mobile","url":"hiker://empty##fypage"},{"col_type":"movie_1_vertical_pic","interceptor":"https://m.01xs.com/xiaoshuo/.*/.*","pages":"[]","rule":"js:\nif (MY_URL.endsWith(\"https://m.01xs.com/\")) {\n    setResult([{\n        url: MY_URL.split(\"##\")[1],\n        col_type: \"x5_webview_single\",\n        desc: \"100%&&float\",\n        extra: {\n            canBack: true\n        }\n    }])\n} else {\n    MY_URL = MY_URL.replace(\"https://m.01xs.com/\", \"https://www.01xs.com/\");\n    var d = [];\n    var html = fetch(MY_URL, {\n        headers: {\n            \"User-Agent\": PC_UA\n        }\n    });\n\n    getResCode = () => {\n        return html;\n    }\n\n    var conts = parseDomForArray(html, '.chapterlist,1&&ul');\n\n    var lists = [];\n    for (var i in conts) {\n        lists.push(parseDomForArray(conts[i], 'body&&a'))\n    }\n\n    var des_desc = '简介：' + parseDomForHtml(html, '.articleinfo&&.p3&&Text').substring(0, 28) + '...查看详情';\n    let na = pdfh(getResCode(), '.articleinfo&&img&&alt').replace(getUrl() + \"/\", \"\")\n    setPageTitle(na);\n    d.push({\n        title: '书名：' + na + '\\n' + parseDomForHtml(getResCode(), '.articleinfo&&.author&&Text').replace(getUrl() + \"/\", \"\") + '\\t' + '\\t' + parseDomForHtml(getResCode(), '.articleinfo&&.p4&&Text').split('文章')[1].replace(getUrl() + \"/\", \"\") + '\\n' + parseDomForHtml(getResCode(), '.articleinfo&&.p4,2&&Text').replace(getUrl() + \"/\", \"\"),\n        desc: des_desc,\n        pic_url: parseDom(getResCode(), '.articleinfo&&img&&src'),\n        url: 'hiker://empty#' + '　　' + parseDomForHtml(html, '.articleinfo&&.p3&&Text') + `@rule=js:var res = {}; var d = [];d.push({title: MY_URL.split('hiker://empty#')[1],col_type: 'rich_text',extra: {textSize: 20}});res.data = d; setHomeResult(res);`,\n        col_type: 'movie_1_vertical_pic'\n    });\n\n    d.push({\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\"color: #FF0000\">目录</span></b>' : '““””<b><span style=\"color: #1aad19\">目录</span></b>',\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\n        col_type: 'text_center_1'\n    })\n\n    function setLists(lists, index) {\n        var list = lists[index];\n        d.push({\n            col_type: 'big_blank_block'\n        });\n        d.push({\n            col_type: 'big_blank_block'\n        });\n        if (getVar('shsort') == '1') {\n            for (var j = list.length - 1; j >= 0; j--) {\n                var jm = parseDomForHtml(list[j], 'Text');\n                d.push({\n                    title: jm,\n                    url: parseDom(list[j], 'a&&href') + \"#autoPage##readTheme#\" + `@rule=js:` + $.toString(() => {\n                        let d = [];\n                        var des_title = parseDomForHtml(getResCode(), '#c1&&h1&&Text');\n                        d.push({\n                            title: '<big>' + des_title + '</big>',\n                            col_type: 'rich_text',\n                            extra: {\n                                click: true\n                            }\n                        });\n                        let cont = parseDomForArray(getResCode(), '#content&&p');\n                        let html = cont.map(it => '　　' + parseDomForHtml(it, 'p&&Html')).join(\"<br><br>\");\n                        d.push({\n                            title: html,\n                            col_type: \"rich_text\",\n                            extra: {\n                                textSize: 18,\n                                click: true\n                            }\n                        });\n                        setResult(d);\n                    }),\n                    col_type: jm.length > 5 ? 'text_1' : 'text_1',\n                });\n            }\n        } else {\n            for (var j = 0; j < list.length; j++) {\n                var jm = parseDomForHtml(list[j], 'Text');\n                d.push({\n                    title: jm,\n                    url: parseDom(list[j], 'a&&href') + \"#autoPage##readTheme#\" + `@rule=js:` + $.toString(() => {\n                        let d = [];\n                        var des_title = parseDomForHtml(getResCode(), '#c1&&h1&&Text');\n                        d.push({\n                            title: '<big>' + des_title + '</big>',\n                            col_type: 'rich_text',\n                            extra: {\n                                click: true\n                            }\n                        });\n                        let cont = parseDomForArray(getResCode(), '#content&&p');\n                        let html = cont.map(it => '　　' + parseDomForHtml(it, 'p&&Html')).join(\"<br><br>\");\n                        d.push({\n                            title: html,\n                            col_type: \"rich_text\",\n                            extra: {\n                                textSize: 18,\n                                click: true\n                            }\n                        });\n                        setResult(d);\n                    }),\n                    col_type: jm.length > 5 ? 'text_1' : 'text_1',\n                });\n            }\n        }\n    }\n    setLists(lists, getVar(MY_URL, '0'));\n    d.push({\n        title: '<br>',\n        col_type: 'rich_text'\n    });\n    setResult(d);\n}","title":"第一小说.","ua":"pc","url":"hiker://empty##https://m.01xs.com/"},{"col_type":"icon_round_small_4","interceptor":"","pages":"[{\"col_type\":\"text_1\",\"name\":\"ClassTab\",\"path\":\"ClassTab\",\"rule\":\"const ClassTab = function(classArray, params) {\\n    Object.assign(this, params)\\n    this.arr = classArray.map(v => this.init(v))\\n    this.sign = '$' + QING_TITLE + '_' + (this.name || '') + '_'\\n    this.color = this.color || '#12b668'\\n    this.boundary = this.boundary || 'blank_block'\\n}\\nClassTab.prototype = {\\n    constructor: ClassTab,\\n    load(el) {\\n        let folded = this.fold && getVar('fold_' + this.sign, '')\\n        if (this.arr.length > 1 && this.fold) el.push({\\n            title: '““””' + (folded ? '▶' : '▼').fontcolor('#049eff'),\\n            url: $('#noLoading#').lazyRule((sign, folded) => {\\n                putVar('fold_' + sign, { '': 'T', 'T': '' } [folded])\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, this.sign, folded),\\n            col_type: 'scroll_button'\\n        })\\n        let arr = folded ? [this.arr[0]] : this.arr\\n        arr.forEach((v) => {\\n            let { id, class_name, class_url } = v,\\n            selected = JSON.stringify(this.getClass(id))\\n            class_name.forEach((name, i) => {\\n                let url = class_url[i],\\n                    now = JSON.stringify({ name: name, url: url })\\n                el.push({\\n                    title: selected == now ? '““””' + name.fontcolor(this.color).bold() : name,\\n                    url: selected == now ? 'hiker://empty' : $('#noLoading#').lazyRule((sign, id, now) => {\\n                        putVar(sign + id, now)\\n                        refreshPage(false)\\n                        return 'hiker://empty'\\n                    }, this.sign, id, now),\\n                    col_type: 'scroll_button'\\n                })\\n            })\\n            el.push({ col_type: this.boundary })\\n        })\\n    },\\n    init(classObject) {\\n        if (typeof classObject.class_name == 'string')\\n            classObject.class_name = classObject.class_name.split('&')\\n        if (typeof classObject.class_url == 'string')\\n            classObject.class_url = classObject.class_url.split('&').map((v) => v.trim())\\n        return classObject\\n    },\\n    push(classObject) {\\n        this.arr.push(this.init(classObject))\\n    },\\n    getClass(id) {\\n        let defaultClass = this.arr.find(item => item.id == id)\\n        defaultClass = JSON.stringify(defaultClass ? {\\n            name: defaultClass.class_name[0],\\n            url: defaultClass.class_url[0]\\n        } : { name:  'cannot find id: ' + id + ' in classTab: ' + this.sign, url: ''})\\n        return JSON.parse(getVar(this.sign + id, defaultClass))\\n    },\\n    setUrl(url) {\\n        return url.replace(/\\\\$\\\\{([^}]*)\\\\}/g, (_, id) => this.getClass(id).url)\\n    }\\n}\\n// 生成头部分类\\nconst fyAll = RULE.url.includes('fyAll')\\nlet tabHeader = []\\nif (RULE.class_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyclass',\\n    class_name: RULE.class_name,\\n    class_url: RULE.class_url\\n})\\nif (RULE.area_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyarea',\\n    class_name: RULE.area_name,\\n    class_url: RULE.area_url\\n})\\nif (RULE.year_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fyyear',\\n    class_name: RULE.year_name,\\n    class_url: RULE.year_url\\n})\\nif (RULE.sort_name) tabHeader.push({\\n    id: fyAll ? 'fyAll' : 'fysort',\\n    class_name: RULE.sort_name,\\n    class_url: RULE.sort_url\\n})\\ntabHeader = new ClassTab(tabHeader, { name: RULE.title, fold: readFile('tabFold'), })\\n\"},{\"col_type\":\"icon_2_round\",\"name\":\"设置\",\"path\":\"Config\",\"rule\":\"js:\\naddListener('onClose', 'clearMyVar(\\\"sortFlag\\\");refreshPage()')\\nsetPageTitle('⚙ 轻合集设置 ⚙')\\nconst QING_TITLE = getMyVar('myCollection')\\nlet data = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)(true),\\n    el = [{\\n        title: '<b> 清除缓存，立即更新 <small> （基于远程仓库，不要频繁点击）',\\n        url: $('基于远程仓库，不要频繁点击，增加仓库压力\\\\n若为本地文件，则不会进行缓存，本功能也无效').confirm(() => {\\n            deleteCache(getMyVar('remoteUrl'))\\n            back(false)\\n            return 'toast://已更新'\\n        }),\\n        img: 'hiker://images/icon4',\\n        col_type: 'avatar'\\n    }],\\n    updateInterval = readFile('updateInterval') || '1',\\n    newWindow = readFile('newWindow'),\\n    tabFold = readFile('tabFold'),\\n    disableCustom = readFile('disableCustom'),\\n    editMode = getMyVar('editMode', '启用/禁用')\\n\\nel.push({\\n    title: '  💡 更新频率: ' + (updateInterval == 0 ? '手动' : updateInterval + '天') + '  ',\\n    url: $(updateInterval, '输入更新间隔（天），为0则手动更新\\\\n本地文件链接无效').input(() => {\\n        saveFile('updateInterval', input)\\n        refreshPage()\\n        return 'hiker://empty'\\n    }),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  🖥 独立首页: ' + (newWindow ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((newWindow) => {\\n        saveFile('newWindow', newWindow ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, newWindow),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💠 分类折叠: ' + (tabFold ? '是' : '否') + '  ',\\n    url: $('#noLoading#').lazyRule((tabFold) => {\\n        saveFile('tabFold', tabFold ? '' : '1')\\n        refreshPage()\\n        return 'hiker://empty'\\n    }, tabFold),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '  💼 备份恢复  ',\\n    url: $(['备份', '恢复'], 1).select((QING_TITLE, updateInterval, newWindow, tabFold, disableCustom) => {\\n        let url = getMyVar('remoteUrl')\\n        if (!url.startsWith('hiker://') && !url.startsWith('file://'))\\n            url = 'hiker://files/libs/' + md5(url) + '.js'\\n        else if(url.startsWith('hiker://page/')) url = 'hiker://empty'\\n        if (input == '备份') return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径')\\n            .input((url, updateInterval, newWindow, tabFold, disableCustom) => {\\n                let rules = request(url),\\n                    customData = readFile('customData')\\n                writeFile(input, JSON.stringify({\\n                    updateInterval: updateInterval,\\n                    newWindow: newWindow,\\n                    tabFold: tabFold,\\n                    disableCustom: disableCustom,\\n                    customData: customData,\\n                    rules: rules\\n                }))\\n                return 'toast://已备份，注意若仓库为子页面则不备份'\\n            }, url, updateInterval, newWindow, tabFold, disableCustom)\\n        else return $('hiker://files/tmp/' + QING_TITLE + '_backup.json', '输入备份路径').input((url) => {\\n            let { updateInterval, newWindow, tabFold, disableCustom, customData, rules } = JSON.parse(request(input))\\n            saveFile('updateInterval', updateInterval)\\n            saveFile('newWindow', newWindow)\\n            saveFile('tabFold', tabFold)\\n            saveFile('disableCustom', disableCustom)\\n            saveFile('customData', customData)\\n            if(rules) writeFile(url, rules)\\n            refreshPage()\\n            return 'toast://已恢复，如果不想同步远程仓库，可以设置更新频率为手动'\\n        }, url)\\n    }, QING_TITLE, updateInterval, newWindow, tabFold, disableCustom),\\n    col_type: 'scroll_button'\\n}, {\\n    title: '““””<font color=\\\"#666666\\\"><small>特别鸣谢，小程序提供者：\\\\n' +\\n        data.reduce((self, v) => v.author ? self.concat(v.author.split('&')) : self, [])\\n        .filter((v, i, arr) => v && arr.indexOf(v) == i).join('、'),\\n    url: 'hiker://empty',\\n    col_type: 'text_center_1'\\n})\\n\\nel.push({ col_type: 'line' }, {\\n    title: '““””' + '📝'.small() + '&nbsp 轻合集自定义 &nbsp'.bold().fontcolor('#757575') + (disableCustom ? '❌' : '⭕').small(),\\n    url: $([(disableCustom ? '启用' : '禁用') + '合集自定义', '清除自定义数据'], 1).select(() => {\\n        if (input == '清除自定义数据') {\\n            deleteFile('customData')\\n        } else if (input == '启用合集自定义') {\\n            saveFile('disableCustom', '')\\n        } else {\\n            saveFile('disableCustom', '1')\\n            input += '\\\\n小程序启用/禁用、重新排序等操作均不会体现在首页小程序列表中'\\n        }\\n        refreshPage(false)\\n        return 'toast://已' + input\\n    }),\\n    col_type: 'text_center_1',\\n    extra: { lineVisible: false }\\n});\\n['启用/禁用', '重新排序', '更改图标', '导入海阔'].forEach((v) => {\\n    el.push({\\n        title: v == editMode ? '““””' + v.bold().fontcolor('#12b668') : v,\\n        url: v == editMode ? 'hiker://empty' : $('#noLoading#').lazyRule((v) => {\\n            putMyVar('editMode', v)\\n            refreshPage(false)\\n            return 'hiker://empty'\\n        }, v),\\n        col_type: 'scroll_button'\\n    })\\n})\\nJSON.parse(readFile('customData') || '[]').forEach((v, i) => {\\n    let d = { title: v.title, img: data[i].icon }\\n    switch (editMode) {\\n        case '启用/禁用':\\n            d.title = (v.visible ? '🟢  ' : '🔴  ') + d.title\\n            d.url = $('#noLoading#').lazyRule((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                rules[i].visible = !rules[i].visible\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '重新排序':\\n            let sortFlag = parseInt(getMyVar('sortFlag', '-1'))\\n            d.title = (sortFlag == i ? '🔃  ' : '') + d.title\\n            if (sortFlag == -1)\\n                d.url = $('#noLoading#').lazyRule((i) => {\\n                    putMyVar('sortFlag', i.toString())\\n                    refreshPage(false)\\n                    return 'toast://选择要移动到的位置'\\n                }, i)\\n            else\\n                d.url = $('#noLoading#').lazyRule((oldIndex, newIndex) => {\\n                    let rules = JSON.parse(readFile('customData') || '[]')\\n                    rules.splice(newIndex, 0, rules.splice(oldIndex, 1)[0])\\n                    saveFile('customData', JSON.stringify(rules))\\n                    putMyVar('sortFlag', '-1')\\n                    refreshPage(false)\\n                    return 'hiker://empty'\\n                }, sortFlag, i)\\n            break\\n        case '更改图标':\\n            d.url = $(v.icon || '', '输入新图标地址或颜色代码：').input((i) => {\\n                let rules = JSON.parse(readFile('customData') || '[]')\\n                if (input)\\n                    rules[i].icon = input\\n                else\\n                    delete rules[i].icon\\n                saveFile('customData', JSON.stringify(rules))\\n                refreshPage(false)\\n                return 'hiker://empty'\\n            }, i)\\n            break\\n        case '导入海阔':\\n            d.url = 'rule://' + base64Encode(JSON.stringify(data[i]))\\n            break\\n    }\\n    el.push(d)\\n})\\nsetResult(el)\\n\"},{\"col_type\":\"movie_3\",\"name\":\"页面载入\",\"path\":\"frameLoad\",\"rule\":\"js:\\nlet QING_TITLE = getMyVar('myCollection')\\nif (!QING_TITLE || QING_TITLE.length <= 0) {\\n    putMyVar('myCollection', MY_RULE.title)\\n    putMyVar('remoteUrl', 'hiker://page/data')\\n    QING_TITLE = getMyVar('myCollection')\\n}\\n\\nfunction runCode(rule) {\\n    try {\\n        let [input, code] = rule.split('.js:')\\n        return code ? eval(code) : rule\\n    } catch (e) {\\n        return rule\\n    }\\n}\\nlet myCollection_el = [],\\n    {\\n        RULE,\\n        HASH,\\n        isIndex,\\n        pageTitle\\n    } = MY_PARAMS\\n//log(\\\"start:\\\" + QING_TITLE)\\nlet dataRule = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)().find((v) => v.title == RULE.title)\\nlet getRule = $.toString((QING_TITLE, title) => {\\n    //log(\\\"getRule:\\\" + QING_TITLE + \\\"====\\\" + title)\\n    return $.require(\\\"hiker://page/dataLoad?rule=\\\" + QING_TITLE)().find((v) => v.title == title)\\n}, QING_TITLE, RULE.title)\\nRULE = isIndex ? dataRule : Object.assign(dataRule, RULE)\\n//log(dataRule.pageList)\\neval(JSON.parse(fetch('hiker://page/preFunc?rule=' + QING_TITLE)).rule)\\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\\n\\nif (isIndex) {\\n    // 计数已打开小程序，防止独立页面时轻合集出发关闭导致页面规则缓存清理\\n    let openedIndex = parseInt(getMyVar('openedIndex', '0'))\\n    putMyVar('openedIndex', String(openedIndex + 1))\\n    addListener = function(param0, param1, param2) {\\n        param2 = CALLBACK_KEY;\\n        if (param0 == 'onClose') param1 += ';' + $.toString(() => {\\n            let openedIndex = parseInt(getMyVar('openedIndex', '0'))\\n            putMyVar('openedIndex', String(openedIndex - 1))\\n        })\\n        method_addListener.invoke(javaContext, param0, param1, param2)\\n    }\\n    addListener('onClose', '')\\n    if (MY_PAGE == 1) {\\n        // 加载ClassTab组件\\n        eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n        tabHeader.load(myCollection_el)\\n        if (RULE.search_url) myCollection_el.push({\\n            title: \\\"搜索\\\",\\n            desc: \\\"搜你想要的...\\\",\\n            url: '\\\"hiker://search?s=\\\"+input',\\n            extra: {\\n                rules: $.toString((QING_TITLE, title) => {\\n                    let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\\n                    rules = [rules.find((v) => v.title == title)]\\n                    return JSON.stringify(rules)\\n                }, QING_TITLE, RULE.title),\\n                defaultValue: getMyVar('searchKey', ''),\\n                onChange: \\\"putMyVar('searchKey',input)\\\"\\n            },\\n            col_type: \\\"input\\\",\\n        })\\n    }\\n    // 处理MY_RULE\\n    MY_RULE.url = RULE.url\\n    MY_RULE.col_type = RULE.col_type\\n    MY_RULE.detail_col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.find_rule\\n    MY_RULE.detail_find_rule = RULE.detail_find_rule\\n    MY_RULE.pageList = JSON.parse(RULE.pages || '[]')\\n    MY_RULE.pages = JSON.stringify(MY_RULE.pageList)\\n    MY_RULE.params = {}\\n} else {\\n    MY_RULE.url = MY_PARAMS.url\\n    MY_RULE.col_type = RULE.detail_col_type\\n    MY_RULE.find_rule = RULE.detail_find_rule\\n    MY_RULE.pageList = RULE.pageList || JSON.parse(RULE.pages || '[]')\\n    MY_RULE.pages = RULE.pages\\n    MY_RULE.params = RULE.params\\n}\\nMY_RULE.ua = RULE.ua\\nMY_RULE.title = RULE.title\\nMY_RULE.preRule = RULE.preRule\\nMY_RULE.last_chapter_rule = RULE.last_chapter_rule\\n\\nif (!isIndex) {\\n    if (pageTitle) setPageTitle(pageTitle)\\n    setLastChapterRule(MY_RULE.last_chapter_rule)\\n    MY_PARAMS = MY_RULE.params\\n}\\n// 预处理并初始化config\\nif (isIndex && MY_PAGE == 1) eval(MY_RULE.preRule)\\nlet _cfg = getMyVar('initConfig', '{}')\\nif (_cfg && _cfg.length > 0) {\\n    config = JSON.parse(_cfg)\\n}\\n\\nfunction genRule() {\\n    let _a = Object.assign({}, MY_RULE);\\n    delete _a[\\\"pageList\\\"]\\n    delete _a[\\\"pages\\\"]\\n    return _a\\n}\\n\\n// 正文解析\\nif (MY_RULE.find_rule.startsWith('js:')) {\\n    setResult = function(el, param1, param2, param3) {\\n        param1 = CALLBACK_KEY\\n        param2 = MY_RULE\\n        param3 = MY_TYPE\\n        if (Array.isArray(el.data)) el = el.data;\\n        Array.prototype.push.apply(myCollection_el, el.map((v) => {\\n            let MY__RULE = genRule()\\n            MY__RULE.params = v.extra || {}\\n            v.col_type = v.col_type || MY_RULE.col_type\\n\\n            if (!v.url || ['rule', 'pics', 'toast', 'input', 'copy', 'editFile', 'x5', 'x5WebView', 'x5Play', 'web', 'select', 'x5Rule', 'webRule', 'download', 'share'].find((vv) => v.url.startsWith(vv + '://')) || ['x5_webview_single', 'input'].find((vv) => v.col_type == vv)) {\\n                return v\\n            } else if (v.url.includes('@rule=')) {\\n                let [_, url, rule] = v.url.match(/^([\\\\s\\\\S]*?)@rule=([\\\\s\\\\S]*)$/)\\n                v.url = url\\n                MY__RULE.detail_find_rule = rule\\n                MY__RULE.detail_col_type = MY_RULE.col_type\\n            } else if (v.url.startsWith('hiker://page/')) {\\n                if (v.url.includes('rule=') || (v.extra || {}).rule)\\n                    return v\\n                let [_, path, flag, params] = v.url.match(/^hiker:\\\\/\\\\/page\\\\/(.+?)(#.*?)?(?:\\\\?(.*))?$/),\\n                    subPage = MY_RULE.pageList.find((v) => v.path == path),\\n                    subUrl = (params || '').split('&').find((v) => v.startsWith('url='))\\n                v.url = subUrl ? subUrl.slice(4).replace(/？？/g, '?').replace(/＆＆/g, '&') : (v.extra || {}).url || 'hiker://empty' + flag + '?' + (params || '')\\n                MY__RULE.detail_find_rule = subPage.rule\\n                MY__RULE.detail_col_type = subPage.col_type\\n                MY__RULE.params = v.extra || {}\\n            } else if (v.url.includes('@lazyRule=')) {\\n                let reIndex = v.url.indexOf('.js:')\\n                if (reIndex >= 0) v.url = v.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + getRule + ');' + v.url.slice(reIndex + 4)\\n                return v\\n            } else if (isIndex) {\\n                if (!MY_RULE.detail_find_rule || /hiker:\\\\/\\\\/(?!empty.+$)/.test(v.url)) return v\\n            } else {\\n                return v\\n            }\\n            v.extra = {\\n                url: (function(url) {\\n                    url = url.split(';')\\n                    return url.shift() + ';' + paramHandle(url, MY_RULE.ua, MY_RULE.url)\\n                })(v.url),\\n                RULE: MY__RULE,\\n                pageTitle: isIndex && v.title\\n            }\\n            v.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            return v\\n        }))\\n        method_setResult.invoke(javaContext, myCollection_el, param1, param2, param3)\\n    }\\n    setHomeResult = setResult\\n    setSearchResult = setResult\\n\\n    eval(MY_RULE.find_rule.slice(3))\\n} else {\\n    let [_, findRule, detailFindRule] = MY_RULE.find_rule.match(/^([\\\\s\\\\S]*?)(?:==>([\\\\s\\\\S]*))?$/)\\n    findRule = findRule.split(';')\\n    parseDomForArray(getResCode(), findRule.shift()).forEach((data) => {\\n        let [title, img, desc, url] = findRule.map((v, i) => {\\n                try {\\n                    if (v == '*') return ''\\n                    else v = (i == 1 || i == 3) ?\\n                        parseDom(data, v) :\\n                        parseDomForHtml(data, v)\\n                    if (i != 3) v = runCode(v)\\n                    return v\\n                } catch (e) {\\n                    return ''\\n                }\\n            }),\\n            res = {\\n                title: title,\\n                url: url,\\n                desc: desc,\\n                img: img,\\n                col_type: MY_RULE.col_type\\n            }\\n        if (res.url) {\\n            if (res.url.includes('@lazyRule=')) {\\n                let reIndex = res.url.indexOf('.js:')\\n                if (reIndex >= 0) res.url = res.url.slice(0, reIndex) + '.js:\\\\nif(MY_RULE)Object.assign(MY_RULE, ' + getRule + ');' + res.url.slice(reIndex + 4)\\n            } else if (detailFindRule) {\\n                let _a = genRule()\\n                _a.detail_find_rule = detailFindRule\\n                res.extra = {\\n                    url: (function(url) {\\n                        url = url.split(';')\\n                        return url.shift() + ';' + paramHandle(url, MY_RULE.ua, MY_RULE.url.split(';')[2])\\n                    })(url),\\n                    RULE: _a,\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            } else if (MY_RULE.detail_find_rule) {\\n                res.extra = {\\n                    url: (function(url) {\\n                        url = url.split(';')\\n                        return url.shift() + ';' + paramHandle(url, MY_RULE.ua, MY_RULE.url)\\n                    })(url),\\n                    RULE: genRule(),\\n                    pageTitle: isIndex && title\\n                }\\n                res.url = 'hiker://page/frameLoad?rule=' + QING_TITLE\\n            }\\n        }\\n        myCollection_el.push(res)\\n    })\\n    setResult(myCollection_el)\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"数据载入\",\"path\":\"dataLoad\",\"rule\":\"$.exports = function(showAll) {\\n    let url = getMyVar('remoteUrl'),\\n        data = []\\n    if (url.startsWith('hiker://') || url.startsWith('file://')) {\\n        // 如果为本地文件则不进行缓存\\n        try {\\n            let oriData = fetch(url)\\n            if (url.startsWith('hiker://page/'))\\n                oriData = JSON.parse(oriData).rule\\n            data = JSON.parse(oriData)\\n        } catch (e) {}\\n    } else {\\n        // 获取远程数据，检查间隔默认一天\\n        let interval = parseInt(readFile('updateInterval') || '1'),\\n            oldData = fetch('hiker://files/libs/' + md5(url) + '.js'),\\n            remoteData = fetchCache(url, 24 * interval)\\n        try { remoteData = JSON.parse(remoteData) } catch(e) {}\\n        if(!Array.isArray(remoteData)) remoteData = []\\n        if (remoteData.length < 3) {\\n            log('未获取到数据')\\n            if (oldData) writeFile('hiker://files/libs/' + md5(url) + '.js', oldData)\\n            data = JSON.parse(oldData || '[]')\\n        } else {\\n            log('已获取到数据')\\n            data = remoteData\\n        }\\n    }\\n    data = data.filter((v) => { return v.title != getMyVar('myCollection') && !(v.author || '').includes('轻合集生成器') })\\n    if (readFile('disableCustom')) return data\\n    else { // 写入自定义数据\\n        let customData = JSON.parse(readFile('customData') || '[]'),\\n            rewriteData = []\\n        customData = customData.reduce((self, v) => {\\n            let index = data.findIndex((vv) => v.title == vv.title)\\n            if (index >= 0) {\\n                self.push(v)\\n                let rule = data.splice(index, 1)[0]\\n                if (showAll || v.visible)\\n                    rewriteData.push(Object.assign(rule, v))\\n            }\\n            return self\\n        }, [])\\n        data.forEach((v) => customData.push({ title: v.title, visible: true }))\\n        saveFile('customData', JSON.stringify(customData))\\n        return rewriteData.concat(data)\\n    }\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"函数重写\",\"path\":\"preFunc\",\"rule\":\"// 防止require多次运行\\nlet rCache = {}\\nrequire = function(param0, param1, param2, param3, param4) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param2 = param2 || 0\\n    param3 = MY_TICKET\\n    param4 = eval\\n    return method_require.invoke(javaContext, param0, param1, param2, param3, param4)\\n}\\nrequireCache = function(param0, param1, param2, param3, param4, param5) {\\n    if (!param0 || rCache[param0] != null) {\\n        return\\n    }\\n    rCache[param0] = 1\\n    param3 = param3 || 0\\n    param4 = MY_TICKET\\n    param5 = eval\\n    return method_requireCache.invoke(javaContext, param0, param1, param2, param3, param4, param5)\\n}\\nrc = requireCache\\n\\n// 最新章节规则注入预处理代码\\nsetLastChapterRule = function(param0) {\\n    if (!param0) return\\n    if (param0.startsWith(\\\"js:\\\") && MY_RULE.preRule) {\\n        param0 = 'js:\\\\ntry{eval(JSON.parse(fetch(\\\"hiker://page/preFunc?rule=' + QING_TITLE + '\\\")).rule);\\\\\\n            eval(base64Decode(\\\"' + base64Encode(MY_RULE.preRule) + '\\\"));\\\\\\n            let _cfg = getMyVar(\\\"initConfig\\\", \\\"{}\\\");\\\\\\n            if (_cfg && _cfg.length>0) {config = JSON.parse(_cfg)}}catch(e){log(e.message)}\\\\n;' +\\n            param0.slice(3)\\n    }\\n    method_setLastChapterRule.invoke(javaContext, param0);\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"链接处理\",\"path\":\"urlParse\",\"rule\":\"// 首页链接替换分类\\nfunction indexUrl(param) {\\n    function runCode(rule) {\\n        try {\\n            let [input, code] = rule.split('.js:')\\n            return code ? eval(code) : rule\\n        } catch (e) { return rule }\\n    }\\n    let { RULE, pageNum, QING_TITLE } = JSON.parse(param.split('###')[1])\\n    RULE = JSON.parse(base64Decode(RULE))\\n    pageNum = parseInt(pageNum)\\n    let url = RULE.url,\\n        tabHeader = []\\n\\n    eval(JSON.parse(fetch('hiker://page/ClassTab?rule=' + QING_TITLE)).rule)\\n    url = tabHeader.setUrl(fyAll ? url.replace(/fyAll/g, '$${fyAll}') : url.replace(/fy(class|area|year|sort)/g, '$${fy$1}'))\\n    url = url.replace(/fypage(?:@(-?\\\\d+)@)?(?:\\\\*(\\\\d+)@)?/g, (_, start, space) => parseInt(start || 0) + 1 + (pageNum - 1) * parseInt(space || 1))\\n    url = /^([\\\\s\\\\S]*?)(?:\\\\[firstPage=([\\\\s\\\\S]*?)\\\\])?(?:(\\\\.js:[\\\\s\\\\S]*?))?$/.exec(url)\\n    if (pageNum == 1 && url[2]) url[1] = url[2]\\n    if (url[3] && !url[1].includes('.js:')) url[1] += url[3]\\n    return runCode(url[1])\\n}\\n// 链接参数处理\\nfunction paramHandle(urlParam, ua, urlTmp) {\\n    let charset, UserAgent\\n    try { // 链接的编码和ua应该是首先继承首页链接\\n        [, , charset, UserAgent] = urlTmp.split(';')\\n        UserAgent = UserAgent.match(/^{(.*)}$/)[1].split('&&').find((v) => v.startsWith('User-Agent@'))\\n    } catch (e) {}\\n    urlParam[0] = urlParam[0] || 'GET'\\n    urlParam[1] = urlParam[1] || charset || 'UTF-8'\\n    try {\\n        urlParam[2] = urlParam[2].match(/^{(.*)}$/)[1].split('&&')\\n    } catch (e) { urlParam[2] = [] }\\n    // 添加全局UA\\n    if (!urlParam[2].some((v) => v.startsWith('User-Agent@'))) {\\n        if (UserAgent) urlParam[2].push(UserAgent)\\n        else if (ua == 'pc')\\n            urlParam[2].push('User-Agent@' + PC_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n        else if (ua == 'mobile')\\n            urlParam[2].push('User-Agent@' + MOBILE_UA.replace(/;/g, '；；').replace(/\\\\?/, '？？'))\\n    }\\n    urlParam[2] = '{' + urlParam[2].join('&&') + '}'\\n    return urlParam.join(';')\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"规则列表\",\"path\":\"data\",\"rule\":\"[{\\n        \\\"last_chapter_rule\\\": \\\"\\\",\\n        \\\"title\\\": \\\"笔趣阁APP\\\",\\n        \\\"author\\\": \\\"\\\",\\n        \\\"url\\\": \\\"https://scxs.pysmei.com/top/man/top/fysort/fyyear/fypage.html\\\",\\n        \\\"version\\\": 24,\\n        \\\"col_type\\\": \\\"movie_3\\\",\\n        \\\"class_name\\\": \\\"\\\",\\n        \\\"type\\\": \\\"read\\\",\\n        \\\"class_url\\\": \\\"\\\",\\n        \\\"area_name\\\": \\\"\\\",\\n        \\\"area_url\\\": \\\"\\\",\\n        \\\"sort_name\\\": \\\"推荐&收藏&评分&完结&最热\\\",\\n        \\\"year_name\\\": \\\"周榜&月榜&总榜\\\",\\n        \\\"sort_url\\\": \\\"commend&collect&vote&over&hot\\\",\\n        \\\"year_url\\\": \\\"week&month&total\\\",\\n        \\\"find_rule\\\": \\\"js:\\\\nvar d = [];\\\\nvar data = JSON.parse(getResCode());\\\\nfor (let it of data.data.BookList) {\\\\n    let id = it.Id;\\\\n    let cid = Math.floor(id/1000)+1;\\\\n    d.push({\\\\n        title: decodeURIComponent(it.Name),\\\\n        url: \\\\\\\"https://infosxs.pysmei.com/BookFiles/Html/\\\\\\\" + cid + \\\\\\\"/\\\\\\\" + id + \\\\\\\"/index.html\\\\\\\",\\\\n        col_type: \\\\\\\"movie_3\\\\\\\",\\\\n        desc: it.Author,\\\\n        pic_url: \\\\\\\"https://imgapixs.pysmei.com/BookFiles/BookImages/\\\\\\\" + it.Img\\\\n    });\\\\n}\\\\n\\\\nsetResult(d);\\\",\\n        \\\"search_url\\\": \\\"https://souxs.leeyegy.com/search.aspx?key=**&siteid=app2\\\",\\n        \\\"group\\\": \\\"⑧阅读\\\",\\n        \\\"searchFind\\\": \\\"js:\\\\nvar d = [];\\\\nvar data = JSON.parse(getResCode());\\\\nfor (let it of data.data) {\\\\n    let id = it.Id;\\\\n    let cid = Math.floor(id/1000)+1;\\\\n    d.push({\\\\n        title: it.Name,\\\\n        url: \\\\\\\"https://infosxs.pysmei.com/BookFiles/Html/\\\\\\\" + cid + \\\\\\\"/\\\\\\\" + id + \\\\\\\"/index.html\\\\\\\",\\\\n        col_type: \\\\\\\"movie_3\\\\\\\",\\\\n        desc: it.Author,\\\\n        content: it.Desc,\\\\n        pic_url: it.Img\\\\n    });\\\\n}\\\\n\\\\nsetResult(d);\\\",\\n        \\\"detail_col_type\\\": \\\"text_1\\\",\\n        \\\"detail_find_rule\\\": \\\"js:\\\\nvar d = [];\\\\nlet sp = \\\\\\\"},]\\\\\\\"\\\\nlet code = getResCode().replace(new RegExp(sp, \\\\\\\"g\\\\\\\"), \\\\\\\"}]\\\\\\\")\\\\n//log(code)\\\\nvar data = JSON.parse(code);\\\\n//log(data.data.list)\\\\nvar bookid = data.data.id;\\\\nvar index = Math.floor(bookid / 1000) + 1;\\\\n\\\\nfor (let it of data.data.list[0].list) {\\\\n    let chapterid = it.id;\\\\n    let chapterurl = \\\\\\\"https://contentxs.pysmei.com/BookFiles/Html/\\\\\\\" + index + \\\\\\\"/\\\\\\\" + bookid + \\\\\\\"/\\\\\\\" + chapterid + \\\\\\\".html\\\\\\\"\\\\n    d.push({\\\\n        title: it.name,\\\\n        col_type: \\\\\\\"text_2\\\\\\\",\\\\n        desc: \\\\\\\"\\\\\\\",\\\\n        pic_url: \\\\\\\"\\\\\\\",\\\\n        url: $(chapterurl + \\\\\\\"#autoPage##readTheme#\\\\\\\").rule(() => {\\\\n            $.require(\\\\\\\"hiker://page/content\\\\\\\")\\\\n        })\\\\n    });\\\\n}\\\\nsetResult(d);\\\",\\n        \\\"sdetail_col_type\\\": \\\"text_1\\\",\\n        \\\"sdetail_find_rule\\\": \\\"*\\\",\\n        \\\"ua\\\": \\\"mobile\\\",\\n        \\\"preRule\\\": \\\"\\\",\\n        \\\"pages\\\": \\\"[{\\\\\\\"col_type\\\\\\\":\\\\\\\"movie_3\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"正文\\\\\\\",\\\\\\\"path\\\\\\\":\\\\\\\"content\\\\\\\",\\\\\\\"rule\\\\\\\":\\\\\\\"var d = [];\\\\\\\\nvar data = JSON.parse(getResCode());\\\\\\\\n\\\\\\\\nd.push({\\\\\\\\n    col_type: \\\\\\\\\\\\\\\"rich_text\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"<big>\\\\\\\\\\\\\\\" + data.data.cname + \\\\\\\\\\\\\\\"</big>\\\\\\\\\\\\\\\",\\\\\\\\n    extra: {\\\\\\\\n        click: true\\\\\\\\n    }\\\\\\\\n});\\\\\\\\nd.push({\\\\\\\\n    title: data.data.content.replace(new RegExp(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"g\\\\\\\\\\\\\\\"), \\\\\\\\\\\\\\\"<br>\\\\\\\\\\\\\\\").replace(new RegExp(\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"g\\\\\\\\\\\\\\\"), \\\\\\\\\\\\\\\"<br>\\\\\\\\\\\\\\\").replace(new RegExp(\\\\\\\\\\\\\\\"<br><br>　　<br><br>\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"g\\\\\\\\\\\\\\\"), \\\\\\\\\\\\\\\"<br><br>\\\\\\\\\\\\\\\"),\\\\\\\\n    col_type: 'rich_text',\\\\\\\\n    extra: {\\\\\\\\n        textSize: 18,\\\\\\\\n        click: true\\\\\\\\n    }\\\\\\\\n});\\\\\\\\nsetResult(d);\\\\\\\"}]\\\",\\n        \\\"icon\\\": \\\"\\\"\\n    },   \\n    {\\n        \\\"firstHeader\\\": \\\"class\\\",\\n        \\\"last_chapter_rule\\\": \\\"\\\",\\n        \\\"title\\\": \\\"顶点小说🅛\\\",\\n        \\\"author\\\": \\\"警告：本小程序仅供海阔视界用户学习交流使用。如有导入，请务必在24小时之内删除！若作它用，后果自负！\\\",\\n        \\\"url\\\": \\\"https://m.top.la/list/fyAll_fypage.html;get;gbk\\\",\\n        \\\"version\\\": 58,\\n        \\\"col_type\\\": \\\"movie_3\\\",\\n        \\\"class_name\\\": \\\"玄幻小说&仙侠小说&都市小说&历史军事\\\",\\n        \\\"type\\\": \\\"read\\\",\\n        \\\"class_url\\\": \\\"1&2&3&4\\\",\\n        \\\"area_name\\\": \\\"网游小说&科幻小说&言情小说\\\",\\n        \\\"area_url\\\": \\\"5&6&7\\\",\\n        \\\"sort_name\\\": \\\"\\\",\\n        \\\"year_name\\\": \\\"\\\",\\n        \\\"sort_url\\\": \\\"\\\",\\n        \\\"year_url\\\": \\\"\\\",\\n        \\\"find_rule\\\": \\\".list&&.xbk:has(li);span&&Text;img&&src;*;a&&href.js:input+\\\\\\\"mulu/1/\\\\\\\"\\\",\\n        \\\"search_url\\\": \\\"https://m.top.la/s.php?submit=&type=articlename&s=**;post;gbk\\\",\\n        \\\"group\\\": \\\"⑧阅读\\\",\\n        \\\"searchFind\\\": \\\"js:\\\\nvar res = {};\\\\r\\\\nvar d = [];\\\\r\\\\ntry {\\\\r\\\\n    var list = parseDomForArray(getResCode(), '.slist&&li');\\\\r\\\\n    for (var j in list) {\\\\r\\\\n        d.push({\\\\r\\\\n            title: parseDomForHtml(list[j], 'a,1&&Text'),\\\\r\\\\n            desc: parseDomForHtml(list[j], 'a,-1&&Text'),\\\\r\\\\n            //pic_url: parseDom(list[j], 'img&&data-original'),       \\\\r\\\\n            url: parseDom(list[j], 'a,1&&href') + \\\\\\\"/mulu/1/\\\\\\\"\\\\r\\\\n        });\\\\r\\\\n    }\\\\r\\\\n} catch (e) {}\\\\r\\\\nres.data = d;\\\\r\\\\nsetHomeResult(res);\\\",\\n        \\\"detail_col_type\\\": \\\"text_1\\\",\\n        \\\"detail_find_rule\\\": \\\"js:\\\\n$.require(\\\\\\\"hiker://page/chapter\\\\\\\")\\\",\\n        \\\"sdetail_col_type\\\": \\\"movie_1\\\",\\n        \\\"sdetail_find_rule\\\": \\\"*\\\",\\n        \\\"ua\\\": \\\"mobile\\\",\\n        \\\"preRule\\\": \\\"\\\",\\n        \\\"pages\\\": \\\"[{\\\\\\\"col_type\\\\\\\":\\\\\\\"movie_3\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"正文\\\\\\\",\\\\\\\"path\\\\\\\":\\\\\\\"content\\\\\\\",\\\\\\\"rule\\\\\\\":\\\\\\\"var d = [];\\\\\\\\nd.push({\\\\\\\\n    col_type: \\\\\\\\\\\\\\\"rich_text\\\\\\\\\\\\\\\",\\\\\\\\n    title: \\\\\\\\\\\\\\\"<big>\\\\\\\\\\\\\\\" + parseDomForHtml(getResCode(), \\\\\\\\\\\\\\\"#header&&.zhong&&Text\\\\\\\\\\\\\\\") + \\\\\\\\\\\\\\\"</big>\\\\\\\\\\\\\\\",\\\\\\\\n    extra: {\\\\\\\\n        click: true\\\\\\\\n    }\\\\\\\\n});\\\\\\\\nd.push({\\\\\\\\n    title: parseDomForHtml(getResCode(), \\\\\\\\\\\\\\\"#nr&&Html\\\\\\\\\\\\\\\"),\\\\\\\\n    col_type: 'rich_text',\\\\\\\\n    extra: {\\\\\\\\n        textSize: 18,\\\\\\\\n        click: true\\\\\\\\n    }\\\\\\\\n});\\\\\\\\nsetResult(d);\\\\\\\"},{\\\\\\\"col_type\\\\\\\":\\\\\\\"movie_3\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"目录解析\\\\\\\",\\\\\\\"path\\\\\\\":\\\\\\\"chapter\\\\\\\",\\\\\\\"rule\\\\\\\":\\\\\\\"let cfg = {\\\\\\\\n    分页列表: \\\\\\\\\\\\\\\"body&&.showpage&&a:not(:contains(没有更多分页))\\\\\\\\\\\\\\\",\\\\\\\\n    分页链接: \\\\\\\\\\\\\\\"a&&href\\\\\\\\\\\\\\\",\\\\\\\\n    分页请求头: {\\\\\\\\n        \\\\\\\\\\\\\\\"User-Agent\\\\\\\\\\\\\\\": MOBILE_UA,\\\\\\\\n        \\\\\\\\\\\\\\\"Content-Type\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\"text/html; charset=GBK\\\\\\\\\\\\\\\"\\\\\\\\n    },\\\\\\\\n    一页章节数: 40,\\\\\\\\n    章节列表: \\\\\\\\\\\\\\\"body&&.lb&&li:not(:contains(本页章节列表结束！))\\\\\\\\\\\\\\\",\\\\\\\\n    章节标题: \\\\\\\\\\\\\\\"a&&Text\\\\\\\\\\\\\\\",\\\\\\\\n    章节链接: \\\\\\\\\\\\\\\"a&&href\\\\\\\\\\\\\\\",\\\\\\\\n    缓存个数: 15\\\\\\\\n}\\\\\\\\n\\\\\\\\n\\\\\\\\nvar code = getResCode()\\\\\\\\nvar caches;\\\\\\\\n\\\\\\\\nfunction getCache() {\\\\\\\\n    let c = readFile(\\\\\\\\\\\\\\\"chapter.json\\\\\\\\\\\\\\\") || \\\\\\\\\\\\\\\"[]\\\\\\\\\\\\\\\";\\\\\\\\n    caches = JSON.parse(c)\\\\\\\\n    let url = getUrl()\\\\\\\\n    log(url)\\\\\\\\n    addListener(\\\\\\\\\\\\\\\"onRefresh\\\\\\\\\\\\\\\", $.toString((url) => {\\\\\\\\n        let c = readFile(\\\\\\\\\\\\\\\"chapter.json\\\\\\\\\\\\\\\") || \\\\\\\\\\\\\\\"[]\\\\\\\\\\\\\\\";\\\\\\\\n        c = JSON.parse(c)\\\\\\\\n        let che = {\\\\\\\\n            url: url,\\\\\\\\n            page: 0,\\\\\\\\n            chapters: []\\\\\\\\n        };\\\\\\\\n        for (let i = 0; i < c.length; i++) {\\\\\\\\n            if (c[i].url == che.url) {\\\\\\\\n                c[i] = che;\\\\\\\\n                log(\\\\\\\\\\\\\\\"clear:\\\\\\\\\\\\\\\" + url)\\\\\\\\n                saveFile(\\\\\\\\\\\\\\\"chapter.json\\\\\\\\\\\\\\\", JSON.stringify(c))\\\\\\\\n                break\\\\\\\\n            }\\\\\\\\n        }\\\\\\\\n    }, url))\\\\\\\\n    for (let it of caches) {\\\\\\\\n        if (it.url == url) {\\\\\\\\n            return it;\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    return {\\\\\\\\n        url: url,\\\\\\\\n        page: 0,\\\\\\\\n        chapters: []\\\\\\\\n    }\\\\\\\\n}\\\\\\\\n\\\\\\\\nfunction saveCache(che) {\\\\\\\\n    let c = caches\\\\\\\\n    if (c.length > cfg.缓存个数) {\\\\\\\\n        c.shift()\\\\\\\\n    }\\\\\\\\n    let exist = false\\\\\\\\n    for (let i = 0; i < c.length; i++) {\\\\\\\\n        if (c[i].url == che.url) {\\\\\\\\n            c[i] = che;\\\\\\\\n            exist = true;\\\\\\\\n            break\\\\\\\\n        }\\\\\\\\n    }\\\\\\\\n    if (!exist) {\\\\\\\\n        c.push(che)\\\\\\\\n    }\\\\\\\\n    saveFile(\\\\\\\\\\\\\\\"chapter.json\\\\\\\\\\\\\\\", JSON.stringify(c))\\\\\\\\n}\\\\\\\\n\\\\\\\\nlet cache = getCache();\\\\\\\\n\\\\\\\\nlet mp = pdfa(code, cfg.分页列表)\\\\\\\\nlet page = mp.length;\\\\\\\\nlog(\\\\\\\\\\\\\\\"实际页数：\\\\\\\\\\\\\\\" + page)\\\\\\\\nlog(\\\\\\\\\\\\\\\"缓存页数：\\\\\\\\\\\\\\\" + cache.page)\\\\\\\\nif (page == cache.page) {\\\\\\\\n    //已完结，目录全部缓存了\\\\\\\\n    setResult(cache.chapters)\\\\\\\\n    return\\\\\\\\n}\\\\\\\\n//解析本地没有的缓存\\\\\\\\nlet urls = []\\\\\\\\nlet htmls = []\\\\\\\\n//log(mp)\\\\\\\\nfor (let i = cache.page; i < mp.length; i++) {\\\\\\\\n    if (i == 0) {\\\\\\\\n        htmls.push(code)\\\\\\\\n        continue\\\\\\\\n    }\\\\\\\\n    let it = mp[i];\\\\\\\\n    urls.push({\\\\\\\\n        url: pd(it, cfg.分页链接),\\\\\\\\n        options: {\\\\\\\\n            headers: cfg.分页请求头 || {}\\\\\\\\n        }\\\\\\\\n    })\\\\\\\\n}\\\\\\\\n//log(urls)\\\\\\\\nlet d = [].concat(cache.chapters)\\\\\\\\nhtmls = htmls.concat(batchFetch(urls))\\\\\\\\n//log(htmls)\\\\\\\\nfor (let it of htmls) {\\\\\\\\n    if (it == \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\") {\\\\\\\\n        break\\\\\\\\n    }\\\\\\\\n    let list = pdfa(it, cfg.章节列表)\\\\\\\\n    let temp = []\\\\\\\\n    for (let ii of list) {\\\\\\\\n        temp.push({\\\\\\\\n            title: pdfh(ii, cfg.章节标题).split(\\\\\\\\\\\\\\\" （\\\\\\\\\\\\\\\")[0].split(\\\\\\\\\\\\\\\"（\\\\\\\\\\\\\\\")[0],\\\\\\\\n            url: pd(ii, cfg.章节链接) + \\\\\\\\\\\\\\\"#autoPage##readTheme#@rule=js:$.require('hiker://page/content')\\\\\\\\\\\\\\\"\\\\\\\\n        })\\\\\\\\n    }\\\\\\\\n    log(list.length)\\\\\\\\n    if (list.length == cfg.一页章节数) {\\\\\\\\n        //章节齐全的才放本地缓存\\\\\\\\n        cache.page = cache.page + 1\\\\\\\\n        cache.chapters = cache.chapters.concat(temp)\\\\\\\\n    }\\\\\\\\n    d = d.concat(temp)\\\\\\\\n}\\\\\\\\n\\\\\\\\nsaveCache(cache)\\\\\\\\nsetResult(d)\\\\\\\"},{\\\\\\\"col_type\\\\\\\":\\\\\\\"text_1\\\\\\\",\\\\\\\"name\\\\\\\":\\\\\\\"目录分页\\\\\\\",\\\\\\\"path\\\\\\\":\\\\\\\"cp\\\\\\\",\\\\\\\"rule\\\\\\\":\\\\\\\"js:\\\\\\\\n$.require(\\\\\\\\\\\\\\\"hiker://page/chapter\\\\\\\\\\\\\\\")\\\\\\\"}]\\\",\\n        \\\"icon\\\": \\\"\\\"\\n    }, {\\n        \\\"last_chapter_rule\\\": \\\"js:\\\\nvar html = getResCode();\\\\nvar conts = parseDomForArray(html, '.chapterlist,1&&ul')[0];\\\\nvar list=parseDomForArray(conts, 'body&&a');\\\\nvar title=parseDomForHtml(list[list.length-1],'Text');\\\\nsetResult(\\\\\\\"更新至: \\\\\\\"+title);\\\",\\n        \\\"title\\\": \\\"第一小说\\\",\\n        \\\"author\\\": \\\"大众\\\",\\n        \\\"url\\\": \\\"https://www.01xs.com/fyclass/\\\",\\n        \\\"version\\\": 7,\\n        \\\"col_type\\\": \\\"movie_1_vertical_pic\\\",\\n        \\\"class_name\\\": \\\"玄幻&仙侠&都市&历史&网游&科幻&同人&综合&青春&现代&古代&幻想&完本\\\",\\n        \\\"type\\\": \\\"read\\\",\\n        \\\"class_url\\\": \\\"fenlei1&fenlei2&fenlei3&fenlei4&fenlei5&fenlei6&fenlei7&fenlei8&fenlei9&fenlei10&fenlei11&fenlei12&qb\\\",\\n        \\\"area_name\\\": \\\"\\\",\\n        \\\"area_url\\\": \\\"\\\",\\n        \\\"sort_name\\\": \\\"\\\",\\n        \\\"year_name\\\": \\\"\\\",\\n        \\\"sort_url\\\": \\\"\\\",\\n        \\\"year_url\\\": \\\"\\\",\\n        \\\"find_rule\\\": \\\"js:\\\\nvar res = {};\\\\nvar d = [];\\\\nvar list = parseDomForArray(getResCode(), '.listcon&&ul&&li');\\\\nfor (var i in list) {\\\\n    d.push({\\\\n        title: parseDomForHtml(list[i], 'img&&alt')+'\\\\\\\\n'+ parseDomForHtml(list[i], 'span,-1&&Text').split('/')[1],\\\\n        desc: parseDomForHtml(list[i], 'p,1&&Text'),\\\\n        pic_url: parseDom(list[i], 'img&&data-original'),\\\\n        url: parseDom(list[i], 'a&&href') + \\\\\\\"#immersiveTheme#\\\\\\\",\\\\n    })\\\\n}\\\\nres.data = d;\\\\nsetHomeResult(res);\\\",\\n        \\\"search_url\\\": \\\"https://www.01xs.com/search.php?keyword=**\\\",\\n        \\\"group\\\": \\\"⑧阅读\\\",\\n        \\\"searchFind\\\": \\\"js:\\\\nvar d = [];\\\\ntry {\\\\n    var list = parseDomForArray(getResCode(), '.jilu&&.banner&&ul');\\\\n    for (var j in list) {\\\\n        d.push({\\\\n            title: parseDomForHtml(list[j], 'li,1&&Text'),\\\\n            desc: '作者：'+parseDomForHtml(list[j], 'li,3&&Text'),\\\\n            content: parseDomForHtml(list[j], 'li,2&&Text'),\\\\n            url: parseDom(list[j], 'a&&href') + \\\\\\\"#immersiveTheme#\\\\\\\",\\\\n        });\\\\n    }\\\\n} catch (e) {}\\\\nsetResult(d);\\\",\\n        \\\"detail_col_type\\\": \\\"movie_1\\\",\\n        \\\"detail_find_rule\\\": \\\"js:\\\\nvar d = [];\\\\nvar html = getResCode();\\\\n\\\\nvar conts = parseDomForArray(html, '.chapterlist,1&&ul');\\\\n\\\\nvar lists = [];\\\\nfor (var i in conts) {\\\\n    lists.push(parseDomForArray(conts[i], 'body&&a'))\\\\n}\\\\n\\\\nvar des_desc = '简介：' + parseDomForHtml(html, '.articleinfo&&.p3&&Text').substring(0, 28) + '...查看详情';\\\\nd.push({\\\\n    title: '书名：' + parseDomForHtml(getResCode(), '.articleinfo&&img&&alt').replace(getUrl() + \\\\\\\"/\\\\\\\", \\\\\\\"\\\\\\\") + '\\\\\\\\n' + parseDomForHtml(getResCode(), '.articleinfo&&.author&&Text').replace(getUrl() + \\\\\\\"/\\\\\\\", \\\\\\\"\\\\\\\") + '\\\\\\\\t' + '\\\\\\\\t' + parseDomForHtml(getResCode(), '.articleinfo&&.p4&&Text').split('文章')[1].replace(getUrl() + \\\\\\\"/\\\\\\\", \\\\\\\"\\\\\\\") + '\\\\\\\\n' + parseDomForHtml(getResCode(), '.articleinfo&&.p4,2&&Text').replace(getUrl() + \\\\\\\"/\\\\\\\", \\\\\\\"\\\\\\\"),\\\\n    desc: des_desc,\\\\n    pic_url: parseDom(getResCode(), '.articleinfo&&img&&src'),\\\\n    url: 'hiker://empty#' + '　　' + parseDomForHtml(html, '.articleinfo&&.p3&&Text') + `@rule=js:var res = {}; var d = [];d.push({title: MY_URL.split('hiker://empty#')[1],col_type: 'rich_text',extra: {textSize: 20}});res.data = d; setHomeResult(res);`,\\\\n    col_type: 'movie_1_vertical_pic_blur'\\\\n});\\\\n\\\\nd.push({\\\\n    title: (getVar('shsort') == '1') ? '““””<b><span style=\\\\\\\"color: #FF0000\\\\\\\">目录</span></b>' : '““””<b><span style=\\\\\\\"color: #1aad19\\\\\\\">目录</span></b>',\\\\n    url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\\\\n    col_type: 'text_center_1'\\\\n})\\\\n\\\\nfunction setLists(lists, index) {\\\\n    var list = lists[index];\\\\n    d.push({\\\\n        col_type: 'big_blank_block'\\\\n    });\\\\n    d.push({\\\\n        col_type: 'big_blank_block'\\\\n    });\\\\n    if (getVar('shsort') == '1') {\\\\n        for (var j = list.length - 1; j >= 0; j--) {\\\\n            var jm = parseDomForHtml(list[j], 'Text');\\\\n            d.push({\\\\n                title: jm,\\\\n                url: parseDom(list[j], 'a&&href') + \\\\\\\"#autoPage##readTheme#\\\\\\\" + `@rule=js:` + $.toString(() => {\\\\n                    let d = [];\\\\n                    var des_title = parseDomForHtml(getResCode(), '#c1&&h1&&Text');\\\\n                    d.push({\\\\n                        title: '<big>' + des_title + '</big>',\\\\n                        col_type: 'rich_text',\\\\n                        extra: {\\\\n                            click: true\\\\n                        }\\\\n                    });\\\\n                    let cont = parseDomForArray(getResCode(), '#content&&p');\\\\n                    let html = cont.map(it => '　　' + parseDomForHtml(it, 'p&&Html')).join(\\\\\\\"<br><br>\\\\\\\");\\\\n                    d.push({\\\\n                        title: html,\\\\n                        col_type: \\\\\\\"rich_text\\\\\\\",\\\\n                        extra: {\\\\n                            textSize: 18,\\\\n                            click: true\\\\n                        }\\\\n                    });\\\\n                    setResult(d);\\\\n                }),\\\\n                col_type: jm.length > 5 ? 'text_1' : 'text_1',\\\\n            });\\\\n        }\\\\n    } else {\\\\n        for (var j = 0; j < list.length; j++) {\\\\n            var jm = parseDomForHtml(list[j], 'Text');\\\\n            d.push({\\\\n                title: jm,\\\\n                url: parseDom(list[j], 'a&&href') + \\\\\\\"#autoPage##readTheme#\\\\\\\" + `@rule=js:` + $.toString(() => {\\\\n                    let d = [];\\\\n                    var des_title = parseDomForHtml(getResCode(), '#c1&&h1&&Text');\\\\n                    d.push({\\\\n                        title: '<big>' + des_title + '</big>',\\\\n                        col_type: 'rich_text',\\\\n                        extra: {\\\\n                            click: true\\\\n                        }\\\\n                    });\\\\n                    let cont = parseDomForArray(getResCode(), '#content&&p');\\\\n                    let html = cont.map(it => '　　' + parseDomForHtml(it, 'p&&Html')).join(\\\\\\\"<br><br>\\\\\\\");\\\\n                    d.push({\\\\n                        title: html,\\\\n                        col_type: \\\\\\\"rich_text\\\\\\\",\\\\n                        extra: {\\\\n                            textSize: 18,\\\\n                            click: true\\\\n                        }\\\\n                    });\\\\n                    setResult(d);\\\\n                }),\\\\n                col_type: jm.length > 5 ? 'text_1' : 'text_1',\\\\n            });\\\\n        }\\\\n    }\\\\n}\\\\nsetLists(lists, getVar(MY_URL, '0'));\\\\nd.push({\\\\n    title: '<br>',\\\\n    col_type: 'rich_text'\\\\n});\\\\nsetResult(d);\\\",\\n        \\\"sdetail_col_type\\\": \\\"movie_1\\\",\\n        \\\"sdetail_find_rule\\\": \\\"*\\\",\\n        \\\"ua\\\": \\\"pc\\\",\\n        \\\"preRule\\\": \\\"\\\",\\n        \\\"pages\\\": \\\"[]\\\",\\n        \\\"icon\\\": \\\"\\\"\\n    }\\n]\"}]","rule":"js:\nputMyVar('myCollection', MY_RULE.title)\nputMyVar('remoteUrl', 'hiker://page/data');\nconst QING_TITLE = getMyVar('myCollection'),\n    newWindow = readFile('newWindow'),\n    typeShow = getMyVar('typeShow', ''),\n    types = {\n        '': '全部',\n        'all': '聚合',\n        'video': '视频',\n        'music': '音频',\n        'live': '直播',\n        'cartoon': '漫画',\n        'read': '阅读',\n        'picture': '图集',\n        'news': '资讯',\n        'tool': '工具',\n        'other': '其它'\n    }\nlet el = [{\n        title: ' ' + QING_TITLE.bold() + ' &nbsp &nbsp ' + '⚙ 轻合集设置 ⚙'.small(),\n        url: 'hiker://page/Config?rule=' + QING_TITLE + '&#noRecordHistory#',\n        img: MY_RULE.icon || 'hiker://images/icon1',\n        col_type: 'avatar'\n    }, {\n        url: '\"hiker://search?s=\"+input',\n        desc: '搜你想要的...',\n        title: '搜索',\n        col_type: 'input',\n        extra: {\n            rules: $.toString((QING_TITLE, typeShow) => {\n                let rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\n                if (typeShow) rules = rules.filter((v) => v.type == typeShow)\n                return JSON.stringify(rules)\n            }, QING_TITLE, typeShow),\n            defaultValue: getMyVar('searchKey', ''),\n            onChange: \"putMyVar('searchKey',input)\"\n        }\n    }],\n    rules = $.require('hiker://page/dataLoad?rule=' + QING_TITLE)()\nfor (let k in types)\n    if (!k || rules.find((v) => v.type == k))\n        el.push({\n            title: '““””' + (k == typeShow ? types[k].bold().fontcolor('#12b668') : types[k]),\n            url: k == typeShow ? 'hiker://empty' : $('#noLoading#').lazyRule((k) => {\n                putMyVar('typeShow', k)\n                refreshPage(false)\n                return 'hiker://empty'\n            }, k),\n            col_type: 'scroll_button'\n        })\n\nel.push({\n    title: '““””<small><font color=#20b2aa>数据来源于对应的网站，软件和规则不提供任何内容！</font></small>',\n    desc: '““””<small><font color=#ff7f50>本规则仅限学习与交流，请导入后24小时内删除！</font></small>',\n    url: MY_URL.split(\"##\")[1],\n    col_type: 'text_center_1'\n});\neval(JSON.parse(fetch('hiker://page/urlParse?rule=' + QING_TITLE)).rule)\nif (typeShow) rules = rules.filter((v) => v.type == typeShow)\nrules.forEach((v) => {\n    let urlParam = v.url.split(';'),\n        ruleTmp = {\n            title: v.title,\n            url: urlParam.shift(),\n            class_name: v.class_name,\n            class_url: v.class_url,\n            area_name: v.area_name,\n            area_url: v.area_url,\n            year_name: v.year_name,\n            year_url: v.year_url,\n            sort_name: v.sort_name,\n            sort_url: v.sort_url\n        },\n        fypage = ruleTmp.url.includes('fypage') ? 'fypage' : '1',\n        domain = (/(https?:\\/\\/.+?)(?:\\/|$)/i.exec(ruleTmp.url) || [, 'hiker://empty'])[1],\n        d = {\n            title: v.title,\n            url: 'hiker://page/frameLoad',\n            img: v.icon || 'hiker://images/icon1',\n            extra: {\n                url: domain + '/#noHistory##noRecordHistory####' + JSON.stringify({\n                    RULE: base64Encode(JSON.stringify(ruleTmp)),\n                    pageNum: fypage,\n                    QING_TITLE: getMyVar('myCollection')\n                }) + '.js:eval(JSON.parse(fetch(\"hiker://page/urlParse？？rule=' + QING_TITLE + '\")).rule)；；indexUrl(input);' + paramHandle(urlParam, v.ua),\n                RULE: {\n                    title: v.title\n                },\n                isIndex: true\n            }\n        }\n    if (newWindow) Object.assign(d.extra, {\n        newWindow: true,\n        windowId: QING_TITLE + '_' + d.title\n    })\n    el.push(d)\n})\nsetResult(el)","title":"阅读轻合集.","ua":"auto","url":"hiker://empty"}]
