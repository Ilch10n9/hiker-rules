[{"rule":"js:\nvar res = {};\nvar d = [];\nvar html = getResCode();\n\n//列表\nvar list = parseDomForArray(html,'body&&tbody[id]');\n\nfor(var i=1;i<list.length+1;i++){\nd.push({\ntitle: (i)+ '. ' +parseDomForHtml(list[i-1],'.xst&&Text'),\nurl:'x5://https://www.52pojie.cn/'+parseDomForHtml(list[i-1],'a&&href'),\ncol_type: 'text_1'});\n}\n\r\nres.data = d;\nsetHomeResult(res);","title":"吾爱破解","url":"https://www.52pojie.cn/forum.php?mod=guide&view=hot&page=fypage"},{"interceptor":"//www.grab4k.com/down/","rule":"js:\nif (MY_URL.startsWith(\"hiker://empty##\")) {\n    setResult([{\n        url: MY_URL.split(\"##\")[1],\n        col_type: \"x5_webview_single\",\n        desc: \"float&&100%\",\n        extra: {\n            canBack: true,\n            floatVideo: true\n        }\n    }])\n} else {\n    var d = [];\n    var html = getResCode();\n    var list = pdfa(html, '.module-row-one&&.module-row-info');\n    var content = pdfh(html, \".video-info-content&&Text\");\n    var desc = pdfh(html, \".video-info-items,1&&Text\");\n    var pic = pdfh(html, \".video-cover&&img&&data-src\");\n    d.push({\n        title: pdfh(html, \".video-info-items,2&&Text\"),\n        desc: desc,\n        pic_url: pic+'@Referer=',\n        url: pic,\n        col_type: 'movie_1_vertical_pic'\n    });\n    d.push({\n        title: content,\n        col_type: 'long_text'\n    });\n    d.push({\n        title: '‘‘磁链列表’’',\n        col_type: 'text_center_1'\n    });\n    for (var list of list) {\n        d.push({\n            title: '‘‘’’<font color= \"#3eaf7c\">' + pdfh(list, \"h4&&Text\") + '</front>',\n            url: pdfh(list, \".module-row-shortcuts&&a&&href\"),\n            col_type: 'text_1'\n        });\n    }\n    d.push({\n        col_type: 'big_big_blank_block'\n    });\n    setResult(d);\n}","title":"Grab4k","url":"hiker://empty##https://www.grab4k.com"},{"interceptor":"//mayi4k.com/vod/down/","rule":"js:\nvar d = [];\n\nlet 列表 = 'body&&.sort-list'\nlet 子列表 = '.module-row-one&&.module-row-info'\nlet 选集名 = '.module-row-title&&Text'\nlet 选集链 = '.btn-pc&&href'\n\nlet 片名 = 'h1&&Text'\nlet 类型 = '.video-info-aux&&Text'\nlet 导演 = '.video-info-items,0&&Text'\nlet 主演 = '.video-info-items,1&&Text'\nlet 更新 = '.video-info-items,2&&Text'\nlet 状态 = '.video-info-items,2&&Text'\nlet 图片 = '.lazyload&&data-src'\nlet 简介 = '.vod_content&&Text'\n\nlet 推荐列表 = '.module-items&&.module-item'\nlet 推荐名 = 'a&&title'\nlet 推荐更 = '.module-item-text&&Text'\nlet 推荐图 = '.lazy&&data-src'\nlet 推荐链 = 'a&&href'\n\n\n\nlet html = getResCode();\nlet Color = \"#f13b66a\";\nlet Color1 = \"#098AC1\";\nlet Color2 = \"#19B89D\";\nlet Colorbs = function() {\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n};\n\ntry {\n    let conts = pdfa(html, 列表);\n    var lists = [];\n    for (let i in conts) {\n        lists.push(pdfa(conts[i], 子列表))\n    }\n} catch (e) {};\n\ntry {\n    var 名 = pdfh(html, 片名).replace(/电影|电视剧|纪录片|动漫|B站/g, '')\n    var 类 = '类型：' + pdfh(html, 类型).replace(/\\/|分类：|电影|连续剧|动漫|类型：/g, '')\n    var 导 = '导演：' + pdfh(html, 导演).replace(/\\/|导演：/g, ' ')\n    var 主 = '主演：' + pdfh(html, 主演).replace(/\\/|主演：|演员：/g, ' ')\n    var 更 = '更新：' + pdfh(html, 更新).replace(/\\/|更新：|更新:|状态：|状态:/g, ' ')\n    var 状 = '状态：' + pdfh(html, 状态).replace(/\\/|状态：|状态:|更新：|更新:/g, ' ')\n    var 图 = pd(html, 图片)\n    var 介 = pdfh(html, 简介).replace(/　|展开|收起|详情：|[收起部分]|概要 :|©豆瓣/g, '')\n} catch (e) {};\n\nlet titles = 导.substring(0, 16) + '\\n' + 主.substring(0, 16) + '\\n' + 更.substring(0, 16);\nlet descs = '片名：' + 名 + '\\n' + 类 + '\\n' + '\\n' + 导 + '\\n' + 主 + '\\n' + '\\n' + 更 + '\\n' + 状 + '\\n' + '\\n' + '剧情简介：' + '\\n' + 介;\n\nd.push({\n    title: '‘‘’’<b><font color=\"#b0e0e6\">' + titles + '</font></b>',\n    desc: '‘‘’’<b><b><font color=\"#708090\">简介：</b>' + '<font color=\"#778899\">' + 介.substr(0, 40) + '...</font><small><font color=\"#996666\">查看详情</font></font></small></b>',\n    pic_url: 图,\n    url: $().rule((text) => {\n        setResult([{\n            title: text,\n            col_type: 'long_text',\n        }])\n    }, descs),\n    col_type: 'movie_1_vertical_pic',\n    extra: {\n        gradient: true\n    }\n});\n\nfor (let i = 0; i < 8; i++) {\n    d.push({\n        col_type: \"blank_block\"\n    })\n}\n\nfunction setLists(lists, index) {\n    d.push({\n        col_type: 'line_blank'\n    })\n}\n\nif (getMyVar('zf', 'f') == 'f') {\n    var sx = '‘‘’’<font color=\"#33ccff\">排序</font>' + '<font color=\"#33ccff\">↡</font>' + '<font color=\"#ff4c00\">↟</font>';\n} else {\n    var sx = '‘‘’’<font color=\"#33ccff\">排序</font>' + '<font color=\"#ff4c00\">↡</font>' + '<font color=\"#33ccff\">↟</font>';\n}\n\nfunction setLists(lists, index) {\n    d.push({\n        title: '‘‘’’<span style=\"color:' + Color2 + '\">磁力链接' + \"<small><font color='grey'>\" + '\\t\\t共 ' + lists[index].length + ' 条' +\n            \"</font></small>\" + '\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span style=\"float:right\">' + sx,\n        url: $('#noLoading#').lazyRule(() => {\n            if (getMyVar('zf', 'f') == 'z') {\n                putMyVar('zf', 'f');\n            } else {\n                putMyVar('zf', 'z');\n            }\n            refreshPage(true);\n            return '#noHistory#hiker://empty'\n        }),\n        col_type: 'text_center_1'\n    })\n\n    if (getMyVar('zf', 'f') == 'f') {\n        var list = lists[index].reverse();\n    } else {\n        var list = lists[index];\n    };\n\n    try {\n        for (let j = 0; j < list.length; j++) {\n            let jm = pdfh(list[j], 选集名).replace(/magnet.*/g, '');\n            let urll = pdfh(list[j], 选集链);\n            if (urll.match(/ed2k|Better/)) {\n                var url = \"download://\" + urll\n            } else {\n                var url = urll.replace(/.*\\]|.*】|.*盘\\：|.*接：|提取码.*/g, '');\n            }\n            d.push({\n                title: jm,\n                url: url,\n                col_type: 'text_center_1',\n                extra: {\n                    id: url,\n                    blockRules: ['.css', '.gif', '.jpg', '.jpeg', '.png', '.ico', '.svg', 'cnzz', 'google', 'xn--*:*', 'hm.baidu.com', '/ads/*.js', '.m3u8', '.mp4'],\n                    jsLoadingInject: true\n                }\n            });\n        }\n    } catch (e) {\n        d.push({\n            title: '暂无片源',\n            url: MY_URL,\n            col_type: 'text_center_1'\n        });\n    }\n};\n\nsetLists(lists, getMyVar(MY_URL, '0'));\n\nd.push({\n    col_type: 'big_blank_block'\n});\nd.push({\n    col_type: 'big_blank_block'\n});\nd.push({\n    col_type: 'big_blank_block'\n});\nd.push({\n    col_type: 'big_blank_block'\n});\n\nif (getMyVar('yn', 'no') == 'no') {\n    var kg = '‘‘’’<font color=\"#33cccc\">相关影视推荐 ▴</font>';\n} else {\n    var kg = '‘‘’’<font color=\"#33cccc\">相关影视推荐 ▾</font>';\n}\n\nd.push({\n    title: kg,\n    url: $('#noLoading#').lazyRule(() => {\n        if (getMyVar('yn', 'no') == 'yes') {\n            putMyVar('yn', 'no');\n        } else {\n            putMyVar('yn', 'yes');\n        }\n        refreshPage(true);\n        return '#noHistory#hiker://empty'\n    }),\n    col_type: 'text_1'\n})\n\nif (getMyVar('yn', 'no') == 'no') {\n    d.push({\n        title: '““””<small><font color=#20b2aa>数据资源收集于网络，软件不提供任何资源！</font></small>',\n        desc: '““””<small><font color=#ff7f50>本规则仅限学习与交流，请导入后24小时内删除，请勿传播！</font></small>',\n        url: MY_URL,\n        col_type: 'text_center_1'\n    });\n} else {\n    var tui = pdfa(html, 推荐列表);\n}\n\nfor (let i in tui) {\n    try {\n        d.push({\n            title: pdfh(tui[i], 推荐名),\n            desc: pdfh(tui[i], 推荐更),\n            pic_url: pd(tui[i], 推荐图),\n            url: $(pd(tui[i], 推荐链) + \"#immersiveTheme#\").rule(() => {\n                require('hiker://page/蚂蚁4K');\n            }),\n            col_type: 'movie_3_marquee'\n        });\n    } catch (e) {};\n};\n\nd.push({\n    title: '<br>',\n    col_type: 'rich_text'\n});\n\nlet conts = pdfa(html, 列表)[0];\nlet list = pdfa(conts, 子列表);\nlet title = pdfh(list[list.length - 1], 选集名);\n\nsetLastChapterRule('js:' + $.toString((title) => {\n    setResult('更新：' + title);\n}, title));\n\nsetResult(d);\n\n//by随风整合\n//二级模板","title":"蚂蚁4K"},{"interceptor":"","rule":"js:\nsetResult([{\n    url: MY_URL.split(\"##\")[1],\n    col_type: \"x5_webview_single\",\n    desc: \"float&&100%\",\n    extra: {\n        canBack: true\n    }\n}])","title":"Poki游戏","url":"hiker://empty##https://poki.cn"},{"interceptor":"","rule":"js:(\n() => {\n    var d = [];\n    d.push({title: \"\", url: MY_URL.split(\"##\")[1], col_type: \"x5_webview_single\", desc: \"100%&&float\", pic_url: \"\", extra: {floatVideo: true, canBack: true, js: $.toString(() => {\n        try {\n            if (document.title && document.title.length) {\n                let r = $$$().lazyRule((t) => {\n                    setPageTitle(t);\n                }\n                , document.title);\n                fy_bridge_app.parseLazyRule(r);\n            }\n        }\n        catch (e) {\n            fy_bridge_app.log(e.toString());\n        }\n    }\n    ), blockRules: [\".gif\", \"/ad/\"]}});\n    setResult(d);\n}\n)()","title":"茶杯狐","url":"hiker://empty##https://cupfox.app/"},{"interceptor":"","rule":"js:\nvar d = [];\nd.push({\n    title: \"\",\n    url: MY_URL.split(\"##\")[1],\n    col_type: \"x5_webview_single\",\n    desc: \"100%&&float\",\n    pic_url: \"\",\n    extra: {\n        floatVideo: true,\n        canBack: true,\n        js: $.toString(() => {\n            try {\n                if (document.title && document.title.length) {\n                    let r = $$$().lazyRule((t) => {\n                        setPageTitle(t);\n                    }, document.title);\n                    fy_bridge_app.parseLazyRule(r);\n                }\n            } catch (e) {\n                fy_bridge_app.log(e.toString());\n            }\n        }),\n        blockRules: ['.gif', '/ad/']\n    }\n});\n\nsetResult(d);","title":"达达龟","url":"hiker://empty##http://www.dadagui.com"},{"interceptor":"https://www\\.52bdys\\.com/.*/.*\\.htm$","rule":"js:\nvar items = [];\nif (MY_URL.includes(\"hiker://empty##\")) {\n    var d = [];\n    d.push({\n        title: \"\",\n        url: MY_URL.split(\"##\")[1],\n        col_type: \"x5_webview_single\",\n        desc: \"100%&&float\",\n        pic_url: \"\",\n        extra: {\n            floatVideo: true,\n            canBack: true,\n            js: $.toString(() => {\n                try {\n                    if (document.title && document.title.length) {\n                        let r = $$$().lazyRule((t) => {\n                            setPageTitle(t);\n                        }, document.title);\n                        fy_bridge_app.parseLazyRule(r);\n                    }\n                } catch (e) {\n                    fy_bridge_app.log(e.toString());\n                }\n            }),\n            blockRules: ['.gif', '/ad/']\n        }\n    });\n    setResult(d);\n} else {\n    //MY_URL = MY_URL.split(\"##\")[1]\n    var html = fetch(MY_URL, {\n        headers: {\n            \"User-Agent\": PC_UA\n        }\n    });\nlet t = pdfh(html, \"head&&title&&Text\");\nsetPageTitle(t);\n    if (html.includes('secondary')) {\n        items.push({\n            title: '在线播放',\n            col_type: 'text_1'\n        });\n        var plist = parseDomForArray(html, 'body&&.secondary');\n\n        var col_type = parseDomForHtml(plist[0], 'a&&Text').length > 5 ? 'text_2' : 'text_4';\n        for (let i in plist) {\n            items.push({\n                title: parseDomForHtml(plist[i], 'a&&Text'),\n                url: 'x5://' + parseDom(plist[i], 'a&&href'),\n                col_type: col_type,\n                extra: {\n                    blockRules: ['baidu.com', 'google', 'srgwxvm.cn', 'aliys.net', '/images/close.png', '/wwpic/51986_tU3e8L-mTtuXB6L_1650902996/0']\n                }\n            });\n        }\n    };\n\n    if (html.includes('id=\"download-list')) {\n        items.push({\n            title: '下载地址(磁力/电驴)',\n            col_type: 'text_1'\n        });\n        var mid = parseDomForHtml(html, '#reply-form&&input&&value');\n        var json = JSON.parse(request('https://www.52bdys.com/downloadInfo/list?mid=' + mid, {\n            headers: {\n                \"Referer\": \"https://www.52bdys.com\"\n            }\n        }));\n        for (let i in json) {\n            items.push({\n                title: json[i].downloadCategory.name,\n                url: json[i].url,\n                col_type: 'text_3'\n            });\n        }\n    };\n\n    if (html.includes('id=\"torrent-list')) {\n        items.push({\n            title: '种子列表',\n            col_type: 'text_1'\n        });\n        var trlist = parseDomForArray(html, '#torrent-list&&.item');\n        for (let i in trlist) {\n            items.push({\n                title: parseDomForHtml(trlist[i], 'a&&Text'),\n                url: parseDom(trlist[i], 'a&&href') + \";{Referer@\" + MY_URL + \"}\",\n                col_type: 'text_center_1'\n            });\n        }\n    };\n    setResult(items);\n}","title":"哔嘀","url":"hiker://empty##https://www.52bdys.com/"},{"interceptor":"","rule":"js:\nvar d = [];\nd.push({\n    title: \"播放\",\n    url: $.toString(() => {\n        return input;\n    }),\n    col_type: \"input\",\n    desc: \"请输入链接\",\n    pic_url: \"\"\n});\nd.push({\n    title: \"““””<small>支持磁力、电驴、种子、FTP、HTTP、RTMP等多种格式</small>\",\n    url: \"hiker://empty\",\n    col_type: \"text_center_1\"\n});\n\nsetResult(d);","title":"磁力云播","url":"hiker://empty"},{"interceptor":"","rule":"js:\nvar html = getResCode();\nvar list = parseDomForArray(html, '.articleContent&&p');\nvar items = [];\nitems.push({\n    title: '““””<h4>' + parseDomForHtml(html, '.articleTitle&&h2&&Text') + '</h4>' + parseDomForHtml(html, '.articleAuthorName&&Text'),\n    url: MY_URL,\n    col_type: 'text_center_1'\n})\nitems.push({\n    title: (list.join(\"<br>\")).replace(/<p>/g, \"<br>\").replace(/<\\/p>/g, \"\"),\n    url: '',\n    col_type: 'rich_text',\n    extra: {\n        click: true\n    }\n});\nitems.push({\n    title: \"再来一篇\",\n    url: $(\"#noLoading#\").lazyRule(() => {\n        refreshPage(true);\n        return \"hiker://empty\"\n    }),\n    col_type: \"text_center_1\"\n});\n\nsetResult({\n    data: items\n});","title":"每日一文","ua":"mobile","url":"https://meiriyiwen.com/random/iphone;get;utf-8;{Host@meiriyiwen.com}"},{"interceptor":"hiker://empty##**","pages":"[{\"col_type\":\"movie_3\",\"name\":\"目录\",\"path\":\"catalogue\",\"rule\":\"js:\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet readTheme = getItem('readTheme', 'false') == 'true' ? '#readTheme#' : '',\\n    fullTheme = getItem('fullTheme', 'true') == 'true' ? '#fullTheme#' : '',\\n    url = MY_PARAMS.href,\\n    data_list = JSON.parse(request(url, {\\n        headers: headers\\n    })).data_list;\\n\\nlet d = [];\\nd.push({\\n    title: data_list.title + \\\"\\\\n\\\" + data_list.qishu,\\n    desc: \\\"““””\\\" + \\\"点我查看往期期刊\\\".bold().big(),\\n    img: data_list.img,\\n    col_type: 'movie_1_vertical_pic_blur',\\n    url: \\\"hiker://page/history\\\",\\n    extra: {\\n        href: \\\"https://api.lifves.com/magazine/history?mag_id=\\\" + data_list.mag_id,\\n        title: data_list.title,\\n        img: data_list.img\\n    }\\n})\\nd.push({\\n    title: '目录'.big().bold(),\\n    col_type: 'rich_text'\\n})\\n\\nlet stroge = {};\\nfor (let i in data_list.ml) {\\n    let list = data_list.ml[i].list;\\n    for (let j in list) {\\n        stroge[list[j].title] = \\\"https://api.lifves.com/magazine/read?read_id=\\\" + list[j].read_id;\\n    }\\n}\\nsaveFile('stroge', JSON.stringify(stroge));\\nlet star = Object.keys(stroge);\\n\\nfor (let i in data_list.ml) {\\n    let item = data_list.ml[i];\\n    d.push({\\n        title: '““””<strong>▶' + item.title + '</strong>',\\n        col_type: 'text_1',\\n        url: \\\"hiker://empty\\\",\\n        extra: {\\n            lineVisible: false\\n        }\\n    })\\n\\n    item.list.forEach(e => {\\n        let index = star.indexOf(e.title);\\n        d.push({\\n            title: '““””&nbsp;&nbsp;&nbsp;&nbsp;•' + e.title,\\n            col_type: 'text_1',\\n            url: 'hiker://page/text' + fullTheme + readTheme,\\n            extra: {\\n                lineVisible: false,\\n                href: \\\"https://api.lifves.com/magazine/read?read_id=\\\" + e.read_id,\\n                index: index\\n            }\\n        })\\n    })\\n}\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"获取请求头\",\"path\":\"getHeaders\",\"rule\":\" function random_char(t) {\\n     for (var n = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'], i = '', e = 0; e < t; e++) {\\n         var o = Math.ceil(35 * Math.random())\\n         i += n[o]\\n     }\\n     return i\\n }\\n\\n function getSecretdate() {\\n     var t = parseInt((new Date()).getTime() / 1e3)\\n     var n = random_char(32)\\n     var i = 'timestamp=' + t + '&nonce=' + n\\n     return i\\n }\\n\\n\\n var secretdate = getSecretdate()\\n var secreted = md5(secretdate + 'apilifves5201314')\\n\\n var headers = {\\n     'Secret-Date': secretdate,\\n     'Secreted': secreted,\\n     \\\"Content-Type\\\": \\\"application/json;charset=utf-8\\\"\\n }\"},{\"col_type\":\"movie_3\",\"name\":\"往期期刊\",\"path\":\"history\",\"rule\":\"js:\\naddListener('onClose', 'clearVar(\\\"year\\\")');\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet d = [],\\n    {\\n        href: url,\\n        title: name,\\n        img\\n    } = MY_PARAMS,\\n    collection = JSON.parse(readFile('collection') || '{}'),\\n    isCollected = !!(collection[name] && collection[name].url == url),\\n    data_list = JSON.parse(request(url, {\\n        headers: headers\\n    })).data_list;\\nsetPageTitle(name);\\nsetLastChapterRule('js:' + $.toString(() => {\\n    eval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\n    let url = MY_PARAMS.href,\\n        data_list = JSON.parse(request(url, {\\n            headers: headers\\n        })).data_list,\\n        data = data_list[0].data[0].qishu;\\n    setResult('最新：' + data);\\n}));\\nd.push({\\n    title: isCollected ? '♥已收藏' : '♡添加收藏',\\n    url: $().lazyRule((is, url, name, img) => {\\n        let collection = JSON.parse(readFile('collection') || '{}');\\n        if (is) {\\n            delete collection[name];\\n            saveFile('collection', JSON.stringify(collection));\\n            refreshPage();\\n            return 'toast://已取消收藏'\\n        } else {\\n            collection[name] = {\\n                url: url,\\n                img: img\\n            };\\n            saveFile('collection', JSON.stringify(collection));\\n            refreshPage();\\n            return 'toast://已添加收藏'\\n        }\\n    }, isCollected, url, name, img),\\n    col_type: \\\"scroll_button\\\",\\n});\\n\\nlet data = {},\\n    now = getVar('year', String(data_list[0].year));\\nfor (let list of data_list) {\\n    if (now == list.year) data = list.data;\\n    d.push({\\n        title: '““””' + (list.year == now ? '<font color=red>' + list.year + '</font>' : list.year),\\n        col_type: 'scroll_button',\\n        url: $().lazyRule((year) => {\\n            putVar('year', String(year));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, list.year)\\n    });\\n}\\nfor (let item of data) {\\n    d.push({\\n        title: item.qishu,\\n        url: 'hiker://page/catalogue#immersiveTheme#',\\n        img: item.img,\\n        extra: {\\n            href: \\\"https://api.lifves.com/magazine/book?mag_id=\\\" + item.mag_id + \\\"&qishu=\\\" + item.qishu\\n        }\\n    });\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"文章\",\"path\":\"text\",\"rule\":\"js:\\naddListener('onClose', $.toString(() => {\\n    clearVar('texthref');\\n    clearVar('texttitle');\\n    clearVar('textindex');\\n}));\\nlet click = getItem('click', 'true'),\\n    fontsize = parseInt(getItem('fontsize', String(17))),\\n    indent = parseInt(getItem('indent', String(7))),\\n    indents = '';\\nfor (let i = 0; i < indent; i++) {\\n    indents += '&nbsp;';\\n}\\nlet stroge = JSON.parse(readFile('stroge')),\\n    star = Object.keys(stroge);\\n\\neval(JSON.parse(fetch(\\\"hiker://page/getHeaders\\\")).rule);\\nlet index = parseInt(getVar('textindex') || MY_PARAMS.index),\\n    href = getVar('texthref', '') || MY_PARAMS.href,\\n    data_list = JSON.parse(request(href, {\\n        headers: headers\\n    })).data_list;\\n\\nlet d = [];\\nd.push({\\n    title: '““””<h2>' + data_list.title + '</h2>',\\n    col_type: 'text_center_1',\\n    url: \\\"http://qk.demo.lifves.com/book/read/\\\" + data_list.mag_id + \\\"/\\\" + data_list.qishu + \\\"/\\\" + data_list.read_id,\\n    extra: {\\n        lineVisible: false\\n    }\\n}, {\\n    title: data_list.content.replace(/\\\\>[a-zA-Z0-9+=\\\\/]*\\\\</g, '><').replace(/(\\\\<p\\\\>\\\\s*)+\\\\</g,'<').replace(/\\\\<p\\\\>/g, '<p>' + indents),\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: fontsize,\\n        click: click\\n    }\\n})\\nif (index != 0) {\\n    let title = star[index - 1];\\n    let href = stroge[title];\\n    d.push({\\n        title: '上一篇:' + title,\\n        col_type: 'text_center_1',\\n        url: $('hiker://empty#noLoading#').lazyRule((href, title, index) => {\\n            putVar('texthref', href);\\n            putVar('texttitle', title);\\n            putVar('textindex', String(index - 1));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, href, title, index),\\n        extra: {\\n            href: href,\\n            lineVisible: false\\n        }\\n    })\\n}\\nif (index != star.index) {\\n    let title = star[index + 1];\\n    let href = stroge[title];\\n    d.push({\\n        title: '下一篇:' + title,\\n        col_type: 'text_center_1',\\n        url: $('hiker://empty#noLoading#').lazyRule((href, title, index) => {\\n            putVar('texthref', href);\\n            putVar('texttitle', title);\\n            putVar('textindex', String(index + 1));\\n            refreshPage();\\n            return 'hiker://empty'\\n        }, href, title, index),\\n        extra: {\\n            href: href,\\n            lineVisible: false\\n        }\\n    })\\n}\\nfor (let i = 0; i < 10; i++) {\\n    d.push({\\n        col_type: 'blank_block'\\n    })\\n}\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"设置页\",\"path\":\"setting\",\"rule\":\"js:\\nlet d = [];\\nlet fontsize = parseInt(getItem('fontsize', String(17)));\\nlet indent = parseInt(getItem('indent', String(7)));\\nlet indents = '';\\nfor (let i = 0; i < indent; i++) {\\n    indents += '&nbsp;';\\n}\\nlet readTheme = getItem('readTheme','false');\\nlet fullTheme = getItem('fullTheme', 'true');\\nlet click = getItem('click', 'true');\\n\\nd.push({\\n    title: '阅读模式' + (readTheme == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: readTheme == 'true' ? $('hiker://empty#noLoading#').lazyRule(() => {\\n        setItem('readTheme', 'false');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }) :$('注意：开启阅读模式后,全屏模式设置和字号设置将不起作用！').confirm(() => {\\n        setItem('readTheme', 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    })\\n})\\nd.push({\\n    title: '全屏模式' + (fullTheme == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: $('hiker://empty#noLoading#').lazyRule((i) => {\\n        setItem('fullTheme', i == 'true' ? 'false' : 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, fullTheme)\\n})\\nd.push({\\n    title: '点击翻页' + (click == 'true' ? '✔' : '✘'),\\n    col_type: 'text_3',\\n    url: $('hiker://empty#noLoading#').lazyRule((i) => {\\n        setItem('click', i == 'true' ? 'false' : 'true');\\n        refreshPage();\\n        return 'hiker://empty';\\n    }, click)\\n})\\n\\nd.push({\\n    title: '调整字号'.big().bold(),\\n    col_type: 'rich_text'\\n})\\nd.push({\\n    title: '字号➕',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('fontsize', String(s + 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, fontsize)\\n}, {\\n    title: '字号➖',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('fontsize', String(s - 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, fontsize)\\n})\\n\\nd.push({\\n    col_type: 'line'\\n})\\n\\nd.push({\\n    title: '调整缩进'.big().bold(),\\n    col_type: 'rich_text'\\n})\\nd.push({\\n    title: '缩进➕',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('indent', String(s + 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, indent)\\n}, {\\n    title: '缩进➖',\\n    col_type: 'flex_button',\\n    url: $(\\\"hiker://empty#noLoading#\\\").lazyRule((s) => {\\n        setItem('indent', String(s - 1));\\n        refreshPage(false);\\n        return \\\"hiker://empty\\\"\\n    }, indent)\\n})\\n\\nd.push({\\n    col_type: 'line'\\n})\\n\\nd.push({\\n    title: '预览'.big() + '(字号:' + fontsize + ',缩进:' + indent + ')',\\n    col_type: 'rich_text'\\n}, {\\n    title: '<p>小棉袄帅吗?</p><p>小棉袄怎么这么帅？</p><p>小棉袄真是超超超超超超超超级帅!!!!帅炸了好不好？举世颜无双!!!!</p>'.replace(/\\\\<p\\\\>/g, '<p>' + indents),\\n    col_type: 'rich_text',\\n    extra: {\\n        textSize: fontsize\\n    }\\n})\\nsetResult(d);\"}]","rule":"js:\nlet d = [];\nlet now = getItem('now', '推荐期刊');\nif (MY_PAGE == 1) {\n    let arr = ['推荐期刊', '热门期刊', '收藏'];\n    for (let it of arr) {\n        d.push({\n            title: now == it ? '““””' + it.fontcolor('red') : it,\n            col_type: 'scroll_button',\n            url: $('').lazyRule((it) => {\n                setItem(\"now\", it);\n                refreshPage();\n                return 'hiker://empty';\n            }, it)\n        })\n    }\n    d.push({\n        title: '规则设置',\n        col_type: 'scroll_button',\n        url: 'hiker://page/setting'\n    });\n}\nif (now == '推荐期刊' || now == '热门期刊') {\n    eval(JSON.parse(fetch(\"hiker://page/getHeaders\")).rule);\n    let category_id = now == \"推荐期刊\" ? 0 : 1,\n        qk_list = JSON.parse(request(\"https://api.lifves.com/magazine/more?category_id=\" + category_id + \"&page=\" + MY_PAGE, {\n            headers: headers\n        })).data_list;\n    for (let i in qk_list) {\n        let it = qk_list[i];\n        d.push({\n            title: it.title,\n            desc: it.qishu,\n            img: it.img,\n            col_type: 'movie_3',\n            url: 'hiker://page/catalogue#immersiveTheme#',\n            extra: {\n                href: 'https://api.lifves.com/magazine/book?mag_id=' + it.mag_id + '&qishu=' + it.qishu,\n            }\n        });\n    }\n} else if (now == '收藏') {\n    if (MY_PAGE == 1) {\n        let collection = JSON.parse(readFile('collection') || '{}');\n        for (let i in collection) {\n            let it = collection[i];\n            d.push({\n                title: i,\n                col_type: 'movie_3',\n                img: it.img,\n                url: 'hiker://page/history',\n                extra: {\n                    href: it.url,\n                    title: i,\n                    img: it.img\n                }\n            })\n        }\n    }\n}\nsetResult(d);","title":"期刊杂志demo","ua":"mobile","url":"hiker://empty##fypage"},{"title":"第一小说.","url":"hiker://empty##https://m.01xs.com/","interceptor":"https://m.01xs.com/xiaoshuo/.*/.*","rule":"js:\nif (MY_URL.endsWith(\"https://m.01xs.com/\")) {\n    setResult([{\n        url: MY_URL.split(\"##\")[1],\n        col_type: \"x5_webview_single\",\n        desc: \"100%&&float\"\n    }])\n} else {\n    MY_URL = MY_URL.replace(\"https://m.01xs.com/\", \"https://www.01xs.com/\");\n    var d = [];\n    var html = fetch(MY_URL, {\n        headers: {\n            \"User-Agent\": PC_UA\n        }\n    });\n\n    getResCode = () => {\n        return html;\n    }\n\n    var conts = parseDomForArray(html, '.chapterlist,1&&ul');\n\n    var lists = [];\n    for (var i in conts) {\n        lists.push(parseDomForArray(conts[i], 'body&&a'))\n    }\n\n    var des_desc = '简介：' + parseDomForHtml(html, '.articleinfo&&.p3&&Text').substring(0, 28) + '...查看详情';\n    let na = pdfh(getResCode(), '.articleinfo&&img&&alt').replace(getUrl() + \"/\", \"\")\n    setPageTitle(na);\n    d.push({\n        title: '书名：' + na + '\\n' + parseDomForHtml(getResCode(), '.articleinfo&&.author&&Text').replace(getUrl() + \"/\", \"\") + '\\t' + '\\t' + parseDomForHtml(getResCode(), '.articleinfo&&.p4&&Text').split('文章')[1].replace(getUrl() + \"/\", \"\") + '\\n' + parseDomForHtml(getResCode(), '.articleinfo&&.p4,2&&Text').replace(getUrl() + \"/\", \"\"),\n        desc: des_desc,\n        pic_url: parseDom(getResCode(), '.articleinfo&&img&&src'),\n        url: 'hiker://empty#' + '　　' + parseDomForHtml(html, '.articleinfo&&.p3&&Text') + `@rule=js:var res = {}; var d = [];d.push({title: MY_URL.split('hiker://empty#')[1],col_type: 'rich_text',extra: {textSize: 20}});res.data = d; setHomeResult(res);`,\n        col_type: 'movie_1_vertical_pic'\n    });\n\n    d.push({\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\"color: #FF0000\">目录</span></b>' : '““””<b><span style=\"color: #1aad19\">目录</span></b>',\n        url: `@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切换排序成功'`,\n        col_type: 'text_center_1'\n    })\n\n    function setLists(lists, index) {\n        var list = lists[index];\n        d.push({\n            col_type: 'big_blank_block'\n        });\n        d.push({\n            col_type: 'big_blank_block'\n        });\n        if (getVar('shsort') == '1') {\n            for (var j = list.length - 1; j >= 0; j--) {\n                var jm = parseDomForHtml(list[j], 'Text');\n                d.push({\n                    title: jm,\n                    url: parseDom(list[j], 'a&&href') + \"#autoPage##readTheme#\" + `@rule=js:` + $.toString(() => {\n                        let d = [];\n                        var des_title = parseDomForHtml(getResCode(), '#c1&&h1&&Text');\n                        d.push({\n                            title: '<big>' + des_title + '</big>',\n                            col_type: 'rich_text',\n                            extra: {\n                                click: true\n                            }\n                        });\n                        let cont = parseDomForArray(getResCode(), '#content&&p');\n                        let html = cont.map(it => '　　' + parseDomForHtml(it, 'p&&Html')).join(\"<br><br>\");\n                        d.push({\n                            title: html,\n                            col_type: \"rich_text\",\n                            extra: {\n                                textSize: 18,\n                                click: true\n                            }\n                        });\n                        setResult(d);\n                    }),\n                    col_type: jm.length > 5 ? 'text_1' : 'text_1',\n                });\n            }\n        } else {\n            for (var j = 0; j < list.length; j++) {\n                var jm = parseDomForHtml(list[j], 'Text');\n                d.push({\n                    title: jm,\n                    url: parseDom(list[j], 'a&&href') + \"#autoPage##readTheme#\" + `@rule=js:` + $.toString(() => {\n                        let d = [];\n                        var des_title = parseDomForHtml(getResCode(), '#c1&&h1&&Text');\n                        d.push({\n                            title: '<big>' + des_title + '</big>',\n                            col_type: 'rich_text',\n                            extra: {\n                                click: true\n                            }\n                        });\n                        let cont = parseDomForArray(getResCode(), '#content&&p');\n                        let html = cont.map(it => '　　' + parseDomForHtml(it, 'p&&Html')).join(\"<br><br>\");\n                        d.push({\n                            title: html,\n                            col_type: \"rich_text\",\n                            extra: {\n                                textSize: 18,\n                                click: true\n                            }\n                        });\n                        setResult(d);\n                    }),\n                    col_type: jm.length > 5 ? 'text_1' : 'text_1',\n                });\n            }\n        }\n    }\n    setLists(lists, getVar(MY_URL, '0'));\n    d.push({\n        title: '<br>',\n        col_type: 'rich_text'\n    });\n    setResult(d);\n}","ua":"pc","pages":"[]"}]
